// Code generated for package sync by go-bindata DO NOT EDIT. (@generated)
// sources:
// data/ClusterResourceQuota.quota.openshift.io/loadbalancer-quota.yaml
// data/ClusterResourceQuota.quota.openshift.io/persistent-volume-quota.yaml
// data/ClusterRole.rbac.authorization.k8s.io/managed-velero-operator.yaml
// data/ClusterRole.rbac.authorization.k8s.io/osd-sre-admin.yaml
// data/ClusterRole.rbac.authorization.k8s.io/sre-pruner-buildsdeploys-cr.yaml
// data/ClusterRoleBinding.rbac.authorization.k8s.io/managed-valero-operator.yaml
// data/ClusterRoleBinding.rbac.authorization.k8s.io/osd-sre-admin.yaml
// data/ClusterRoleBinding.rbac.authorization.k8s.io/osd-sre-cluster-admins.yaml
// data/ClusterRoleBinding.rbac.authorization.k8s.io/sre-pruner-buildsdeploys-pruning.yaml
// data/ClusterRoleBinding.rbac.authorization.k8s.io/sre-pruner-images.yaml
// data/ClusterRoleBinding.rbac.authorization.k8s.io/valero.yaml
// data/ConfigMap/openshift-config/osd-ldap-ca-configmap.yaml
// data/ConfigMap/openshift-logging/curator.yaml
// data/ConfigMap/openshift-monitoring/cluster-monitoring-config.yaml
// data/Console.operator.openshift.io/cluster.yaml
// data/CredentialsRequest.cloudcredential.openshift.io/openshift-valero/managed-velero-operator-iam-credentials.yaml
// data/CronJob/openshift-sre-pruning/build-pruner.yaml
// data/CronJob/openshift-sre-pruning/deployments-pruner.yaml
// data/CronJob/openshift-sre-pruning/image-pruner.yaml
// data/CustomResourceDefinition.apiextensions.k8s.io/veleros.managed.openshift.io.yaml
// data/Deployment.apps/openshift-velero/managed-velero-operator.yaml
// data/Group.user.openshift.io/osd-sre-cluster-admins.yaml
// data/Namespace/openshift-codeready-workspaces.yaml
// data/Namespace/openshift-logging.yaml
// data/Namespace/openshift-sre-pruning.yaml
// data/Namespace/openshift-valero.yaml
// data/OperatorGroup.operators.coreos.com/openshift-codeready-workspaces/openshift-codeready-workspaces.yaml
// data/OperatorGroup.operators.coreos.com/openshift-logging/openshift-logging.yaml
// data/PrometheusRule.monitoring.coreos.com/openshift-monitoring/sre-alerts-stuck-builds.yaml
// data/PrometheusRule.monitoring.coreos.com/openshift-monitoring/sre-alerts-stuck-volumes.yaml
// data/PrometheusRule.monitoring.coreos.com/openshift-monitoring/sre-cluster-operator-down-alerts.yaml
// data/PrometheusRule.monitoring.coreos.com/openshift-monitoring/sre-configure-alertmanager-operator-offline-alerts.yaml
// data/PrometheusRule.monitoring.coreos.com/openshift-monitoring/sre-dedicated-admin-operator-offline-alerts.yaml
// data/PrometheusRule.monitoring.coreos.com/openshift-monitoring/sre-dns-alerts.yaml
// data/PrometheusRule.monitoring.coreos.com/openshift-monitoring/sre-ebs-iops-burstbalance.yaml
// data/PrometheusRule.monitoring.coreos.com/openshift-monitoring/sre-excessive-memory.yaml
// data/PrometheusRule.monitoring.coreos.com/openshift-monitoring/sre-filesysfull.yaml
// data/PrometheusRule.monitoring.coreos.com/openshift-monitoring/sre-machine-api-node-mismatch.yaml
// data/PrometheusRule.monitoring.coreos.com/openshift-monitoring/sre-node-unschedulable.yaml
// data/PrometheusRule.monitoring.coreos.com/openshift-monitoring/sre-ocp-overrides.yaml
// data/PrometheusRule.monitoring.coreos.com/openshift-monitoring/sre-pruning.yaml
// data/PrometheusRule.monitoring.coreos.com/openshift-monitoring/sre-router-health.yaml
// data/PrometheusRule.monitoring.coreos.com/openshift-monitoring/sre-telemeter-client.yaml
// data/ResourceQuota/openshift-logging/logging-storage-quota.yaml
// data/Role.rbac.authorization.k8s.io/kube-system/cluster-config-v1-reader.yaml
// data/Role.rbac.authorization.k8s.io/openshift-codeready-workspaces/dedicated-admins-openshift-codeready-workspaces.yaml
// data/Role.rbac.authorization.k8s.io/openshift-logging/dedicated-admins-openshift-logging.yaml
// data/Role.rbac.authorization.k8s.io/openshift-velero/ managed-velero-operator.yaml
// data/Role.rbac.authorization.k8s.io/openshift-velero/prometheus-k8s.yaml
// data/RoleBinding.rbac.authorization.k8s.io/kube-system/managed-valero-operator-cluster-config-v1-reader.yaml
// data/RoleBinding.rbac.authorization.k8s.io/openshift-codeready-workspaces/dedicated-admins-openshift-codeready-workspaces.yaml
// data/RoleBinding.rbac.authorization.k8s.io/openshift-logging/dedicated-admins-openshift-logging.yaml
// data/RoleBinding.rbac.authorization.k8s.io/openshift-valero/managed-valero-operator.yaml
// data/RoleBinding.rbac.authorization.k8s.io/openshift-valero/prometheus-k8s.yaml
// data/Schedule.valero.io/openshift-velero/daily-full-backup.yaml
// data/Schedule.valero.io/openshift-velero/hourly-object-backup.yaml
// data/Schedule.valero.io/openshift-velero/weekly-full-backup.yaml
// data/Secret/openshift-config/osd-oauth-templates-errors.yaml
// data/Secret/openshift-config/osd-oauth-templates-login.yaml
// data/Secret/openshift-config/osd-oauth-templates-providers.yaml
// data/SelectorSyncIdentityProvider.hive.openshift.io/osd-sre-idenitityprovider.yaml
// data/SelectorSyncSet.hive.openshift.io/kubelet-config.yaml
// data/SelectorSyncSet.hive.openshift.io/osd-curated-operators.yaml
// data/SelectorSyncSet.hive.openshift.io/osd-oauth-templates.yaml
// data/SelectorSyncSet.hive.openshift.io/osd-registry.yaml
// data/SelectorSyncSet.hive.openshift.io/resource-quotas.yaml
// data/ServiceAccount/openshift-sre-prunning/sre-pruner-sa.yaml
// data/ServiceAccount/openshift-valero/managed-valero-operator.yaml
// data/ServiceAccount/openshift-valero/valero.yaml
// data/Velero.managed.openshift.io/openshift-valero/cluster.yaml
package sync

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// Mode return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _clusterresourcequotaQuotaOpenshiftIoLoadbalancerQuotaYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\x8f\xbd\x6e\xeb\x30\x0c\x85\x77\x3d\x05\x91\xdd\x09\xee\x1d\xb5\xb6\x59\x0b\xb4\x43\x77\x46\x3e\xa9\x85\x48\xa2\x2a\xd2\xae\xfb\xf6\x85\x7f\x06\x67\xa3\x88\x43\x7d\xdf\xe1\x1a\x3f\xd1\x34\x4a\xf1\xf4\x3d\x8a\xf1\x59\x2a\x8a\x0e\xf1\x6e\xe7\x28\x97\xe9\x9f\x7b\xc4\xd2\x7b\x7a\x49\xa3\x1a\xda\x07\x54\xc6\x16\xf0\xbe\x44\x5d\x86\x71\xcf\xc6\xde\x11\x25\xbe\x21\xe9\x32\x11\x71\x8d\x87\x6f\x82\xe4\x4b\xe6\xc2\x5f\xe8\x3d\x9d\xac\x8d\x38\xad\xa9\x21\x4e\x78\xa6\x85\x0d\xd2\xd5\xc4\x76\x97\x96\x3d\xf1\x8f\x3a\xa2\xc2\x19\x9e\x92\x70\x7f\xe3\xc4\x25\xa0\x75\xab\xab\xd3\x8a\xb0\x20\xd7\xd7\xc6\x1e\xb8\xf5\xdb\x44\xa4\x68\x53\x0c\xd0\xf3\xf1\x54\x3d\x9d\xfe\x2f\x06\x8a\x84\x60\xd2\x76\xe7\x52\xc4\xd8\xa2\x14\xf5\x54\xc6\x94\xd6\xed\xb1\x15\x51\x66\x0b\xc3\x75\xae\x0d\xaa\x6b\x70\xdf\x77\xf4\xc0\xaf\xa7\xbd\xe4\x73\xa7\xdd\xa1\x4b\xb7\xcd\xb9\xc3\x8c\x5c\x6d\xbf\x24\x92\x8a\xc6\x8b\x05\xbd\x0a\xf4\x4d\xec\x3a\x47\x35\xf7\x17\x00\x00\xff\xff\xf8\x81\x76\x9d\x98\x01\x00\x00")

func clusterresourcequotaQuotaOpenshiftIoLoadbalancerQuotaYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterresourcequotaQuotaOpenshiftIoLoadbalancerQuotaYaml,
		"ClusterResourceQuota.quota.openshift.io/loadbalancer-quota.yaml",
	)
}

func clusterresourcequotaQuotaOpenshiftIoLoadbalancerQuotaYaml() (*asset, error) {
	bytes, err := clusterresourcequotaQuotaOpenshiftIoLoadbalancerQuotaYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterResourceQuota.quota.openshift.io/loadbalancer-quota.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterresourcequotaQuotaOpenshiftIoPersistentVolumeQuotaYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\x8f\xbb\x6e\x2b\x31\x0c\x44\x7b\x7d\x05\xe1\x7e\xfd\x68\xd5\xde\x6b\xa4\x0b\x90\x14\xe9\x99\xdd\xb1\x57\xb0\x24\xca\x22\xb5\x71\xfe\x3e\xd8\x47\x61\x77\x14\x31\xe2\x39\xc3\x25\x7c\xa1\x6a\x90\xec\xe9\xde\xc4\x78\x2f\x05\x59\xc7\x70\xb1\x7d\x90\xc3\x74\x72\xb7\x90\x07\x4f\xff\x62\x53\x43\xfd\x84\x4a\xab\x3d\x3e\xe6\xa8\x4b\x30\x1e\xd8\xd8\x3b\xa2\xc8\xdf\x88\x3a\x4f\x44\x5c\xc2\xd3\x99\x5e\xd2\x21\x71\xe6\x2b\x06\x4f\x3b\xab\x0d\xbb\x25\x35\x86\x09\xaf\xb4\x7e\x85\x74\x25\xb2\x5d\xa4\x26\x4f\xfc\xa3\x8e\x28\x73\x82\xa7\x32\x7b\xaa\x21\x5b\x37\x49\x6c\x09\xdd\x22\xec\xb4\xa0\x9f\xb9\xcb\x6b\x15\x18\xb9\x0e\xeb\x44\x54\x71\x6f\x50\xd3\xbd\x9a\x54\xbe\xc2\xd3\xe9\x78\x7c\x0b\x8e\x48\x11\xd1\x9b\xd4\x4d\x3a\x67\x31\xb6\x20\x59\x3d\xe5\x16\xe3\xb2\x7d\xae\x45\x94\xd8\xfa\xf1\xfc\x28\x15\xaa\x4b\x70\xdb\x77\x74\xc3\xaf\xa7\xad\xe5\x6b\xa9\x0d\xdb\x95\x69\xf5\xed\xf0\x40\x2a\xb6\xfd\x24\x92\x82\xca\xb3\x05\xfd\x17\xe8\xbb\xd8\xf9\x11\xd4\xdc\x5f\x00\x00\x00\xff\xff\x28\xbb\x09\x73\x99\x01\x00\x00")

func clusterresourcequotaQuotaOpenshiftIoPersistentVolumeQuotaYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterresourcequotaQuotaOpenshiftIoPersistentVolumeQuotaYaml,
		"ClusterResourceQuota.quota.openshift.io/persistent-volume-quota.yaml",
	)
}

func clusterresourcequotaQuotaOpenshiftIoPersistentVolumeQuotaYaml() (*asset, error) {
	bytes, err := clusterresourcequotaQuotaOpenshiftIoPersistentVolumeQuotaYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterResourceQuota.quota.openshift.io/persistent-volume-quota.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterroleRbacAuthorizationK8sIoManagedVeleroOperatorYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8e\xb1\x4e\xc4\x30\x0c\x86\xf7\x3c\x85\xb7\x93\x90\xae\x88\x0d\x65\x65\x60\x67\x60\xf7\xa5\x6e\x6b\x5d\x6b\x47\xb6\x53\x10\x4f\x8f\x7a\x04\x06\x60\x4a\x6c\x7f\xfa\xff\x0f\x2b\xbf\x92\x39\xab\x64\xb0\x0b\x96\x01\x5b\x2c\x6a\xfc\x81\xc1\x2a\xc3\xf5\xd1\x07\xd6\xfb\xfd\x21\x5d\x59\xc6\x0c\x4f\x6b\xf3\x20\x7b\xd1\x95\xd2\x46\x81\x23\x06\xe6\x04\x20\xb8\x51\x86\x0d\x05\x67\x1a\xcf\x3b\xad\x64\x7a\xd6\x4a\x86\xa1\xd6\xef\x5e\xb1\x50\x06\xad\x24\xbe\xf0\x14\x1d\x4b\xd6\x56\xf2\x9c\xce\x80\x95\x9f\x4d\x5b\xf5\x23\xf1\x36\xd2\x7b\x90\x1c\x72\xde\x4d\x12\x80\x91\x6b\xb3\x42\x9d\x2a\xcd\x43\xb7\xef\xe5\x48\x13\x0b\x1f\xea\x9e\x00\x76\xb2\x4b\xc7\x4e\x77\xa7\xbf\x0d\x45\x65\xe2\x79\xf8\x31\xfa\xb7\x80\x65\x32\xf4\xb0\x56\xa2\x19\xfd\x8a\x9d\x29\x6e\xef\xca\xfe\xf5\x79\xc3\x28\x4b\xfa\x0c\x00\x00\xff\xff\x60\x4a\x8b\x6c\x56\x01\x00\x00")

func clusterroleRbacAuthorizationK8sIoManagedVeleroOperatorYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterroleRbacAuthorizationK8sIoManagedVeleroOperatorYaml,
		"ClusterRole.rbac.authorization.k8s.io/managed-velero-operator.yaml",
	)
}

func clusterroleRbacAuthorizationK8sIoManagedVeleroOperatorYaml() (*asset, error) {
	bytes, err := clusterroleRbacAuthorizationK8sIoManagedVeleroOperatorYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRole.rbac.authorization.k8s.io/managed-velero-operator.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterroleRbacAuthorizationK8sIoOsdSreAdminYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x95\xc1\x8e\xda\x40\x0c\x86\xef\x79\x8a\x68\x2f\x2b\x55\x02\xd4\x5b\xc5\xb5\x87\x5e\x7a\x42\x6a\xef\x66\xc6\x09\x5e\x86\xf1\xd4\xf6\x84\xee\x3e\x7d\x95\x04\x54\x42\x02\x64\xbb\x3d\x11\x66\xfe\x7c\xf6\xd8\xff\x38\x90\xe8\x27\x8a\x12\xc7\x75\x29\x5b\x70\x4b\xc8\xb6\x63\xa1\x37\x30\xe2\xb8\xdc\x7f\xd1\x25\xf1\xaa\xf9\x5c\xec\x29\xfa\x75\xf9\x35\x64\x35\x94\x0d\x07\x2c\x0e\x68\xe0\xc1\x60\x5d\x94\x65\x84\x03\xae\x4b\x56\xbf\x50\xc1\x05\xf8\x03\xc5\x42\x72\x40\x5d\x17\x8b\x12\x12\x7d\x13\xce\x49\x5b\xe5\xa2\x7c\xfe\xf4\x5c\x94\xa5\xa0\x72\x16\x87\x83\xc5\x06\x65\x7b\x5a\xa8\xd1\xba\xdf\x40\xda\x3f\x1c\xc1\xdc\x6e\x4c\x7b\x7a\x1a\xc3\x22\x7b\xd4\x21\x2e\xcd\x7f\x3b\xb1\xd7\x15\x36\xe4\xda\x0a\x0c\x29\x4e\x10\x0c\xdf\x83\xf9\x8d\x6e\x1e\x62\xdb\x25\x38\xa2\xbc\xf0\xf6\xea\x24\x1e\x03\x1a\x5e\x3c\x3a\x0e\x01\xfb\x64\xc7\xd4\x4c\xc1\x2f\x39\x61\xd4\x1d\x55\xb6\x24\x1e\x87\xe8\x34\x1f\x09\xe2\x38\x56\x54\x3f\x88\x92\x84\x5f\xd0\xd9\x55\x9c\xb6\xed\x23\xde\x49\xfa\xff\x80\x93\x1e\x81\x03\x6a\x02\xd7\x19\xe5\xf2\xef\xaa\xa2\x08\x81\xde\xf0\x1f\xc1\x6d\xdf\xff\x1a\x00\xcc\xa0\xeb\xeb\x07\x5c\x34\xd9\x9a\xd1\xdb\x8a\x2e\x0b\xd9\xeb\xa3\xb2\xb1\x3f\x2b\x13\x07\x72\xaf\x82\x0d\xe1\x51\xa7\x37\x15\x43\xa5\x79\xdb\x16\xfa\xbe\xee\x5a\x33\xe3\xb8\x59\x51\x1e\x24\x5b\x77\xf2\xa9\x9b\xdc\x01\x92\x9f\x04\xcf\xf2\xa3\xeb\x27\x59\xd3\x0f\xbf\x77\xc7\x18\x8e\xc9\xfb\xa1\x02\x3b\x08\xe7\x35\x70\x0e\x55\xef\x17\x2a\x72\xdc\x9c\xe4\x3f\x36\xdf\x6f\x4d\xc8\x49\x47\x06\xae\x6b\x8a\x8f\x0e\x3f\x8f\xe5\x50\x8c\x2a\x72\x60\xa8\xa7\x2f\xc1\x44\x1d\x2f\x44\x54\x47\x8a\xb5\xe0\xaf\x8c\x6a\xba\x82\x94\x84\x1b\x08\xc3\x50\xb7\x2a\xda\x60\x40\xe1\xe9\x09\x05\x6e\x3f\xf2\xc1\x2d\x5b\xdd\xe1\xf4\x57\xa7\xa7\x9d\xb3\xec\x37\xf8\x18\x03\x83\x1f\x2c\x6a\xef\x0e\x03\xcb\x7a\xb1\x71\x55\xb5\x3f\x01\x00\x00\xff\xff\x8e\xc8\xc9\xed\x41\x07\x00\x00")

func clusterroleRbacAuthorizationK8sIoOsdSreAdminYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterroleRbacAuthorizationK8sIoOsdSreAdminYaml,
		"ClusterRole.rbac.authorization.k8s.io/osd-sre-admin.yaml",
	)
}

func clusterroleRbacAuthorizationK8sIoOsdSreAdminYaml() (*asset, error) {
	bytes, err := clusterroleRbacAuthorizationK8sIoOsdSreAdminYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRole.rbac.authorization.k8s.io/osd-sre-admin.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterroleRbacAuthorizationK8sIoSrePrunerBuildsdeploysCrYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x90\xb1\x4e\xf4\x30\x10\x84\x7b\x3f\x85\x75\x7d\xf2\xeb\xef\x50\x5a\x0a\x7a\x0a\x7a\xc7\x9e\xbb\x5b\x9d\xe3\xb5\x76\xd7\x27\xc1\xd3\xa3\x98\x08\x24\x82\x44\xe8\x56\xeb\xf1\x37\xb3\x13\x2a\xbd\x40\x94\xb8\x4c\x5e\xe6\x10\xc7\xd0\xec\xca\x42\x6f\xc1\x88\xcb\x78\x7b\xd0\x91\xf8\xdf\xfd\xbf\xbb\x51\x49\x93\x7f\xcc\x4d\x0d\xf2\xcc\x19\x6e\x81\x85\x14\x2c\x4c\xce\xfb\x12\x16\x4c\x5e\x05\x43\x95\x56\x20\xc3\xdc\x28\x27\x4d\xa8\x99\x5f\x75\x88\xe2\xa4\x65\xe8\xe4\x06\x1f\x2a\x3d\x09\xb7\xaa\xeb\xbf\xc1\x9f\x4e\xce\x7b\x81\x72\x93\x88\x6d\x57\x39\x69\x1f\x04\x35\x53\xec\x51\x22\x17\x13\xce\x19\xb2\x3e\xdd\x21\xf3\x26\xce\xa4\xd6\x87\x0b\xec\x18\xfe\x08\x35\x21\xc3\xb0\xe7\x85\x5a\x75\xe4\x8a\xa2\x57\x3a\xdb\x48\xbc\xc7\x7f\x1c\xbd\xa0\x58\xe4\x72\xa6\xcb\x37\xf2\x1a\xf3\x33\xf7\x8e\xdf\x7b\xfb\xc5\xa0\x6b\xbe\xd8\xdb\xe2\x4f\xb5\x1c\xb6\xf9\xb9\x96\xf7\x00\x00\x00\xff\xff\xb8\x58\x60\x92\x36\x02\x00\x00")

func clusterroleRbacAuthorizationK8sIoSrePrunerBuildsdeploysCrYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterroleRbacAuthorizationK8sIoSrePrunerBuildsdeploysCrYaml,
		"ClusterRole.rbac.authorization.k8s.io/sre-pruner-buildsdeploys-cr.yaml",
	)
}

func clusterroleRbacAuthorizationK8sIoSrePrunerBuildsdeploysCrYaml() (*asset, error) {
	bytes, err := clusterroleRbacAuthorizationK8sIoSrePrunerBuildsdeploysCrYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRole.rbac.authorization.k8s.io/sre-pruner-buildsdeploys-cr.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterrolebindingRbacAuthorizationK8sIoManagedValeroOperatorYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x8f\x31\x4b\x04\x31\x10\x46\xfb\xfc\x8a\xe1\xfa\xcd\x62\x27\xe9\xd4\xc2\xfe\x04\xfb\xd9\xec\xec\xed\x78\x49\x26\x4c\x26\x2b\xf8\xeb\xe5\xbc\x45\x04\xe1\xae\x0b\xe4\xcd\xf7\x78\x58\xf9\x9d\xb4\xb1\x94\x00\x3a\x61\xf4\xd8\x6d\x15\xe5\x2f\x34\x96\xe2\xcf\x8f\xcd\xb3\x8c\xdb\x83\x3b\x73\x99\x03\xbc\xa4\xde\x8c\xf4\x28\x89\x9e\xb9\xcc\x5c\x4e\x2e\x93\xe1\x8c\x86\xc1\x01\x24\x9c\x28\xb5\xcb\x0b\x00\x2b\x7b\xa9\x54\xda\xca\x8b\xf9\x28\x79\xcc\x58\xf0\x44\x73\x80\x83\x69\xa7\xc3\x0f\xb5\xf2\x46\x7f\x30\x96\x31\x5e\x15\x43\x4d\x68\x8b\x68\x0e\x80\x9f\xcd\x01\x14\xcc\x14\x60\xdf\x18\x36\x4a\xa4\x32\x48\x25\x45\x13\x75\x2a\x89\x8e\xb4\x5c\xd4\x58\xf9\x55\xa5\xd7\x1b\x41\x0e\xe0\x5f\xcf\x5d\x45\xeb\xd3\x07\x45\x6b\xc1\x0d\xfb\xf5\x1b\xe9\xc6\x91\x9e\x62\x94\x5e\xec\xee\xc0\xf5\xbf\x55\x8c\x14\xe0\xb7\x79\xc7\xdc\x77\x00\x00\x00\xff\xff\x93\x51\xc5\xfc\x8a\x01\x00\x00")

func clusterrolebindingRbacAuthorizationK8sIoManagedValeroOperatorYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterrolebindingRbacAuthorizationK8sIoManagedValeroOperatorYaml,
		"ClusterRoleBinding.rbac.authorization.k8s.io/managed-valero-operator.yaml",
	)
}

func clusterrolebindingRbacAuthorizationK8sIoManagedValeroOperatorYaml() (*asset, error) {
	bytes, err := clusterrolebindingRbacAuthorizationK8sIoManagedValeroOperatorYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRoleBinding.rbac.authorization.k8s.io/managed-valero-operator.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterrolebindingRbacAuthorizationK8sIoOsdSreAdminYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\xce\xbf\x4e\x03\x31\x0c\xc7\xf1\x3d\x4f\x61\x75\xbf\x54\x6c\x28\x23\x0c\xec\x1d\xd8\x7d\x17\xb7\x35\x97\xd8\x91\xed\x30\xf0\xf4\xe8\x10\x1b\x7f\x36\x0f\xfe\x7d\xf4\xc5\xc1\xaf\x64\xce\x2a\x05\x6c\xc5\x2d\xe3\x8c\xbb\x1a\x7f\x60\xb0\x4a\xde\x1f\x3d\xb3\x9e\xdf\x1f\xd2\xce\x52\x0b\x3c\xb7\xe9\x41\x76\xd1\x46\x4f\x2c\x95\xe5\x96\x3a\x05\x56\x0c\x2c\x09\xa0\xe1\x4a\xcd\x8f\x0b\x00\x07\x67\x1d\x24\x7e\xe7\x6b\xe4\x4d\xfb\xb9\xa3\xe0\x8d\x6a\x81\x53\xd8\xa4\x53\x02\x10\xec\x54\x40\xbd\x2e\x6e\xb4\x60\xed\x2c\xc9\xb4\xd1\x85\xae\x07\x82\x83\x5f\x4c\xe7\xf8\x27\x2d\x01\xfc\x28\xfb\x03\xf6\xb9\xbe\xd1\x16\x5e\xd2\xf2\xbd\xf9\xc2\x7f\xff\xf6\xf4\x19\x00\x00\xff\xff\x5c\x81\x61\x4a\x1a\x01\x00\x00")

func clusterrolebindingRbacAuthorizationK8sIoOsdSreAdminYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterrolebindingRbacAuthorizationK8sIoOsdSreAdminYaml,
		"ClusterRoleBinding.rbac.authorization.k8s.io/osd-sre-admin.yaml",
	)
}

func clusterrolebindingRbacAuthorizationK8sIoOsdSreAdminYaml() (*asset, error) {
	bytes, err := clusterrolebindingRbacAuthorizationK8sIoOsdSreAdminYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRoleBinding.rbac.authorization.k8s.io/osd-sre-admin.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterrolebindingRbacAuthorizationK8sIoOsdSreClusterAdminsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\xce\xb1\x4e\x03\x31\x0c\xc6\xf1\x3d\x4f\x61\x75\xbf\x54\x6c\x28\x23\x0c\xec\x1d\xd8\x7d\x17\xb7\x35\x4d\xec\xc8\x76\x18\x78\x7a\x74\x80\x90\x10\x12\x6c\x5e\xfc\xfb\xfe\x38\xf8\x99\xcc\x59\xa5\x80\xad\xb8\x65\x9c\x71\x55\xe3\x37\x0c\x56\xc9\xb7\x7b\xcf\xac\xc7\xd7\xbb\x74\x63\xa9\x05\x1e\xdb\xf4\x20\x3b\x69\xa3\x07\x96\xca\x72\x49\x9d\x02\x2b\x06\x96\x04\xd0\x70\xa5\xe6\xfb\x05\x80\x83\xb3\x0e\x12\xbf\xf2\x39\xf2\xa6\xfd\xd8\x51\xf0\x42\xb5\xc0\x21\x6c\xd2\x21\x01\x08\x76\x2a\xa0\x5e\x17\x37\x5a\xb6\x4f\x7c\xc1\xda\x59\x3c\x99\x36\x3a\xd1\x79\xd7\x70\xf0\x93\xe9\x1c\x7f\x34\x26\x80\x5f\x89\xdf\x0b\x3f\xe4\xe4\x73\x7d\xa1\x2d\xbc\xa4\xe5\xeb\xe7\x03\xff\xaf\xe7\x3d\x00\x00\xff\xff\xcd\x99\x92\x7e\x2b\x01\x00\x00")

func clusterrolebindingRbacAuthorizationK8sIoOsdSreClusterAdminsYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterrolebindingRbacAuthorizationK8sIoOsdSreClusterAdminsYaml,
		"ClusterRoleBinding.rbac.authorization.k8s.io/osd-sre-cluster-admins.yaml",
	)
}

func clusterrolebindingRbacAuthorizationK8sIoOsdSreClusterAdminsYaml() (*asset, error) {
	bytes, err := clusterrolebindingRbacAuthorizationK8sIoOsdSreClusterAdminsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRoleBinding.rbac.authorization.k8s.io/osd-sre-cluster-admins.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterrolebindingRbacAuthorizationK8sIoSrePrunerBuildsdeploysPruningYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x8f\x31\x4f\x03\x31\x0c\x85\xf7\xfc\x0a\xab\xfb\xa5\x62\x43\xd9\x80\x81\xbd\x48\xec\xbe\xc4\x6d\x4d\x73\x76\x64\x27\x95\xe0\xd7\xa3\x43\x07\x0b\x88\x6e\xd6\x93\xf5\xbd\xf7\x61\xe3\x57\x32\x67\x95\x04\x36\x63\x8e\x38\xfa\x59\x8d\x3f\xb0\xb3\x4a\xbc\xdc\x7b\x64\xdd\x5f\xef\xc2\x85\xa5\x24\x78\xaa\xc3\x3b\xd9\x41\x2b\x3d\xb2\x14\x96\x53\x58\xa8\x63\xc1\x8e\x29\x00\x54\x9c\xa9\xfa\x7a\x01\x60\xe3\xa8\x8d\xc4\xcf\x7c\xec\x31\xeb\xb2\x5f\x50\xf0\x44\x25\xc1\xae\xdb\xa0\x5d\x00\x10\x5c\x28\x81\x1b\x4d\xcd\x86\x90\x4d\xf3\xe0\x5a\xbc\x50\xab\xfa\xee\x5f\xe1\x5a\x61\x5a\xe9\x40\xc7\x95\x8b\x8d\x9f\x4d\x47\xfb\x67\x6d\x00\xf8\x35\xf6\x76\x57\xb6\xe0\x63\x7e\xa3\xdc\x3d\x85\x69\x23\xbc\x90\x5d\x39\xd3\x43\xce\x3a\xa4\xff\x05\x71\xdc\x52\x6f\x98\x29\xc1\x8f\xf1\xf4\xfd\xb4\x0a\x7c\x06\x00\x00\xff\xff\x78\xb7\x11\x1f\x66\x01\x00\x00")

func clusterrolebindingRbacAuthorizationK8sIoSrePrunerBuildsdeploysPruningYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterrolebindingRbacAuthorizationK8sIoSrePrunerBuildsdeploysPruningYaml,
		"ClusterRoleBinding.rbac.authorization.k8s.io/sre-pruner-buildsdeploys-pruning.yaml",
	)
}

func clusterrolebindingRbacAuthorizationK8sIoSrePrunerBuildsdeploysPruningYaml() (*asset, error) {
	bytes, err := clusterrolebindingRbacAuthorizationK8sIoSrePrunerBuildsdeploysPruningYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRoleBinding.rbac.authorization.k8s.io/sre-pruner-buildsdeploys-pruning.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterrolebindingRbacAuthorizationK8sIoSrePrunerImagesYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x90\x31\x4f\x34\x41\x08\x86\xfb\xf9\x15\xe4\xfa\xdd\xcb\xd7\x7d\x99\x4e\x2d\xec\xcf\xc4\x9e\x9d\xe5\xf6\xf0\x76\x60\x02\xcc\x25\xfa\xeb\xcd\x9a\x55\x0b\x8d\x1d\x21\xf0\xf0\xf0\x62\xe3\x67\x32\x67\x95\x0c\x36\x61\x19\xb1\xc7\x45\x8d\xdf\x30\x58\x65\xbc\xfe\xf7\x91\xf5\x78\xfb\x97\xae\x2c\x73\x86\x87\xb5\x7b\x90\x9d\x74\xa5\x7b\x96\x99\x65\x49\x95\x02\x67\x0c\xcc\x09\x60\xc5\x89\x56\xdf\x2a\x00\x6c\x3c\x6a\x23\xf1\x0b\x9f\x63\x2c\x5a\x8f\x15\x05\x17\x9a\x33\x1c\xc2\x3a\x1d\x12\x80\x60\xa5\x0c\x6e\x34\x34\xeb\x42\x36\x70\xc5\x85\x3c\x99\xae\x74\xa2\xf3\x06\xc2\xc6\x8f\xa6\xbd\xfd\xa1\x97\x00\x7e\xd8\x7d\xc3\x5f\x3d\xa8\xe6\x0f\xf0\x7e\x25\x79\x9f\x5e\xa8\x84\xe7\x34\xec\x9b\x4f\x64\x37\x2e\x74\x57\x8a\x76\x89\xdf\xcc\x1c\xf7\xae\x37\x2c\x94\xe1\xeb\xb5\xe1\x73\x68\x0b\xe3\x3d\x00\x00\xff\xff\x00\xd4\xfa\x0d\x4f\x01\x00\x00")

func clusterrolebindingRbacAuthorizationK8sIoSrePrunerImagesYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterrolebindingRbacAuthorizationK8sIoSrePrunerImagesYaml,
		"ClusterRoleBinding.rbac.authorization.k8s.io/sre-pruner-images.yaml",
	)
}

func clusterrolebindingRbacAuthorizationK8sIoSrePrunerImagesYaml() (*asset, error) {
	bytes, err := clusterrolebindingRbacAuthorizationK8sIoSrePrunerImagesYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRoleBinding.rbac.authorization.k8s.io/sre-pruner-images.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterrolebindingRbacAuthorizationK8sIoValeroYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x8f\xb1\x4e\x03\x31\x0c\x86\xf7\x3c\x85\xd5\xbd\x77\x62\x43\xd9\x80\x81\xbd\x48\xec\xbe\x9c\xaf\x67\x9a\xd8\x91\xe3\x1c\x12\x4f\x8f\x4a\x4b\x85\x40\x62\xb3\xe5\xdf\xfe\x3e\x63\xe5\x57\xb2\xc6\x2a\x11\x6c\xc2\x34\x60\xf7\x55\x8d\x3f\xd0\x59\x65\x38\xdd\xb7\x81\x75\xdc\xee\xc2\x89\x65\x8e\xf0\x94\x7b\x73\xb2\x83\x66\x7a\x64\x99\x59\x8e\xa1\x90\xe3\x8c\x8e\x31\x00\x64\x9c\x28\xb7\x73\x05\x80\x95\x07\xad\x24\x6d\xe5\xc5\x87\xa4\x65\x2c\x28\x78\xa4\x39\xc2\xce\xad\xd3\xee\x2b\xb5\xf2\x46\x3f\x62\xac\x63\xba\x20\xf6\x35\xa3\x2f\x6a\x25\x02\xbe\xb7\x00\x20\x58\x28\xc2\x46\x99\x4c\x83\x69\xa6\x03\x2d\x67\x12\x56\x7e\x36\xed\xf5\x1f\xff\x00\xf0\x47\xff\x76\xf1\x9b\x87\x73\x61\x09\xad\x4f\x6f\x94\xbc\xc5\xb0\xbf\xee\xbc\x90\x6d\x9c\xe8\x21\x25\xed\xe2\xbf\x45\x2e\x6d\xab\x98\x28\xc2\xed\x8f\xfd\x75\xfa\x19\x00\x00\xff\xff\xab\xfa\x06\xfe\x5e\x01\x00\x00")

func clusterrolebindingRbacAuthorizationK8sIoValeroYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterrolebindingRbacAuthorizationK8sIoValeroYaml,
		"ClusterRoleBinding.rbac.authorization.k8s.io/valero.yaml",
	)
}

func clusterrolebindingRbacAuthorizationK8sIoValeroYaml() (*asset, error) {
	bytes, err := clusterrolebindingRbacAuthorizationK8sIoValeroYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRoleBinding.rbac.authorization.k8s.io/valero.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configmapOpenshiftConfigOsdLdapCaConfigmapYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x34\x8d\xb1\x0a\xc2\x30\x14\x45\xf7\x7c\xc5\xa3\x4b\x21\xd0\x8a\x6b\x36\xb1\xc5\x49\x07\x11\xf7\x6b\x92\xd6\x60\xf3\xf2\x48\xa2\xdf\x2f\x95\xba\x5d\xb8\x87\x73\x20\xe1\xee\x73\x09\x89\x0d\x7d\xf6\xea\x15\xd8\x19\x3a\x26\x9e\xc2\x7c\x86\xa8\xe8\x2b\x1c\x2a\x8c\x22\x5a\xf0\xf0\x4b\x59\x17\x11\x24\xf4\x49\x3c\x97\x67\x98\x6a\x6f\x53\xdc\x45\x30\x66\xef\x0c\x35\x35\xbf\x7d\xa3\x88\x18\xd1\x1b\x4a\xc5\x75\x8b\x83\x74\x16\x9d\xfd\x79\x23\x64\x7b\x8b\xc0\xae\xc8\x5f\xb4\x01\xaa\xd4\x1c\x78\x1e\xb6\xae\x45\x6f\x73\x35\xd4\x6a\xad\xe9\x34\x5e\xc6\xeb\xe1\x36\x0e\xa4\xb5\x6e\xd5\x37\x00\x00\xff\xff\x3d\xcd\x34\x4c\xbf\x00\x00\x00")

func configmapOpenshiftConfigOsdLdapCaConfigmapYamlBytes() ([]byte, error) {
	return bindataRead(
		_configmapOpenshiftConfigOsdLdapCaConfigmapYaml,
		"ConfigMap/openshift-config/osd-ldap-ca-configmap.yaml",
	)
}

func configmapOpenshiftConfigOsdLdapCaConfigmapYaml() (*asset, error) {
	bytes, err := configmapOpenshiftConfigOsdLdapCaConfigmapYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ConfigMap/openshift-config/osd-ldap-ca-configmap.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configmapOpenshiftLoggingCuratorYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x56\x4d\x6f\xdb\x46\x13\xbe\xeb\x57\x0c\xfc\x26\xd0\xdb\xc2\xa2\x9c\x18\xb9\xf0\x50\xc0\x70\xd4\xd6\xa8\x63\x07\xb6\x12\x20\xa8\x5b\x62\x44\x0e\xa9\xad\x96\x3b\xc4\xee\x50\x12\x91\xe6\xbf\x17\xbb\x5c\xca\xa2\xdc\xe6\x24\x72\xe6\x99\x67\xbe\x47\xc4\x46\x7d\x26\xeb\x14\x9b\x14\xb6\x6f\x26\x05\x0a\xa6\x13\x00\xcc\x45\xb1\x71\x49\x87\xb5\x4e\xe1\xef\x09\x00\xc0\xff\x60\x36\x9b\xc5\xa7\x07\xaa\xa9\x5e\x91\x3d\x07\x4d\xb8\x25\x40\xd8\x50\x07\x54\x37\xd2\x81\x2a\x41\xd6\x64\x09\x94\x03\xc3\xb0\x45\xdd\x52\x02\x70\xc7\x86\x60\xa7\xb4\x86\x95\xc7\x3b\xb1\xca\x54\xe7\x91\xcf\xb0\x00\xc2\xc7\x4e\xd6\x6c\xe0\xcc\x43\x97\x5d\x43\x67\xbd\x36\x62\xae\xb4\x63\xb0\xd1\x31\xc8\x1a\x05\x50\x6b\xa0\x3d\xd6\x8d\x26\x07\x6b\x1f\xc8\xb4\x50\x0e\x57\x9a\xb2\x3e\x83\x29\x38\x12\x10\x86\xa5\x0d\x41\xdc\x94\xd0\x71\x1b\x09\x77\x68\x82\xae\x75\x04\xb2\x56\x2e\x66\x0d\xe8\x00\x41\xa8\x6e\x34\x0a\x9d\xfb\x70\x5d\x6b\xc9\x23\x03\x99\x47\x0a\xc3\xcf\xa8\x1d\x01\x96\x42\x36\xf2\xe5\xdc\x74\xca\x54\xa0\x24\x89\x92\x58\xc6\x34\xbe\x02\xbc\x79\x7e\x1c\x8a\x9c\x42\x41\x9a\x84\x32\x65\x0a\x95\x93\x3b\x02\x14\xe4\x72\xab\x9a\x1e\xf5\xd3\xec\x48\x03\xf0\x3e\x18\x41\xc2\x0d\x59\x0c\x5e\x20\x12\x00\xeb\xa2\x2f\x90\x81\xcb\x0b\x28\xb0\x73\xc9\xc8\xf4\xa6\x32\xec\xf3\x59\x13\x90\xb5\x6c\x63\xc7\xa0\x54\x5a\xc8\x42\xc1\xe4\x1b\x27\x23\x1b\x4b\xae\xd5\x02\xca\x00\x9a\x18\xb8\x2f\x33\x68\xe5\x04\xb8\x3c\xf8\xfe\xbf\x0a\xe4\x59\x18\x85\xcc\x6b\x7f\x18\x3b\x7f\x24\x82\xb5\x48\xe3\xd2\xf9\x7c\xb7\xdb\x25\xa4\xd1\x89\xca\x93\x9c\xe7\x55\xab\x0a\x9a\x93\x99\x47\x99\x23\xb4\xf9\x7a\x9e\x6b\x45\x46\xe6\x79\x6b\x51\xd8\xce\xdf\x25\x6f\xe7\xb4\xcf\xc6\x45\x4b\xd6\x52\xeb\x23\x3f\xdc\x9c\x14\xbe\xff\x7d\xdc\xa1\xd6\xbc\x83\xc8\x95\xd0\x3e\xa7\x80\x4c\xee\xf8\x26\x66\x70\x90\x8d\x6c\x5f\xa4\x95\x86\x91\x3a\xe1\xbf\x31\xe0\x28\x67\x53\xb8\x73\x28\xa8\xc4\x50\x32\x07\x97\x17\x17\x23\xa0\xa8\x9a\xb8\x95\x8c\xb7\x64\xad\x2a\x28\x85\x57\x5f\xaf\x3f\x3d\x5c\x2d\xef\x1f\xb2\xe5\xcd\x87\xc5\xfd\xa7\xe5\xb7\x13\xe6\xf7\x6c\xa6\x02\x2e\xc6\x8f\xa6\x03\xf6\x4b\xf6\x1c\xad\x1b\x19\xe4\x6c\x44\x99\x96\x32\x55\x66\x07\x48\xda\xcf\xec\x09\xf3\x7d\xd0\xa1\xd6\x1d\xc4\xdd\x89\xfd\x3d\xf7\x8b\x51\xb6\x1a\x4a\xb6\x50\xd0\xaa\xad\x2a\x65\xaa\x91\xf5\x78\xd9\x5e\xf2\xfb\xa5\xd5\x71\xae\x1c\xa0\x25\x58\x71\x6b\x0a\x58\x75\xa0\xb9\x52\x39\x6a\xb8\xba\x7b\x7f\x64\x10\xa1\xc7\x7d\x9b\x45\xa1\x74\x0d\xa5\xd0\xa0\x08\xd9\x71\x6f\x36\xca\x14\x29\x58\xaa\x68\x3f\x92\x87\xcb\x93\xc2\xf4\xcf\xa7\xa3\x2d\x79\x4a\x92\x1f\x5f\x4d\x47\x38\xda\xe7\xba\xf5\x5d\x38\x0d\x7f\xec\x1a\xab\xd3\xd2\x7d\x44\xeb\x4f\x87\xaa\xc9\x09\xd6\x0d\x94\x96\x6b\xbf\x09\xb4\x07\x83\xf5\x18\xed\xb8\xb5\x39\xa5\x2f\x15\x85\xb2\x14\xcb\x17\x16\xf7\xc5\xa4\xf4\x97\x32\x85\xe9\xeb\x2f\xc9\xeb\x3a\x79\x5d\x8c\xa3\x6f\x8d\x92\x34\x6c\xf9\x0b\x71\x96\x73\x6b\x24\x85\xcb\x8b\xef\xe7\x9b\xb3\x29\x55\x75\x72\xec\x6f\x39\xf4\x7b\xb8\xaf\xc3\xce\x44\xb0\xaf\x0c\x4d\x22\xb4\x35\x39\xd7\x35\x19\x01\x34\xc5\xf3\x39\x15\x86\x61\xc2\xc3\x7d\x89\x1b\xe1\xfa\x3a\x91\xd9\xc2\x16\x6d\x8c\x3a\x19\x94\x87\xd6\xf7\x0b\x7e\x34\x09\x3e\xc5\x43\x2e\x27\xf8\x31\xfc\x19\xfd\x76\x08\x51\x18\x36\x44\x0d\x70\xe3\xfc\xe8\xb9\x30\xd4\x08\x85\x2a\x4b\xb2\x3e\xf2\xa2\xed\x07\xa4\x67\x38\x1a\x98\xef\x3b\x78\x33\x38\x18\xca\xd4\xf3\x1a\xb6\x35\x6a\x68\x2c\xff\x45\x79\xbc\xa4\x75\x87\x4d\xf3\xdf\xe9\xed\x88\x36\x81\x10\x86\x52\xbf\x8b\x1d\x39\x9b\xcd\x66\x4f\xa6\x3f\x83\xe9\x93\x01\x58\xb3\x13\x17\x9e\x66\xf0\xea\xeb\xe2\x31\xfb\xf5\xfe\x71\xf9\xcd\xbf\x37\x6c\x25\xed\x65\x1f\xef\x1f\x7a\x59\xeb\x28\x73\x4e\xf7\xae\xfc\xd1\xf2\xc2\x9c\xac\xa8\x52\xe5\x28\x14\xf1\xd7\x57\x01\xdd\xbb\xc9\xbc\x7e\x50\xdc\xde\x2c\xee\x96\xd9\xf5\x22\xf2\x45\xc4\x86\xba\x9e\xf2\x18\xf4\xdb\xe2\x4b\xc0\x38\xa7\x33\xc3\xd9\x16\xb5\x2a\x82\x8b\x30\x6a\x5e\x13\x6f\xdf\xbf\x9d\x3c\xaf\xae\xd1\x09\xd9\x8c\x8d\x8e\xec\xd1\x50\xf7\xd3\x18\x92\xd6\x5c\x69\xda\x92\x3e\xe6\xb8\xbd\xff\x25\xbb\x5d\x7c\x5e\xdc\x7e\x8b\x88\xd2\x77\xc0\x2f\x46\x3f\x27\x5e\xba\xd2\x98\x6f\xc2\xed\x0e\xcc\xbf\x4f\x47\xff\x33\xd3\x73\x98\xb6\x56\x6b\xb5\xba\x9c\xfe\xe1\xe1\x4f\xe6\x6c\xd2\x9f\x96\xeb\x30\xf2\x1f\xb0\x99\xd4\x24\x38\x7c\x23\x69\x5c\x91\x8e\xe3\x81\x8d\xf2\x23\x63\xdc\x5a\x95\x92\xe4\x5c\xcf\x6b\x34\x58\x51\x91\xc2\x99\xd8\x36\x7c\xc9\xf8\xcd\x4f\x87\xde\xc6\x77\xd7\xa0\x3f\x0a\x07\xd3\x59\xcc\x73\xf2\x4f\x00\x00\x00\xff\xff\xfe\x8e\xa7\xd9\x98\x09\x00\x00")

func configmapOpenshiftLoggingCuratorYamlBytes() ([]byte, error) {
	return bindataRead(
		_configmapOpenshiftLoggingCuratorYaml,
		"ConfigMap/openshift-logging/curator.yaml",
	)
}

func configmapOpenshiftLoggingCuratorYaml() (*asset, error) {
	bytes, err := configmapOpenshiftLoggingCuratorYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ConfigMap/openshift-logging/curator.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configmapOpenshiftMonitoringClusterMonitoringConfigYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x52\x4d\x6b\xea\x50\x10\xdd\xe7\x57\x0c\x6e\x84\x80\xbe\xe7\x03\xe1\x71\x77\xc5\x8a\x8b\x56\x17\xd6\x76\x3f\x4d\x8e\xf1\xd2\xfb\xd5\xb9\x13\xa1\xd0\x1f\x5f\x8c\x26\x84\x6e\xbb\xe8\x5d\x9e\xaf\xb9\x67\x18\x4e\xf6\x05\x92\x6d\x0c\x86\xce\x8b\xa2\x66\x65\x53\x10\x55\x31\x1c\x6d\x33\xff\x60\xef\x0c\x7d\x16\x44\x44\x49\xa2\x87\x9e\xd0\xe6\x87\xff\xd9\x74\x10\x91\x40\x11\xb4\x73\x2f\x96\xf5\x0d\x3c\x47\xd7\x7a\xac\x1c\x5b\x7f\x80\x4f\x8e\x15\xbd\x9e\xc8\x43\xb9\x9f\xd2\xbf\xc0\x1e\x66\x34\x60\x76\x11\x0c\x7c\x4e\xa8\xc6\xea\xac\x51\xb8\xb9\xe4\xe7\xbc\xeb\x9c\x4d\xfa\x37\xe2\x05\x39\xb6\x52\x21\x8f\x4d\x17\xf8\xbd\x45\xd6\x6f\xe8\x10\x67\x68\xf9\x77\x63\x3b\x8e\x1d\x44\x3d\x07\x6e\x20\x5b\xb6\xc1\xfc\xac\xd7\x38\xee\x77\x9a\x2d\xfa\x66\x0a\x07\x0f\x85\xac\x9c\x45\xd0\xde\x30\xc0\x4f\x90\x33\xe4\x79\xff\x68\x68\x5a\x96\x25\x6d\xd6\xbb\xf5\xfe\xee\xb0\xbe\xa7\xb2\x2c\xa7\xc5\x9b\x0d\xb5\xa1\x55\x77\x1b\x5b\x4e\xc5\xb8\xb3\xe3\x57\xb8\xdb\x17\x38\xd9\x79\x4c\x08\xf9\x64\x8f\x3a\xaf\xa2\xff\x73\xad\x5f\x1b\x9a\xa8\xb4\x98\x14\xfd\x6e\x2a\xd7\x66\x85\xcc\x7c\x0c\x56\xa3\xd8\xd0\xcc\xae\xa7\x77\x53\xe4\xc4\x15\x0c\x0d\x61\x23\x61\xf1\x15\x00\x00\xff\xff\x33\x96\xda\x75\xbb\x02\x00\x00")

func configmapOpenshiftMonitoringClusterMonitoringConfigYamlBytes() ([]byte, error) {
	return bindataRead(
		_configmapOpenshiftMonitoringClusterMonitoringConfigYaml,
		"ConfigMap/openshift-monitoring/cluster-monitoring-config.yaml",
	)
}

func configmapOpenshiftMonitoringClusterMonitoringConfigYaml() (*asset, error) {
	bytes, err := configmapOpenshiftMonitoringClusterMonitoringConfigYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ConfigMap/openshift-monitoring/cluster-monitoring-config.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _consoleOperatorOpenshiftIoClusterYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x8f\xc1\x4e\x44\x21\x0c\x45\xf7\x7c\x45\x33\x1f\x30\xc4\x2d\x4b\xdd\xea\x66\x8c\xee\x3b\xb4\x0e\x44\xa0\x84\x16\x5f\xe2\xd7\x1b\xde\x4b\x74\xe2\x8e\x90\x7b\xee\xed\xc1\x9e\xdf\x79\x68\x96\x16\x40\x3a\x0f\x34\x19\x67\xe9\xdc\x34\xe5\x0f\x3b\x67\xf1\x5f\x0f\xee\x33\x37\x0a\xf0\x24\x4d\xa5\xb0\xab\x6c\x48\x68\x18\x1c\x40\xc1\x2b\x17\x5d\x2f\x00\xec\xf9\x8e\x8c\x52\x7d\xc5\x86\x37\xa6\x00\x27\x1b\x93\x4f\x0e\xa0\x61\xe5\x00\xb1\x4c\x35\x1e\x4e\x3b\xc7\xc5\xe2\xb4\xc4\xcd\x72\x44\x5b\x87\xec\x6d\x45\x6e\x32\xed\xc2\x94\x07\x47\x0b\x90\xcc\xba\x06\xef\xb7\x6d\x3b\x0f\xa6\x84\xc7\x44\xf6\x9a\x64\x16\xf2\x47\xde\x01\xc4\xa9\x26\x35\x7f\xdf\x75\x5d\x07\x2e\x01\x62\x5a\x13\x4c\xfb\x27\x49\x9c\x95\x9b\xed\xb9\x47\x54\x7e\xbb\x3c\xff\xcd\x90\x44\xfd\x67\xf3\x8b\x7b\x07\x70\xa8\x2d\xfe\xd5\xd0\x38\xc0\xcb\xe1\xea\x7e\x02\x00\x00\xff\xff\x85\x60\x2a\xaf\x51\x01\x00\x00")

func consoleOperatorOpenshiftIoClusterYamlBytes() ([]byte, error) {
	return bindataRead(
		_consoleOperatorOpenshiftIoClusterYaml,
		"Console.operator.openshift.io/cluster.yaml",
	)
}

func consoleOperatorOpenshiftIoClusterYaml() (*asset, error) {
	bytes, err := consoleOperatorOpenshiftIoClusterYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Console.operator.openshift.io/cluster.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _credentialsrequestCloudcredentialOpenshiftIoOpenshiftValeroManagedVeleroOperatorIamCredentialsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x91\x41\x4f\xdc\x30\x10\x85\xef\xf9\x15\x23\x2e\x48\x95\x02\xaa\x7a\xf3\x6d\x59\x71\xe3\xb0\x02\xa9\x3d\x0f\x93\x17\xb0\xd6\xb1\xdd\x99\xf1\x22\xfe\x7d\xe5\x25\xa5\x5b\xba\xaa\xda\x5b\xde\xcb\x97\x97\xe7\x67\xae\xf1\x2b\xd4\x62\xc9\x81\x24\x95\x36\x89\x62\x42\xf6\xc8\xe9\xaa\x54\x64\x7b\x8e\xb3\x5f\xc5\x72\x7d\xf8\x3c\xec\x63\x9e\x02\x6d\xdf\x01\xbb\xc7\xf7\x06\xf3\x61\x81\xf3\xc4\xce\x61\x20\x4a\xfc\x88\x64\xfd\x89\x88\x6b\x3c\x09\x91\xb2\x5c\x2f\x9c\xf9\x09\x53\xa0\x0b\xd7\x86\x8b\x23\xf5\x1c\x0f\xf8\xfd\x5f\x92\x9a\x39\x74\xac\x89\x7d\x2e\xba\x04\xe2\x17\x1b\x88\x32\x2f\x08\xb4\x66\x8c\x07\x24\x68\x19\x4b\x85\xb2\x17\x1d\x23\x2f\xe3\xaf\xf6\x3f\x79\xab\x2c\x08\xf4\x9e\xbf\x7e\x36\x58\x85\xf4\x96\x55\xcb\x21\x4e\xd0\x87\x55\x1f\x5b\xff\xf3\x24\x9d\x7f\x9b\x65\xf3\xed\x61\x77\x12\x75\x7c\x63\xce\x8e\x05\xd9\x6f\xb3\x6b\xc4\xba\xca\x48\x2c\xde\xd3\x8f\xaa\x6b\xfb\x12\xb6\x0a\x76\xdc\x34\xd9\xc3\x4f\xfd\xbb\x68\xfe\xa7\xbb\x6b\xab\xb9\x91\x74\xd6\xdf\xb5\xc7\x14\x65\x23\x02\xb3\x9b\x54\x64\xff\x81\xba\xcd\xa2\xaf\xb5\xb7\xd8\x96\x3c\xc7\xa7\xa6\xdc\xc5\x07\xea\x2e\xce\x90\x57\x49\x38\x07\x61\x9e\x21\x1e\x68\x93\x52\x79\x59\x3d\x85\x95\xa6\x7d\xef\xcb\x4f\x97\x03\x91\x41\x14\x7e\x8f\xf9\xed\xac\xff\x7b\x7f\x7f\xbf\xc1\x1f\x01\x00\x00\xff\xff\xc9\x79\xe9\x08\xbb\x02\x00\x00")

func credentialsrequestCloudcredentialOpenshiftIoOpenshiftValeroManagedVeleroOperatorIamCredentialsYamlBytes() ([]byte, error) {
	return bindataRead(
		_credentialsrequestCloudcredentialOpenshiftIoOpenshiftValeroManagedVeleroOperatorIamCredentialsYaml,
		"CredentialsRequest.cloudcredential.openshift.io/openshift-valero/managed-velero-operator-iam-credentials.yaml",
	)
}

func credentialsrequestCloudcredentialOpenshiftIoOpenshiftValeroManagedVeleroOperatorIamCredentialsYaml() (*asset, error) {
	bytes, err := credentialsrequestCloudcredentialOpenshiftIoOpenshiftValeroManagedVeleroOperatorIamCredentialsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "CredentialsRequest.cloudcredential.openshift.io/openshift-valero/managed-velero-operator-iam-credentials.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _cronjobOpenshiftSrePruningBuildPrunerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x92\x4d\x6b\xdc\x40\x0c\x86\xef\xfe\x15\x22\xc7\xc0\xc4\xbb\xa5\xb9\x0c\xe4\x10\x7a\x29\xa1\x84\x50\x4a\xef\xb2\xac\xb5\xd5\xcc\x17\x1a\x79\x8b\xff\x7d\xf1\x6e\x9d\xee\xba\x2b\x1f\x6c\x9e\x57\x7e\x67\xf4\x81\x45\x7e\xb2\x56\xc9\xc9\x43\x87\x46\x63\x7b\xdc\x77\x6c\xb8\x6f\xde\x25\xf5\x1e\xbe\x68\x4e\x2f\xb9\x6b\x22\x1b\xf6\x68\xe8\x1b\x80\x80\x1d\x87\xba\x7c\x01\x60\x91\x87\x5c\x38\xd5\x51\x0e\xf6\x40\x39\xb6\x11\x13\x0e\xdc\x7b\xb8\x33\x9d\xf8\xae\x01\x48\x18\xd9\x43\x37\x49\xe8\xab\x2b\x3a\x25\xd6\xbf\xb4\x16\x24\xf6\xf0\x61\xe0\xaa\xf2\x29\x43\xd2\xd0\xd4\xc2\xb4\x1c\x42\x39\xd1\xa4\xca\x89\xe6\xb7\x1c\x84\x66\x0f\xdf\xb9\x04\x24\x6e\x00\x0e\x28\x81\xfb\x97\xdc\xd5\xaf\x52\x2d\xeb\xfc\x4d\xa2\x98\x87\xc7\x06\xe0\x57\xee\x7e\x70\x2c\x01\x8d\xcf\x97\x5d\x1d\x97\xb0\x2b\x65\xab\x2e\x41\x39\x19\x4a\x62\xad\x97\xd4\x01\xe5\x18\x31\xf5\x97\x70\xc1\x99\x36\x00\xfb\xb8\x21\xa7\xda\x37\xec\xdc\x96\x0d\x74\xee\x9d\xb9\xb8\x39\x4f\x69\x60\x75\x36\x62\x7a\xfa\xf4\x79\xbc\x9d\x45\x39\x96\xc0\xc6\x4f\xfb\xdb\xfa\xb9\x45\x37\x54\xca\xe9\x20\x7a\x7d\x49\x89\x38\xb0\x3f\xbf\x9c\xf2\x20\xd5\x74\xfe\x37\x61\xb7\x11\xea\x91\xfc\xe3\x6e\xb7\x6b\x3f\x32\x5a\x0a\xe2\x97\xc6\x56\xfb\xdf\xf8\x6d\x0a\x61\x9d\xe1\x73\xf8\x8d\xf3\x75\xe1\xb7\x17\x65\x0d\xe5\x6a\xa8\xb6\xfe\xff\xca\xc7\x2b\xb9\xb2\x1e\x85\xf8\x99\x28\x4f\xc9\x5e\x4f\x56\xeb\x3a\xb1\xba\x8a\x0d\x40\xa5\x91\xfb\x29\xb0\x87\x1d\xdc\xb7\x7b\xb8\x5f\x9e\xe6\x4f\x00\x00\x00\xff\xff\xdf\x07\xc6\x06\x04\x03\x00\x00")

func cronjobOpenshiftSrePruningBuildPrunerYamlBytes() ([]byte, error) {
	return bindataRead(
		_cronjobOpenshiftSrePruningBuildPrunerYaml,
		"CronJob/openshift-sre-pruning/build-pruner.yaml",
	)
}

func cronjobOpenshiftSrePruningBuildPrunerYaml() (*asset, error) {
	bytes, err := cronjobOpenshiftSrePruningBuildPrunerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "CronJob/openshift-sre-pruning/build-pruner.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _cronjobOpenshiftSrePruningDeploymentsPrunerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x92\x4f\x6b\xdc\x4c\x0c\xc6\xef\xfe\x14\x22\xc7\xc0\xc4\xbb\x2f\x6f\x2e\x03\x39\x84\x5e\x4a\x28\x21\x94\xd2\xbb\x2c\x6b\xed\x69\x66\x46\x83\x46\xde\xe2\x6f\x5f\xbc\x5b\xa7\xbb\xee\x52\xf9\x60\xf3\xfc\xc4\x63\xfd\xc3\x12\xbe\xb3\xd6\x20\xd9\x43\x87\x46\x63\x7b\xdc\x77\x6c\xb8\x6f\xde\x43\xee\x3d\x7c\x52\xc9\x2f\xd2\x35\x89\x0d\x7b\x34\xf4\x0d\x40\xc4\x8e\x63\x5d\xbe\x00\xb0\x84\x07\x29\x9c\xeb\x18\x0e\xf6\x40\x92\xda\x84\x19\x07\xee\x3d\xdc\x99\x4e\x7c\xd7\x00\x64\x4c\xec\xa1\xe7\x12\x65\x4e\x9c\xad\xba\xa2\x53\x66\xfd\x8d\x6a\x41\x62\x0f\x1f\x2e\xae\x2a\x9f\x32\x42\x1e\x9a\x5a\x98\x96\x3f\x91\x64\x9a\x54\x39\xd3\xfc\x26\x31\xd0\xec\xe1\x2b\x97\x88\xc4\x0d\xc0\x01\x43\xe4\xfe\x45\xba\xfa\x39\x54\x13\x9d\xbf\x84\x14\xcc\xc3\x63\x03\xf0\x43\xba\x6f\x9c\x4a\x44\xe3\x73\xc5\xab\xe3\x12\x76\x45\xb6\x74\x09\x92\x6c\x18\x32\x6b\xbd\x54\x1d\x90\xa4\x84\xb9\xbf\x14\x17\x59\x68\x23\x60\x9f\x36\xca\xa9\xf7\x8d\x76\x31\x9b\x0d\x71\xee\x9d\xb9\x38\x92\x54\x22\x1b\x3f\xed\x6f\xf3\x59\xa6\x3c\xb0\x3a\x1b\x31\x3f\xfd\xf7\xff\x78\x3b\xeb\x3c\xa7\x1b\x1e\x24\xf9\x10\xf4\xba\xd2\x90\x70\x60\x7f\x7e\x39\xe5\x21\x54\xd3\xf9\xcf\xae\xdd\x06\xd4\x23\xf9\xc7\xdd\x6e\xd7\x7e\x64\xb4\x14\x83\x5f\xa6\x5b\xed\x6f\xe3\xb7\x29\xc6\x75\x91\xcf\xf1\x27\xce\xd7\x8d\xff\xe3\x64\xd6\x50\xae\x86\x6a\xab\xc9\x2b\x1f\xaf\x70\x65\x3d\x06\xe2\x67\x22\x99\xb2\xbd\x9e\xfc\xd6\xc3\x62\x75\x15\x1b\x80\x4a\x23\xf7\x53\x64\x0f\x3b\xb8\x6f\xf7\x70\xbf\x3c\xcd\xaf\x00\x00\x00\xff\xff\xc8\xfb\xba\x64\x13\x03\x00\x00")

func cronjobOpenshiftSrePruningDeploymentsPrunerYamlBytes() ([]byte, error) {
	return bindataRead(
		_cronjobOpenshiftSrePruningDeploymentsPrunerYaml,
		"CronJob/openshift-sre-pruning/deployments-pruner.yaml",
	)
}

func cronjobOpenshiftSrePruningDeploymentsPrunerYaml() (*asset, error) {
	bytes, err := cronjobOpenshiftSrePruningDeploymentsPrunerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "CronJob/openshift-sre-pruning/deployments-pruner.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _cronjobOpenshiftSrePruningImagePrunerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x52\xc1\x4e\xdb\x40\x10\xbd\xfb\x2b\x46\x88\x03\x20\x2d\x1b\xaa\x72\x59\x29\x07\x8a\x22\x51\x5a\x01\x0a\x29\x57\x34\xde\x4c\xec\x6d\xd6\xbb\xd6\xcc\xd8\x95\xff\xbe\x72\x82\x69\x13\x18\x5f\xac\xf7\xde\xbc\x59\xcd\x3c\x6c\xc3\x0b\xb1\x84\x9c\x1c\x94\xa8\xbe\xb6\xfd\x55\x49\x8a\x57\xc5\x36\xa4\xb5\x83\x5b\xce\xe9\x3e\x97\x45\x43\x8a\x6b\x54\x74\x05\x40\xc4\x92\xa2\x8c\x7f\x00\xd8\x86\xcb\xdc\x52\x92\x3a\x6c\xf4\xd2\xe7\xc6\x36\x98\xb0\xa2\xb5\x83\x13\xe5\x8e\x4e\x0a\x80\x84\x0d\x39\x08\x0d\x56\x64\x5a\xee\x12\xf1\x1b\x28\x2d\x7a\x72\xf0\xde\x6f\x84\xf7\x8a\x90\xaa\x42\x5a\xf2\xe3\x0c\x9f\x93\xef\x98\x29\xf9\xe1\x29\xc7\xe0\x07\x07\x4b\x6a\x23\x7a\x2a\x00\x36\x18\x22\xad\xef\x73\x29\x77\x41\x34\xf3\xf0\x33\x34\x41\x1d\x5c\x17\x00\xbf\x73\xb9\xa2\xa6\x8d\xa8\xb4\x7f\xeb\xe4\x38\x96\x1e\x30\xc7\xec\x58\x3e\x27\xc5\x90\x88\xe5\x7f\xd4\x00\x72\x75\x80\x8c\x98\x2d\x43\xb2\x25\x4a\x7d\x84\x1b\x7f\x04\x64\x0f\xb8\x6e\x60\xb7\x85\xfd\x46\x04\x8c\xd1\xbc\xa5\x34\x3f\x3d\x3d\xf3\xa8\x60\x7b\x64\xcb\x5d\xb2\x42\x9e\x49\xc5\x6e\xbb\x92\x38\x91\x92\x5c\x86\x6c\x85\xb8\x0f\x9e\xd0\xfb\xdc\x25\xb5\xbb\xd6\xf3\x83\x29\x00\xc6\x8c\x2a\xe2\x79\xad\xda\x8a\xb3\xf6\xf4\xec\xc7\xaf\x6f\x8b\xe5\xc3\x62\xb5\x78\x7e\x7d\x5e\x2c\x5f\xbe\xdf\x2e\x5e\xef\x1e\x9f\x57\xe7\xee\x53\xea\xe9\x71\xb9\xfa\x68\xba\x25\x6a\xcd\x90\xbb\x54\x11\x1b\xad\x31\xcd\xbf\x7c\xad\x27\x5c\xb1\x32\x4c\x7d\x18\xa3\x24\xf3\x6b\x30\x26\x24\x21\xdf\x31\x19\xd9\x86\xd6\x68\x14\xd3\x13\x87\xcd\x30\x1f\x73\xf1\xc1\xdc\xe7\xb4\x09\xdc\x1c\xe0\xbb\x05\x4d\xc9\x61\xaa\x82\x28\x0f\xff\xe2\x66\x8e\x08\xe9\xbd\xbb\x9e\xcd\x66\xf6\x5d\x61\x7d\x0c\x6e\x3c\xb3\xe8\x47\xe3\xa7\x2e\xc6\x29\x51\x37\xf1\x0f\x0e\x72\xa0\xf9\x34\xb5\x53\x31\x89\x22\xeb\xd4\xfe\x40\xfd\x01\xfd\x76\xa4\x9b\xfd\x91\x1e\x76\x4e\x53\xb6\x89\x8d\x60\x01\x20\xbe\xa6\x75\x17\xc9\xc1\x0c\x2e\xec\x15\x5c\x8c\x5f\xf1\x37\x00\x00\xff\xff\x1b\x95\x4f\xa1\x90\x03\x00\x00")

func cronjobOpenshiftSrePruningImagePrunerYamlBytes() ([]byte, error) {
	return bindataRead(
		_cronjobOpenshiftSrePruningImagePrunerYaml,
		"CronJob/openshift-sre-pruning/image-pruner.yaml",
	)
}

func cronjobOpenshiftSrePruningImagePrunerYaml() (*asset, error) {
	bytes, err := cronjobOpenshiftSrePruningImagePrunerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "CronJob/openshift-sre-pruning/image-pruner.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _customresourcedefinitionApiextensionsK8sIoVelerosManagedOpenshiftIoYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x56\x4f\x8f\xe3\xb6\x0f\xbd\xe7\x53\x10\xfb\x3b\xec\xe5\x17\x07\x83\x01\x8a\xc2\xb7\xee\xb4\x40\xb7\x9d\x6e\x07\x9b\xc5\xdc\x19\x99\x49\xd4\x91\x25\x55\xa4\xbc\x9b\x16\xfd\xee\x05\x65\x3b\x71\x1c\x6f\x07\x05\xea\x53\x42\x53\xe4\xd3\x7b\xfc\x63\x8c\xf6\x99\x12\xdb\xe0\x6b\xc0\x68\xe9\x8b\x90\xd7\x7f\x5c\xbd\x7c\xcb\x95\x0d\x9b\xee\x6e\x47\x82\x77\xab\x17\xeb\x9b\x1a\x1e\x32\x4b\x68\x3f\x12\x87\x9c\x0c\x7d\x4f\x7b\xeb\xad\xd8\xe0\x57\x2d\x09\x36\x28\x58\xaf\x00\x1c\xee\xc8\xb1\xfe\x02\x8d\x59\x85\x48\x9e\x8f\x76\x2f\x95\x09\xed\xa6\x45\x8f\x07\x6a\x6a\x78\x23\x29\xd3\x9b\xe2\x75\xb4\x1d\x4d\xdc\x6c\xd8\x18\x97\x59\x28\xad\xa3\x43\xd9\x87\xd4\xd6\x80\x9f\x79\x05\xe0\xb1\xa5\x1a\x3a\x72\x94\x02\x57\x43\xac\xab\xa3\x2b\x8e\x64\x34\x39\x36\x4d\xc1\x86\xee\x29\x59\x2f\x94\x1e\x82\xcb\xad\x2f\xc0\xd6\xf0\xd3\xf6\xd7\x0f\x4f\x28\xc7\x1a\x2a\x16\x94\xcc\x15\xdf\xbf\xcb\xe6\x85\xa4\xd2\x1c\x05\x56\x43\x6c\x92\x8d\x52\xd8\xf9\x80\x2d\x41\xd8\x83\x1c\x09\xb6\xf7\xb0\x2b\xbe\xc5\xad\xc7\xf4\xee\x62\x90\x53\xa4\x1a\x58\x92\xf5\x87\xd7\x92\xc5\x14\x3a\xab\x8c\x53\x73\x9b\xf3\x47\xe4\xeb\x7c\xb0\x23\xf2\xc0\xd9\x18\x62\xde\x67\xe7\x4e\x30\x0f\xd0\xa3\x79\x9a\x59\x7b\x48\xbb\x10\x1c\xa1\x7f\x0d\x93\x43\x96\xed\xc9\x9b\x4f\xb6\x25\x16\x6c\xe3\x24\xf0\x23\xb2\x80\xbe\x9c\x84\x6d\x50\x94\xb0\x43\x0a\x39\xd6\xb0\x28\x4a\x7f\x7c\x28\x8a\xbe\x96\x9e\x8b\x88\xc5\xe0\x2c\xcb\xcf\x13\xe3\xa3\xe5\x9e\xc9\xe8\x72\x42\x77\x16\xbc\xd8\xd8\xfa\x43\x76\x98\x46\xeb\x0a\x80\x4d\x50\x1c\x2a\x11\x47\x34\xe5\xce\x9c\x77\x69\xa8\xd3\x21\x6d\x7f\xcd\x1a\xfe\xfc\x6b\x05\xd0\xa1\xb3\x0d\x16\x9a\xcb\x4b\x45\xfb\xdd\xd3\xfb\xe7\xfb\xad\x39\x52\x8b\xbd\x11\x94\xdd\x48\x49\xec\x18\x63\xa8\xe9\xb1\x67\xce\xb6\x99\x70\x6f\x35\x54\xef\x03\x8d\x76\x09\xf5\x42\x76\xbd\x8d\x1a\xe0\x92\xa6\x2f\x28\xcb\x90\x28\x26\x62\xf2\x52\x20\x4d\xc2\x82\xba\xa0\x87\xb0\xfb\x8d\x8c\x54\xb0\xa5\xa4\x41\x80\x8f\x21\xbb\x06\x4c\xf0\x1d\x25\x81\x44\x26\x1c\xbc\xfd\xe3\x1c\x99\x41\x42\x49\xe9\x50\x68\x60\x73\x7c\x4a\x37\x78\x74\x4a\x42\xa6\xff\x03\xfa\x06\x5a\x3c\x41\x22\xcd\x01\xd9\x4f\xa2\x15\x17\xae\xe0\x97\x90\x08\xac\xdf\x87\x1a\x8e\x22\x91\xeb\xcd\xe6\x60\x65\x9c\x12\x26\xb4\x6d\xf6\x56\x4e\x1b\x13\xbc\x24\xbb\xcb\x12\x12\x6f\x1a\xea\xc8\x6d\x30\xda\x75\xc1\xe9\xa5\x4c\x96\xb6\xf9\xdf\x59\x99\xb7\x13\x60\xb3\xb6\xe9\x9f\x52\x2b\x5f\xa5\x59\x8b\x06\x2c\x03\x0e\xc7\x7a\xb8\x17\x36\xd5\xa4\x24\x7c\xfc\x61\xfb\x09\xc6\xa4\x85\xf1\x6b\x8a\x0b\xb9\x97\x63\x7c\xe1\x59\x79\xb1\x7e\x4f\xa9\xd7\x69\x9f\x42\x5b\x22\x92\x6f\x62\xb0\x5e\xca\x1f\xe3\x2c\xf9\x6b\x8e\x39\xef\x5a\x2b\x2a\xec\xef\x99\x58\x54\x8e\x0a\x1e\xd0\xfb\xa0\x4d\x0c\x39\x6a\xd3\x34\x15\xbc\xf7\xf0\x80\x2d\xb9\x07\x64\xfa\xaf\x59\x56\x42\x79\xad\x0c\xbe\xce\xf3\x74\x80\x5f\x3b\xf6\xe4\x9c\xcd\xe3\x78\xfd\x67\xa7\xbe\xd5\x26\x6e\x4b\x8d\x54\x3c\x87\xa1\x73\x6d\x9d\xe9\xbc\x1d\x9c\xb4\xdc\x05\xad\x67\x68\x48\xd0\x3a\x9e\x0c\x64\x96\x90\xf0\x40\xe3\xa0\xdc\x87\x34\x8b\x08\xb0\x43\xf3\x92\x23\xcf\xec\x5f\x43\xa6\xcf\xcd\x24\xbc\x75\x99\x41\x7d\x9c\x9f\xd0\xf2\x54\x88\x62\x5b\xad\x3c\xec\x2b\x66\x40\x19\x83\xb3\xe6\xb4\x10\x13\xe0\x33\x72\x49\x0f\x7c\xf2\x86\x9a\x6a\xc1\x49\x17\x23\x4a\x3f\x7f\xd7\x1a\x7f\xc1\x67\x51\xec\xf1\x29\x23\xfd\xb5\x1b\x95\xc5\x37\x5c\xc2\x2f\x2d\x41\x30\x89\xb4\x98\x75\xe2\xa8\x0a\x4b\x30\x60\x98\xec\x83\x06\xa3\x7e\x0b\x9e\x2d\x7e\x79\x24\x7f\xd0\xc5\xf4\xcd\xfd\xbf\xbd\xd0\x64\x19\xbe\x7a\xaf\xc9\x8a\x2c\xd7\x4b\x99\x20\xf8\x32\x1e\xce\xfa\x1c\x91\xfb\x95\x5b\xbe\x73\xd0\xb9\x65\xad\x26\x69\x97\x74\x9a\x2f\xdf\xe9\xa3\xf3\xc1\xa6\x5b\xb8\xeb\x9b\xc5\x3e\x8f\x37\x6b\xb9\x1b\x73\x37\x7e\xd7\x75\x77\xe8\xe2\x11\xef\x2e\xb6\xe1\x1b\x68\xf8\x98\xba\xbc\x06\x60\x1d\x7b\x4d\x5d\xd8\x18\x96\x66\x69\xab\xc1\xf2\x77\x00\x00\x00\xff\xff\x50\xe4\x4f\xc9\x2f\x0a\x00\x00")

func customresourcedefinitionApiextensionsK8sIoVelerosManagedOpenshiftIoYamlBytes() ([]byte, error) {
	return bindataRead(
		_customresourcedefinitionApiextensionsK8sIoVelerosManagedOpenshiftIoYaml,
		"CustomResourceDefinition.apiextensions.k8s.io/veleros.managed.openshift.io.yaml",
	)
}

func customresourcedefinitionApiextensionsK8sIoVelerosManagedOpenshiftIoYaml() (*asset, error) {
	bytes, err := customresourcedefinitionApiextensionsK8sIoVelerosManagedOpenshiftIoYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "CustomResourceDefinition.apiextensions.k8s.io/veleros.managed.openshift.io.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _deploymentAppsOpenshiftVeleroManagedVeleroOperatorYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x91\x4f\x6b\xe3\x30\x10\xc5\xef\xfe\x14\x43\x2e\x01\x83\x13\x72\xd5\x2d\x10\xef\x5e\x76\x93\x10\x4a\xaf\x65\x2a\x3f\xc7\xa2\xfa\x87\x24\xbb\xf4\xdb\x17\x35\xae\xeb\xd0\x92\xd0\x77\x32\x33\xcf\xbf\x79\x33\x62\xaf\x1e\x11\xa2\x72\x56\x10\x7b\x1f\xd7\xc3\xa6\x78\x51\xb6\x11\xb4\x83\xd7\xee\xcd\xc0\xa6\xc2\x20\x71\xc3\x89\x45\x41\xa4\xf9\x19\x3a\xe6\x2f\x22\xf6\x6a\xe5\x3c\x6c\xec\x54\x9b\x56\xd2\x99\xb5\x61\xcb\x67\x34\x82\x16\x29\xf4\x58\x7c\xb8\x3a\x35\x60\x66\x53\x6e\x2d\x75\x1f\x13\x42\xe5\x35\xa7\xd6\x05\x23\x88\x5f\x63\x41\x64\xd9\x40\xd0\xc8\xa8\x06\x68\x04\x57\x39\x8f\xc0\xc9\x85\xb1\x1f\x3d\x4b\x08\x9a\x78\xa3\xad\x88\x1e\x32\xa7\x0a\xf0\x5a\x49\x8e\x82\x36\x05\x51\x84\x86\x4c\x2e\x5c\xf2\x1a\x4e\xb2\xfb\x37\x5b\xe0\xfe\xc8\x04\x93\x53\x62\x04\xcc\x0e\x91\xa5\xaf\x58\xf7\x69\x44\x9f\x31\xb3\xa4\xb3\x89\x95\x45\x98\x08\x15\x49\x67\x0c\xdb\xe6\x0b\x59\xdd\xc4\x65\xc1\x0e\x73\xfb\x25\xc3\xf1\xb0\x7b\xda\x6f\xff\xd7\x53\x83\x68\x60\xdd\xe3\x4f\x70\x46\xcc\x8a\x44\xad\x82\x6e\x4e\x68\xaf\xab\x63\xfd\xc8\xa9\x13\xd3\xda\xab\xcc\xfe\x36\xea\x70\xac\x4f\xdb\x87\xc3\xe9\xc7\x79\xb7\xaf\x91\xa5\x0c\x9f\x21\x68\x59\x96\x25\xfd\xad\xf7\x99\x55\xef\xa8\x2c\xcb\xe5\x2f\xce\x9a\x5f\x3a\x0c\x4a\x62\x2b\xa5\xeb\x6d\xda\xdf\xfc\xe3\x3d\x00\x00\xff\xff\x71\x9d\xb6\xa4\xf5\x02\x00\x00")

func deploymentAppsOpenshiftVeleroManagedVeleroOperatorYamlBytes() ([]byte, error) {
	return bindataRead(
		_deploymentAppsOpenshiftVeleroManagedVeleroOperatorYaml,
		"Deployment.apps/openshift-velero/managed-velero-operator.yaml",
	)
}

func deploymentAppsOpenshiftVeleroManagedVeleroOperatorYaml() (*asset, error) {
	bytes, err := deploymentAppsOpenshiftVeleroManagedVeleroOperatorYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Deployment.apps/openshift-velero/managed-velero-operator.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _groupUserOpenshiftIoOsdSreClusterAdminsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\xcd\x31\xae\xc2\x30\x0c\x80\xe1\xdd\xa7\xb0\xba\xb7\xd5\x5b\x7d\x81\x77\x03\x16\xc4\x60\x1a\x03\x16\x89\x1d\xd9\x09\xe7\x47\xdd\xd8\xfe\xe5\xd7\xc7\x5d\x2f\x12\xa9\x6e\x84\x33\x25\x36\xef\x62\xf9\xd2\xc7\xd8\xd4\xf7\xcf\x1f\xbc\xd5\x0a\xe1\x7f\xf8\xec\xd0\x64\x70\xe1\xc1\x04\x88\x95\xef\x52\xf3\x2c\x44\xee\xfa\xf3\x1d\xde\xf6\xc6\xc6\x4f\x29\x84\xcb\x88\x29\x0b\x20\x1a\x37\x21\xf4\x2c\x6b\x86\xac\x47\x9d\x39\x24\x56\x2e\x4d\x2d\xe1\x94\x93\xf0\x7a\x83\x6f\x00\x00\x00\xff\xff\x1a\x23\x2c\x0e\x90\x00\x00\x00")

func groupUserOpenshiftIoOsdSreClusterAdminsYamlBytes() ([]byte, error) {
	return bindataRead(
		_groupUserOpenshiftIoOsdSreClusterAdminsYaml,
		"Group.user.openshift.io/osd-sre-cluster-admins.yaml",
	)
}

func groupUserOpenshiftIoOsdSreClusterAdminsYaml() (*asset, error) {
	bytes, err := groupUserOpenshiftIoOsdSreClusterAdminsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Group.user.openshift.io/osd-sre-cluster-admins.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _namespaceOpenshiftCodereadyWorkspacesYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\xcf\x31\x8e\x02\x31\x0c\x46\xe1\x3e\xa7\xb0\xd2\x67\x57\xdb\xe6\x10\x5b\xd2\x9b\xe4\x67\xb0\x26\xb1\x47\x89\x07\xc4\xed\x11\x34\x08\x09\xca\x27\x7d\xcd\xe3\x4d\x0e\x18\x53\x4c\x33\x5d\xfe\xc2\x2a\x5a\x33\xfd\x73\xc7\xdc\xb8\x20\x74\x38\x57\x76\xce\x81\x88\x55\xcd\xd9\xc5\x74\x3e\x92\xc8\x36\xe8\x3c\xcb\xc9\x7f\xc4\x7e\xd5\x2a\xd2\x44\x43\x71\x1b\x99\x62\x0c\x44\x8d\x8f\x68\x9f\x70\x69\xfb\x74\x8c\xd4\x6c\x59\x44\x97\x4c\xd1\xc7\x8e\xf8\x1d\x76\x53\x71\x1b\xef\x56\xb9\x23\xbf\x7c\x2a\x56\x31\xc0\xf5\x96\xae\x36\xd6\xe7\xc0\x0c\xf7\x00\x00\x00\xff\xff\xe9\x2c\x01\x32\xe1\x00\x00\x00")

func namespaceOpenshiftCodereadyWorkspacesYamlBytes() ([]byte, error) {
	return bindataRead(
		_namespaceOpenshiftCodereadyWorkspacesYaml,
		"Namespace/openshift-codeready-workspaces.yaml",
	)
}

func namespaceOpenshiftCodereadyWorkspacesYaml() (*asset, error) {
	bytes, err := namespaceOpenshiftCodereadyWorkspacesYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Namespace/openshift-codeready-workspaces.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _namespaceOpenshiftLoggingYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\xcc\x31\x4e\x04\x31\x0c\x85\xe1\x3e\xa7\xb0\xa6\xcf\xac\x68\x73\x08\x4a\x7a\x6f\xe6\x11\x2c\x12\x3b\x24\x9e\x11\xc7\x47\xa0\x45\xab\x29\x10\x5b\xda\xfa\xfe\xc7\x5d\x5e\x30\xa6\x98\x26\x3a\x9e\xc2\xbb\xe8\x96\xe8\x99\x1b\x66\xe7\x8c\xd0\xe0\xbc\xb1\x73\x0a\x44\xac\x6a\xce\x2e\xa6\xf3\xfb\x24\xb2\x0e\x9d\x6f\xf2\xea\xab\xd8\x45\x6d\x43\x9c\xa8\xc8\x6e\x23\xd1\xb2\x04\xa2\xca\x57\xd4\x1b\xe6\x2e\xeb\x3d\xc8\xd6\x2e\x8d\x95\x0b\xb6\x44\x8b\x8f\x1d\xcb\x8f\xba\xfd\xd6\xd3\xf4\xc4\x38\x24\x23\xd6\x6b\xfc\xd8\xcd\x39\xe2\x13\xad\xfb\x03\xa1\xdb\xe0\x82\xd8\x8f\xbf\xc3\x53\x90\xeb\x3e\x1d\x23\x56\x2b\x45\xb4\xfc\x0f\x9b\xa9\xb8\x8d\xb3\x55\x6e\x48\x77\xff\xbb\x16\xbe\x02\x00\x00\xff\xff\xda\x45\x94\xc3\x6c\x01\x00\x00")

func namespaceOpenshiftLoggingYamlBytes() ([]byte, error) {
	return bindataRead(
		_namespaceOpenshiftLoggingYaml,
		"Namespace/openshift-logging.yaml",
	)
}

func namespaceOpenshiftLoggingYaml() (*asset, error) {
	bytes, err := namespaceOpenshiftLoggingYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Namespace/openshift-logging.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _namespaceOpenshiftSrePruningYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\xca\x31\x0e\xc2\x30\x10\x04\xc0\xde\xaf\x58\xa5\x4f\x10\xad\x1f\x41\x49\xbf\x24\x4b\x38\x11\x9f\x2d\x9f\xc3\xfb\x11\x0d\xdd\x14\xc3\x66\x77\xf5\xb0\xea\x19\x9f\x6b\x7a\x9b\x6f\x19\x37\x16\x45\xe3\xaa\x54\x34\xb8\x71\x30\x27\xe0\xe0\x43\x47\xfc\x04\xb0\xd9\x52\x9b\x3c\x5e\xf6\x1c\xcb\x5a\xcb\xa5\xd0\xb9\x6b\xcb\x98\x46\x3f\x35\x25\xc0\x59\x94\xf1\x5f\x73\x74\xcd\xad\x9f\x6e\xbe\xa7\x6f\x00\x00\x00\xff\xff\x35\x4e\x64\x6f\x77\x00\x00\x00")

func namespaceOpenshiftSrePruningYamlBytes() ([]byte, error) {
	return bindataRead(
		_namespaceOpenshiftSrePruningYaml,
		"Namespace/openshift-sre-pruning.yaml",
	)
}

func namespaceOpenshiftSrePruningYaml() (*asset, error) {
	bytes, err := namespaceOpenshiftSrePruningYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Namespace/openshift-sre-pruning.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _namespaceOpenshiftValeroYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xcc\x31\x0e\x83\x30\x0c\x46\xe1\x3d\xa7\xb0\xd8\x01\x75\xcd\x21\x3a\x76\x77\xe1\x07\xac\x26\x76\x94\x18\x7a\xfd\xaa\x2c\x65\xe8\xf6\x86\x4f\x8f\x8b\x3c\x50\x9b\x98\x46\x3a\x6e\xe1\x25\x3a\x47\xba\x73\x46\x2b\x3c\x21\x64\x38\xcf\xec\x1c\x03\x51\xe2\x27\x52\xfb\x16\x11\x17\x19\xac\x40\xdb\x26\x8b\x0f\x93\xe5\x31\xb3\xf2\x8a\x39\x52\xe7\x75\x47\x77\xaa\x4d\x0e\x5c\x98\xd8\x38\xa5\xbd\x39\x6a\x5f\x12\xfb\x62\x35\x47\xe2\x77\x3b\xed\x5f\x96\x4d\xc5\xad\x8a\xae\x97\xaf\x72\x46\xfc\xf9\xfe\x40\x42\xb5\xf0\x09\x00\x00\xff\xff\x40\x36\x60\x25\xca\x00\x00\x00")

func namespaceOpenshiftValeroYamlBytes() ([]byte, error) {
	return bindataRead(
		_namespaceOpenshiftValeroYaml,
		"Namespace/openshift-valero.yaml",
	)
}

func namespaceOpenshiftValeroYaml() (*asset, error) {
	bytes, err := namespaceOpenshiftValeroYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Namespace/openshift-valero.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _operatorgroupOperatorsCoreosComOpenshiftCodereadyWorkspacesOpenshiftCodereadyWorkspacesYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x4f\xb1\x4a\x04\x41\x0c\xed\xe7\x2b\xc2\xf5\xbb\x72\xed\x74\x87\x85\x08\xa2\x16\x62\x1f\x67\xe2\x3a\xdc\x4c\x32\x24\xd9\x15\xff\x5e\x76\x6f\x0f\xae\xbb\x34\xc9\xe3\x3d\xf2\xde\xc3\x5e\x3e\x49\xad\x08\x47\x90\x4e\x8a\x2e\x6a\x63\x12\x25\x59\x57\x7b\x58\x8e\xe1\x5c\x38\x47\x78\xdb\xd9\x27\x95\xb9\x87\x46\x8e\x19\x1d\x63\x00\x40\x66\x71\xf4\x22\x6c\x2b\x04\x90\xda\xc6\xae\xb2\x94\x4c\xf9\xf4\xfe\x6c\x11\x1e\xeb\x6c\x4e\xfa\x22\xd3\x54\x78\x1a\x97\xe3\x58\xf7\x53\x3a\xb1\xfd\x94\x6f\x1f\x8b\x04\x80\x8a\x5f\x54\xf7\x37\xd8\xcb\x0d\xbd\x86\x69\xc8\x38\x51\x8e\x70\x70\x9d\xe9\x10\x00\x18\x1b\x6d\xc9\x2f\xaa\x21\x49\x26\x25\xcc\x7f\xc3\xaf\xe8\xd9\x3a\x26\xb2\x5d\xb6\x81\xbb\x5a\xeb\x94\x56\x7b\x23\x5d\x4a\xa2\x53\x4a\x32\xb3\x5f\x02\xdd\x96\x5e\x27\x29\x6d\xb5\x3f\x4a\x23\x73\x6c\x3d\x02\xcf\xb5\x06\x00\x47\x9d\xc8\x5f\xaf\xae\x5b\xa1\xe1\x9e\xf5\x7f\x00\x00\x00\xff\xff\x0a\x63\xd0\x51\x8c\x01\x00\x00")

func operatorgroupOperatorsCoreosComOpenshiftCodereadyWorkspacesOpenshiftCodereadyWorkspacesYamlBytes() ([]byte, error) {
	return bindataRead(
		_operatorgroupOperatorsCoreosComOpenshiftCodereadyWorkspacesOpenshiftCodereadyWorkspacesYaml,
		"OperatorGroup.operators.coreos.com/openshift-codeready-workspaces/openshift-codeready-workspaces.yaml",
	)
}

func operatorgroupOperatorsCoreosComOpenshiftCodereadyWorkspacesOpenshiftCodereadyWorkspacesYaml() (*asset, error) {
	bytes, err := operatorgroupOperatorsCoreosComOpenshiftCodereadyWorkspacesOpenshiftCodereadyWorkspacesYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "OperatorGroup.operators.coreos.com/openshift-codeready-workspaces/openshift-codeready-workspaces.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _operatorgroupOperatorsCoreosComOpenshiftLoggingOpenshiftLoggingYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8f\xb1\x4e\x03\x31\x0c\x86\xf7\x3c\x85\xd5\xbd\x87\xba\x66\xab\x18\x10\x12\x02\x06\xc4\x6e\x72\xe6\xb0\x48\xec\xc8\xf6\xdd\xf3\xa3\x6b\x83\xd4\xa1\x59\x92\xe8\xb3\xfc\xfd\x3f\x76\xfe\x24\x73\x56\xc9\xa0\x9d\x0c\x43\xcd\xa7\xa2\x46\xba\x5f\xed\x61\x3b\xa5\x5f\x96\x39\xc3\xdb\xa0\x4f\xa6\x6b\x4f\x8d\x02\x67\x0c\xcc\x09\x00\x45\x34\x30\x58\xc5\xf7\x2f\x80\xd6\x36\x75\xd3\x8d\x67\x9a\xcf\xef\xcf\x9e\xe1\xb1\xae\x1e\x64\x2f\xba\x2c\x2c\xcb\xb4\x9d\xa6\x3a\x9e\xda\x49\xfc\x87\xbf\x63\x62\x4d\x00\x15\xbf\xa8\x8e\x35\xd8\xf9\x06\xef\x61\x1a\x0a\x2e\x34\x67\x38\x84\xad\x74\x48\x00\x82\x8d\x2e\xc9\xaf\x53\xc7\xb1\x76\x10\xef\x58\xee\x62\xef\x54\x76\x89\x93\x6d\x5c\xe8\x5c\x8a\xae\x12\x57\xed\x6d\xb5\xfd\x14\xa3\x4b\xb9\x0f\x6e\xe4\x81\xad\x67\x90\xb5\xd6\x04\x10\x68\x0b\xc5\xeb\xbf\xe8\x12\xfb\x78\xc7\xf6\x17\x00\x00\xff\xff\x00\xee\xb0\x8b\x65\x01\x00\x00")

func operatorgroupOperatorsCoreosComOpenshiftLoggingOpenshiftLoggingYamlBytes() ([]byte, error) {
	return bindataRead(
		_operatorgroupOperatorsCoreosComOpenshiftLoggingOpenshiftLoggingYaml,
		"OperatorGroup.operators.coreos.com/openshift-logging/openshift-logging.yaml",
	)
}

func operatorgroupOperatorsCoreosComOpenshiftLoggingOpenshiftLoggingYaml() (*asset, error) {
	bytes, err := operatorgroupOperatorsCoreosComOpenshiftLoggingOpenshiftLoggingYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "OperatorGroup.operators.coreos.com/openshift-logging/openshift-logging.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _prometheusruleMonitoringCoreosComOpenshiftMonitoringSreAlertsStuckBuildsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x90\xcf\x4e\x72\x31\x10\xc5\xf7\xf7\x29\x26\x77\x05\x8b\xf2\x41\xbe\x8d\x69\xd4\x85\x89\x4b\x89\x81\xc4\xed\xcd\xd0\x3b\x42\x43\xff\x65\xa6\x05\x8d\xf1\xdd\x4d\x0b\xa2\x2b\xe9\x6a\xd2\xf3\xeb\xe9\x39\x83\xc9\xbe\x10\x8b\x8d\x41\x83\x8f\xc1\xe6\xc8\x36\x6c\x67\x26\x32\x45\x99\x99\xe8\xff\x1d\x16\xdd\xde\x86\x51\xc3\x33\x47\x4f\x79\x47\x45\x56\xc5\x51\xe7\x29\xe3\x88\x19\x75\x07\xe0\x70\x43\x4e\xea\x04\x80\xc9\xce\x62\xa2\x20\x3b\xfb\x9a\x9b\x83\xc7\x80\x5b\x1a\x35\xf4\x99\x0b\xf5\x8d\x4a\x17\x33\x0d\xc2\xa4\xd0\x11\x67\x51\x92\x8b\xd9\xab\x4d\xb1\x6e\x94\xc6\x71\x74\xa4\xa1\xa9\x8a\x8b\xa3\x7a\x1b\xd0\xd3\x5f\xaf\xaa\x2e\x09\x0d\x69\xb8\x04\x51\x3f\xe5\x3a\x49\x64\x6a\xd6\x2d\xc7\x92\x5a\x6a\x75\xd5\x13\xa0\xfd\x7e\xaa\xa8\x4e\x81\x34\xac\x2b\xb4\xa4\xe3\x43\xc3\xfe\x3f\xd9\xb0\x5e\x3d\x36\x04\x80\xde\x12\x6b\x30\xb1\x84\x3c\xb9\xc4\x18\x9a\xe1\x80\x26\xdb\x03\x0d\xd9\x7a\x1a\x84\x4c\x0c\xa3\x7c\xa4\x1d\x0a\xdd\xf5\x4b\x3a\xf6\x9f\x70\x0b\x55\x9b\x4c\x41\xc1\xe2\x66\x3e\x3d\x5b\x02\xdc\xc3\xfc\x3c\xff\x5e\x79\x3d\xd7\x4a\x7f\x73\x42\x07\x62\x9b\xdf\x35\x1c\x91\x43\x55\xbe\x02\x00\x00\xff\xff\x26\xb2\x55\xaf\x03\x02\x00\x00")

func prometheusruleMonitoringCoreosComOpenshiftMonitoringSreAlertsStuckBuildsYamlBytes() ([]byte, error) {
	return bindataRead(
		_prometheusruleMonitoringCoreosComOpenshiftMonitoringSreAlertsStuckBuildsYaml,
		"PrometheusRule.monitoring.coreos.com/openshift-monitoring/sre-alerts-stuck-builds.yaml",
	)
}

func prometheusruleMonitoringCoreosComOpenshiftMonitoringSreAlertsStuckBuildsYaml() (*asset, error) {
	bytes, err := prometheusruleMonitoringCoreosComOpenshiftMonitoringSreAlertsStuckBuildsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "PrometheusRule.monitoring.coreos.com/openshift-monitoring/sre-alerts-stuck-builds.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _prometheusruleMonitoringCoreosComOpenshiftMonitoringSreAlertsStuckVolumesYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x91\x3f\x8b\xdb\x40\x10\xc5\x7b\x7d\x8a\x41\x55\x52\xc8\xb1\x0a\x37\x0b\x2e\x02\x71\x19\x08\x36\xb8\x09\x41\x8c\x57\x13\x79\xf1\xfe\x63\x67\xa4\x24\x84\xfb\xee\x87\x56\x67\x9d\xb9\xc2\x6e\xc4\x9d\x2a\x31\xf3\xf6\xed\xfb\xed\xc3\x68\x8e\x94\xd8\x04\xaf\xc0\x05\x6f\x24\x24\xe3\xbb\x95\x0e\x89\x02\xaf\x74\x70\x5f\x86\xba\xb8\x18\xdf\x2a\xf8\x91\x82\x23\x39\x53\xcf\xfb\xde\x52\xe1\x48\xb0\x45\x41\x55\x00\x58\x3c\x91\xe5\xf1\x0f\x00\xa3\x59\x85\x48\x9e\xcf\xe6\xb7\x64\x07\x87\x1e\x3b\x6a\x15\x94\x92\x7a\x2a\xb3\x2a\xce\x66\x0a\x38\x51\x85\x96\x92\x70\xc5\xd2\xeb\x4b\x35\x04\xdb\x3b\xe2\x2c\x4c\xc1\x92\x82\xbc\xae\x52\x6f\xf3\xd4\xa3\xa3\xbb\xc7\x46\x01\x47\xd4\xa4\x60\x8e\x52\xbd\xe2\x15\x1c\x49\x8f\x69\xbb\x14\xfa\x98\x73\x57\x8f\x4d\x01\xf2\xfd\x13\x65\x35\x45\x52\xb0\x3b\xf1\x31\x4b\x0e\xa3\xfc\xab\x08\xea\xb3\xf1\xdd\xe6\xbb\xf1\x87\xfd\x2e\x6b\x01\xe8\x6f\x4c\x0a\x9c\xf1\x4d\x18\x28\x35\x62\x1c\x7d\xa2\x13\x37\x93\x79\xc3\x82\x42\xff\xdf\x0e\xb6\x25\x5e\xdd\xca\xa7\x9f\x1b\xf7\xeb\x33\x6c\xb7\x50\xbf\x58\xde\x3e\xf9\xf8\x3d\x42\xbe\xea\x98\x06\x4a\x46\xfe\x29\xf8\x83\xc9\x5f\x37\x8f\x70\xea\xf5\xd2\x3c\xf5\x7a\x02\x9a\x83\x2d\x07\xa6\x93\x11\xa3\xd1\xde\x23\xfb\x46\x4b\x16\xd5\xd2\x07\x17\x35\xe3\x2c\x53\xd4\x2d\xcf\x7b\x14\xf5\x1c\x00\x00\xff\xff\x3a\x25\xdd\xb5\x86\x04\x00\x00")

func prometheusruleMonitoringCoreosComOpenshiftMonitoringSreAlertsStuckVolumesYamlBytes() ([]byte, error) {
	return bindataRead(
		_prometheusruleMonitoringCoreosComOpenshiftMonitoringSreAlertsStuckVolumesYaml,
		"PrometheusRule.monitoring.coreos.com/openshift-monitoring/sre-alerts-stuck-volumes.yaml",
	)
}

func prometheusruleMonitoringCoreosComOpenshiftMonitoringSreAlertsStuckVolumesYaml() (*asset, error) {
	bytes, err := prometheusruleMonitoringCoreosComOpenshiftMonitoringSreAlertsStuckVolumesYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "PrometheusRule.monitoring.coreos.com/openshift-monitoring/sre-alerts-stuck-volumes.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _prometheusruleMonitoringCoreosComOpenshiftMonitoringSreClusterOperatorDownAlertsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x90\xb1\x4e\x33\x31\x10\x84\xfb\x7b\x8a\x55\x9a\x54\xce\xff\xa7\xa0\xb1\x94\x0a\xa8\x83\x82\x44\x1b\x2d\xf6\xde\xc5\xc2\xf6\x5a\x6b\x3b\x80\x10\xef\x8e\xce\xb9\x1c\x54\x24\x0d\xae\xd6\xab\x99\xd1\x7c\x8b\xc9\x3d\x91\x64\xc7\x51\x43\xe0\xe8\x0a\x8b\x8b\xc3\xca\xb0\x10\xe7\x95\xe1\xf0\xef\xb8\xee\x5e\x5c\xb4\x1a\x1e\x84\x03\x95\x03\xd5\xbc\xab\x9e\xba\x40\x05\x2d\x16\xd4\x1d\x80\xc7\x67\xf2\x79\x9c\x00\x30\xb9\x15\x27\x8a\xf9\xe0\xfa\xd2\x12\x02\x46\x1c\xc8\x6a\x58\x14\xa9\xb4\x68\xaa\x34\x87\x69\xc8\x42\xca\xf8\x9a\x0b\x89\xe2\x44\x82\x85\x45\x59\x7e\x8d\x0a\x3d\x49\xc9\xcd\x20\xec\x49\x43\x5b\x28\xa9\x9e\xc6\x6d\xc4\x40\x57\xd9\x47\x61\x4e\x68\x48\xc3\x5c\x4d\x7d\xe3\x76\x39\x91\x19\xdb\x0f\xc2\x35\x35\x0e\x75\x7d\x38\x40\xeb\x73\xa2\x57\xa7\x8a\x1a\x6e\x4f\xa6\xed\xe4\xd9\xf6\xbd\x77\x91\x1e\x77\xf7\x4d\x06\x40\x6f\x49\x34\x4c\xd1\xfb\x73\xf4\xbe\x26\xd8\x6c\xe0\xff\x24\xea\x59\x34\xac\x6f\xc2\xf4\xfd\x79\xe6\xf1\x5d\xc2\x3a\xeb\x32\x1d\x49\x5c\x79\xd7\x60\xc4\x15\x67\xd0\xff\xda\xf5\x8e\x06\x41\x4b\xf6\x62\x59\xc3\xd1\xba\xe2\x38\xe6\x8f\x79\xdc\x2c\xcf\xf6\xe5\xe7\x88\xb2\xfe\x73\x94\xaf\x00\x00\x00\xff\xff\x22\x5b\xdc\x2b\xc3\x02\x00\x00")

func prometheusruleMonitoringCoreosComOpenshiftMonitoringSreClusterOperatorDownAlertsYamlBytes() ([]byte, error) {
	return bindataRead(
		_prometheusruleMonitoringCoreosComOpenshiftMonitoringSreClusterOperatorDownAlertsYaml,
		"PrometheusRule.monitoring.coreos.com/openshift-monitoring/sre-cluster-operator-down-alerts.yaml",
	)
}

func prometheusruleMonitoringCoreosComOpenshiftMonitoringSreClusterOperatorDownAlertsYaml() (*asset, error) {
	bytes, err := prometheusruleMonitoringCoreosComOpenshiftMonitoringSreClusterOperatorDownAlertsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "PrometheusRule.monitoring.coreos.com/openshift-monitoring/sre-cluster-operator-down-alerts.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _prometheusruleMonitoringCoreosComOpenshiftMonitoringSreConfigureAlertmanagerOperatorOfflineAlertsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x91\x31\x4f\x03\x31\x0c\x85\xf7\xfb\x15\xd6\x4d\x30\xa4\xa8\x03\x4b\x24\x06\x84\x98\x8b\x8a\xc4\xee\xa6\xbe\xab\x45\x12\x47\x4e\x52\x81\x10\xff\x1d\x5d\xee\x5a\xba\x55\x82\x4c\x89\x63\x7f\x79\xef\x05\x13\xbf\x91\x66\x96\x68\x21\x48\xe4\x22\xca\x71\x5c\x39\x51\x92\xbc\x72\x12\xee\x8e\xeb\xee\x9d\xe3\xde\xc2\x8b\x4a\xa0\x72\xa0\x9a\xb7\xd5\x53\x17\xa8\xe0\x1e\x0b\xda\x0e\xc0\xe3\x8e\x7c\x9e\x76\x00\x98\x78\x25\x89\x62\x3e\xf0\x50\x1a\x21\x60\xc4\x91\xf6\x16\xfa\xa2\x95\xfa\xd6\x95\xce\x30\x0b\x59\xc9\x38\x89\x03\x8f\x55\xc9\xa0\x27\x2d\xf3\x88\x1a\x49\xa4\x58\x44\x8d\x0c\x83\xe7\xb8\xdc\xe6\x86\x50\xf1\x64\xa1\x15\x8c\x56\x4f\x53\x35\x62\xa0\x3f\x02\xa7\xd1\x9c\xd0\x91\x85\xb3\x7c\xf3\x1b\x49\x97\x13\xb9\xc9\xe1\xa8\x52\x53\xf3\x6a\xfe\xf3\x1c\x40\xd3\x3c\x67\x66\x66\x1b\x16\x9e\x4e\x98\xc7\x0b\xca\x66\x81\x6c\x66\xc6\xeb\xf6\xb9\x0d\x01\xd0\x47\x52\x0b\xb8\xcb\x14\xcb\x4d\x4d\x5f\x99\xf4\xc8\x8e\x1e\xfa\x2b\x6a\xfa\xef\xdb\x85\x30\x88\x5a\x58\xdf\x87\xe5\x78\xf9\x8f\xd3\xba\x96\xc9\xa9\x2f\xd3\x91\x94\xcb\xa7\x05\xa7\x5c\xd8\xa1\xef\x7e\x02\x00\x00\xff\xff\x1a\x14\xaf\xdf\x59\x02\x00\x00")

func prometheusruleMonitoringCoreosComOpenshiftMonitoringSreConfigureAlertmanagerOperatorOfflineAlertsYamlBytes() ([]byte, error) {
	return bindataRead(
		_prometheusruleMonitoringCoreosComOpenshiftMonitoringSreConfigureAlertmanagerOperatorOfflineAlertsYaml,
		"PrometheusRule.monitoring.coreos.com/openshift-monitoring/sre-configure-alertmanager-operator-offline-alerts.yaml",
	)
}

func prometheusruleMonitoringCoreosComOpenshiftMonitoringSreConfigureAlertmanagerOperatorOfflineAlertsYaml() (*asset, error) {
	bytes, err := prometheusruleMonitoringCoreosComOpenshiftMonitoringSreConfigureAlertmanagerOperatorOfflineAlertsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "PrometheusRule.monitoring.coreos.com/openshift-monitoring/sre-configure-alertmanager-operator-offline-alerts.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _prometheusruleMonitoringCoreosComOpenshiftMonitoringSreDedicatedAdminOperatorOfflineAlertsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x91\x3f\x6b\x23\x31\x10\xc5\xfb\xfd\x14\xc3\x56\x77\x85\x7c\xb8\xb8\x46\x70\xc5\x41\x52\x3b\x38\x90\x7e\xac\x7d\x6b\x0f\x91\x34\x62\xa4\x35\x09\x21\xdf\x3d\xec\xfa\x4f\xd2\x84\x90\xa8\x92\x86\xf9\xbd\x79\x6f\xc4\x45\x1e\x60\x55\x34\x7b\x4a\x9a\xa5\xa9\x49\xde\xaf\x82\x1a\xb4\xae\x82\xa6\x3f\xc7\x75\xf7\x28\x79\xf0\x74\x67\x9a\xd0\x0e\x98\xea\x76\x8a\xe8\x12\x1a\x0f\xdc\xd8\x77\x44\x91\x77\x88\x75\xbe\x11\x71\x91\x95\x16\xe4\x7a\x90\xb1\x2d\x0a\x89\x33\xef\x31\x78\xea\x9b\x4d\xe8\x97\xae\x72\x15\xf3\x54\x0d\x6e\xc0\x20\x81\x1b\x06\xc7\x43\x92\xec\xb4\xc0\xb8\xa9\x39\x1d\xc7\x28\x19\x8e\x23\xac\xd5\x85\x35\x8d\xf0\xb4\x14\x9c\x4d\x11\x73\x35\x73\xc2\x77\x95\x66\xa6\x16\x0e\xf0\x74\x35\xec\xde\x97\xd0\xd5\x82\x30\x67\xda\x9b\x4e\x65\x49\xe7\x7e\x34\x87\x68\x71\x79\x5a\x8f\x3b\x19\xf7\x74\x73\xe1\xff\xcf\xf8\xe6\x4c\x6f\x4e\xf0\xfd\xf6\x76\xe9\x26\xc2\x53\x31\x4f\xbc\xab\xc8\xed\xd7\x54\x5e\x2a\xec\x28\x01\xff\xfa\xcf\xe6\xf7\xaf\xbf\xcf\xe8\xa8\xe6\x69\xfd\x37\x9d\x9f\x1f\x3f\x69\x3e\x5f\xc5\xbf\xf4\x55\x1c\x61\xd2\x9e\x3d\x05\x93\x26\x81\x63\xf7\x16\x00\x00\xff\xff\xf6\xef\x17\xe1\x36\x02\x00\x00")

func prometheusruleMonitoringCoreosComOpenshiftMonitoringSreDedicatedAdminOperatorOfflineAlertsYamlBytes() ([]byte, error) {
	return bindataRead(
		_prometheusruleMonitoringCoreosComOpenshiftMonitoringSreDedicatedAdminOperatorOfflineAlertsYaml,
		"PrometheusRule.monitoring.coreos.com/openshift-monitoring/sre-dedicated-admin-operator-offline-alerts.yaml",
	)
}

func prometheusruleMonitoringCoreosComOpenshiftMonitoringSreDedicatedAdminOperatorOfflineAlertsYaml() (*asset, error) {
	bytes, err := prometheusruleMonitoringCoreosComOpenshiftMonitoringSreDedicatedAdminOperatorOfflineAlertsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "PrometheusRule.monitoring.coreos.com/openshift-monitoring/sre-dedicated-admin-operator-offline-alerts.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _prometheusruleMonitoringCoreosComOpenshiftMonitoringSreDnsAlertsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x90\x3d\x4f\xf3\x40\x10\x84\x7b\xff\x8a\x55\xaa\xf7\x2d\x6c\x4c\xa4\x34\x57\x50\x91\x8e\x2f\x25\x12\x0d\x42\xd6\x72\xde\x24\x2b\xee\x4b\xbb\x67\x2b\xf9\xf7\xc8\x36\x18\x24\x82\x68\xb8\xe6\x4e\x7b\x73\x33\xcf\x1c\x26\x7e\x24\x51\x8e\xc1\x80\x8f\x81\x73\x14\x0e\xfb\xca\x46\xa1\xa8\x95\x8d\xfe\xa2\xbf\x2c\x5e\x39\xb4\x06\x1e\x24\x7a\xca\x07\xea\x74\xd3\x39\x2a\x3c\x65\x6c\x31\xa3\x29\x00\x1c\xbe\x90\xd3\xe1\x04\x80\x89\xab\x98\x28\xe8\x81\x77\x79\x74\xf0\x18\x70\x4f\xad\x81\x45\x96\x8e\x16\xa3\x2a\xcd\x66\x06\x54\xa8\x6c\x83\x96\xe8\x48\xb2\x8e\xd7\x12\x1d\x19\x18\x07\xa5\x74\x8e\x86\x69\x40\x4f\x67\xc4\xc3\x58\x13\x5a\x32\x30\xc7\x96\x9f\x55\x0a\x4d\x64\x07\xb2\xbd\xc4\x2e\x8d\x8c\xe5\x4f\x56\x00\x63\xd6\xd4\xa3\x9c\xe2\x0d\x5c\xdf\x6d\x6f\x30\x53\xb0\xa7\xfb\x9e\x64\x59\xd7\x5e\x57\xb7\x1c\xb6\x9b\xf5\xa8\x03\xa0\x63\x12\x03\x1e\x8f\x4d\xec\x49\x9a\xcc\x9e\xfe\xb5\x41\x1b\x37\xbd\x6a\x3c\x3b\xc7\x4a\x36\x86\x56\x1b\xed\xfc\xd3\xca\x3f\xff\x87\x2b\xa8\xab\xe5\xbb\xc3\xd7\xff\x1b\xd6\x6f\x9d\x3e\x74\x4a\x3d\x09\xe7\x93\x01\x2b\x9c\xd9\xa2\xfb\x86\xbe\x16\x89\xa2\xf5\x39\x62\xc1\x3c\x81\xee\x90\x5d\x27\x34\xef\x39\x66\x74\x33\xe5\xdf\x33\xbe\x05\x00\x00\xff\xff\x29\x7d\x27\x7a\x75\x02\x00\x00")

func prometheusruleMonitoringCoreosComOpenshiftMonitoringSreDnsAlertsYamlBytes() ([]byte, error) {
	return bindataRead(
		_prometheusruleMonitoringCoreosComOpenshiftMonitoringSreDnsAlertsYaml,
		"PrometheusRule.monitoring.coreos.com/openshift-monitoring/sre-dns-alerts.yaml",
	)
}

func prometheusruleMonitoringCoreosComOpenshiftMonitoringSreDnsAlertsYaml() (*asset, error) {
	bytes, err := prometheusruleMonitoringCoreosComOpenshiftMonitoringSreDnsAlertsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "PrometheusRule.monitoring.coreos.com/openshift-monitoring/sre-dns-alerts.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _prometheusruleMonitoringCoreosComOpenshiftMonitoringSreEbsIopsBurstbalanceYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x90\x3d\x4f\x23\x31\x10\x86\xfb\xfd\x15\xa3\x54\x77\x85\x73\xb9\x28\xa2\xb0\xa8\x22\xa5\xa3\x88\x02\x4a\x1b\xcd\x7a\x27\x1b\x0b\xdb\x63\xcd\xd8\x01\xfe\x3d\xda\xcd\x07\x54\x04\x0a\x5c\xd9\xf2\x33\xaf\x9e\x77\x30\xfb\x2d\x89\x7a\x4e\x16\x22\x27\x5f\x58\x7c\xea\xa7\x8e\x85\x58\xa7\x8e\xe3\xbf\xe3\xff\xe6\xd9\xa7\xce\xc2\x5a\x38\x52\x39\x50\xd5\x4d\x0d\xd4\x44\x2a\xd8\x61\x41\xdb\x00\x04\x6c\x29\xe8\x70\x03\xc0\xec\xa7\x9c\x29\xe9\xc1\xef\xcb\x98\x10\x31\x61\x4f\x9d\x85\x49\x91\x4a\x93\x91\xca\xd7\x30\x0b\x2a\x64\xa8\x55\xe3\x39\xab\x69\xab\x68\x69\x31\x60\x72\x34\x92\xc2\x81\x2c\x60\x20\x29\x46\x6a\x20\x6d\x00\x12\x46\xfa\x7a\x6e\x20\x34\xa3\x23\x0b\x57\x19\xf3\x51\xb0\xd1\x4c\x6e\xf0\xed\x85\x6b\x1e\xcd\xcd\x37\x52\x01\x46\x83\x53\x51\x73\x92\xb2\xb0\x6a\x75\xcb\xa1\x46\x5a\x0e\xf4\xf2\x44\x3f\x3c\x2d\x66\x6b\x57\x1e\x37\xab\x11\x06\xa0\xd7\x2c\x16\xf0\xd8\xff\xa1\x56\x77\x43\xfa\xce\x09\x75\xbe\xe8\x5f\xb8\x87\xc5\xec\x8c\xed\x59\x2c\xdc\xcd\xe2\xf9\xf9\x79\xb3\xc3\xb9\xd5\xeb\xc2\x29\x1d\x49\x7c\x79\xb3\xf0\x82\x92\x2e\x3f\xb7\x94\xe7\x3f\x51\x9e\xff\x9a\xb2\x13\x5f\xbc\xc3\xd0\xbc\x07\x00\x00\xff\xff\x67\x94\xb1\xa3\x9e\x02\x00\x00")

func prometheusruleMonitoringCoreosComOpenshiftMonitoringSreEbsIopsBurstbalanceYamlBytes() ([]byte, error) {
	return bindataRead(
		_prometheusruleMonitoringCoreosComOpenshiftMonitoringSreEbsIopsBurstbalanceYaml,
		"PrometheusRule.monitoring.coreos.com/openshift-monitoring/sre-ebs-iops-burstbalance.yaml",
	)
}

func prometheusruleMonitoringCoreosComOpenshiftMonitoringSreEbsIopsBurstbalanceYaml() (*asset, error) {
	bytes, err := prometheusruleMonitoringCoreosComOpenshiftMonitoringSreEbsIopsBurstbalanceYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "PrometheusRule.monitoring.coreos.com/openshift-monitoring/sre-ebs-iops-burstbalance.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _prometheusruleMonitoringCoreosComOpenshiftMonitoringSreExcessiveMemoryYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x52\xc1\x6e\xd3\x40\x10\xbd\xfb\x2b\x06\xab\x07\x40\xd8\x49\x09\xbd\xac\x54\x2e\xa5\xe2\x84\xa8\x5a\x09\x6e\x8d\xb6\xf6\xd8\x1d\xd5\x3b\x63\xcd\xac\xa3\x46\x21\x7c\x3b\xb2\x9d\x38\x41\x02\x84\x7a\xcb\x1e\xd6\xf6\xdb\x37\xcf\xef\xf9\xd9\xb7\xf4\x0d\xd5\x48\xd8\x41\x10\xa6\x28\x4a\x5c\xe7\x85\x28\x8a\xe5\x85\x84\xd9\xea\x3c\x79\x22\x2e\x1d\xdc\xa8\x04\x8c\x8f\xd8\xd9\x6d\xd7\x60\x12\x30\xfa\xd2\x47\xef\x12\x80\xc6\x3f\x60\x63\xfd\x1d\x80\x6f\x29\x97\x16\xd9\x1e\xa9\x8a\x83\x42\xf0\xec\x6b\x2c\x1d\xa4\x51\x3b\x4c\x07\x56\x3b\x89\x39\x30\xc5\x0c\x9f\x0b\x34\xa3\x15\x66\x01\x83\xe8\x7a\x20\xa9\x34\xe8\xc0\x37\xa8\x31\xd3\xae\x41\x4b\x00\xd8\x07\xfc\xeb\x48\x7f\x68\xad\x2f\xd0\xc1\x64\x21\x3b\xc4\x4a\xac\xc5\xa2\x77\x59\xab\x74\xed\xe0\x37\xfb\xb7\x20\xc0\xf0\xde\x31\x59\x36\x5a\x71\x70\xbd\x27\x5e\x09\x47\x4f\x8c\xfa\x65\x18\xf8\xee\x95\x89\xeb\xbb\xdb\xeb\x81\x0f\xe0\x99\x25\xfa\x48\xc2\x3b\x89\x7e\x05\x34\xf3\x35\x3a\xb8\x5b\x5b\xc4\x00\xc5\x5e\x04\x36\x1b\x38\x1b\x3f\x65\x3e\x25\x81\xed\x76\x76\x84\xb7\x52\x2e\xfb\xb3\x11\x9e\x34\x61\x22\x4c\x6a\x7b\x1a\x90\x41\x67\xc4\x35\x10\xc3\x18\x11\xa4\x82\xc5\xe7\x7e\x1f\x83\x42\x25\x0a\xb2\x42\x85\xc5\xfc\x48\x32\x10\x77\x11\x2d\xdf\x41\xf8\xdc\xaa\x3b\xb8\x5d\x8e\xb3\x4b\x35\xdb\x4c\x6e\x2f\x7f\xa6\xaf\xef\x0f\xed\xbf\xfd\x71\xff\xd4\x3d\x60\x7f\x2d\xb1\xf2\x5d\x13\xcf\xde\xa4\xef\x7e\xb7\xf8\xea\x32\xfd\x03\x74\xf3\xf5\x53\xba\x9d\x9d\xcf\xdf\x7f\x38\x6c\x1f\x17\x3b\x27\x95\xa8\x83\xc5\x3c\xec\x1e\x8f\xff\xbe\x7e\x19\xae\x50\x29\xae\x1d\xb0\x30\xfe\x5f\x75\x57\x4a\x91\x0a\xdf\x9c\x44\x77\x17\x27\xd8\xdd\xc5\x8b\xba\xfb\x15\x00\x00\xff\xff\x08\xa0\x39\xeb\x9f\x04\x00\x00")

func prometheusruleMonitoringCoreosComOpenshiftMonitoringSreExcessiveMemoryYamlBytes() ([]byte, error) {
	return bindataRead(
		_prometheusruleMonitoringCoreosComOpenshiftMonitoringSreExcessiveMemoryYaml,
		"PrometheusRule.monitoring.coreos.com/openshift-monitoring/sre-excessive-memory.yaml",
	)
}

func prometheusruleMonitoringCoreosComOpenshiftMonitoringSreExcessiveMemoryYaml() (*asset, error) {
	bytes, err := prometheusruleMonitoringCoreosComOpenshiftMonitoringSreExcessiveMemoryYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "PrometheusRule.monitoring.coreos.com/openshift-monitoring/sre-excessive-memory.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _prometheusruleMonitoringCoreosComOpenshiftMonitoringSreFilesysfullYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xdc\x53\x5d\x4f\xdc\x3a\x10\x7d\xdf\x5f\x31\x37\x02\x09\x10\x9b\x2c\x1f\x97\x87\x88\xfb\x72\x69\x91\xaa\x4a\x15\xa2\x2d\x2f\x55\xb5\x9a\x24\x93\xec\x14\xc7\xb6\x3c\xe3\xa5\x2b\xa0\xbf\xbd\x4a\x76\x09\xdb\x8a\x8a\x7d\x40\x55\x55\x3f\x24\x96\x7d\xe6\xcc\xb1\x7d\x0e\x7a\xbe\xa2\x20\xec\x6c\x0e\xad\xb3\xac\x2e\xb0\x6d\xd2\xd2\x05\x72\x92\x96\xae\xcd\xe6\x07\xa3\x6b\xb6\x55\x0e\x17\xc1\xb5\xa4\x33\x8a\x72\x19\x0d\x8d\x5a\x52\xac\x50\x31\x1f\x01\x18\x2c\xc8\x48\x37\x03\x40\xcf\xa9\xf3\x64\x65\xc6\xb5\xf6\x0c\x2d\x5a\x6c\xa8\xca\x21\xd1\x10\x29\xe9\x51\x7e\x20\xcb\x41\x02\x8d\x6b\x36\x24\x0b\xa9\xa3\x31\xfd\x7e\x70\x86\x72\x40\x43\x41\xc7\x21\x1a\x92\x11\x80\xc5\x96\x9e\x42\x77\xeb\xe2\xb1\xa4\x1c\x86\xc6\xe3\xc7\xc3\x8c\xc4\x53\xd9\x69\x6b\x82\x8b\xbe\x57\x39\xfe\x25\x17\x40\xdf\x6d\x79\x94\xf1\x52\x40\x0e\x6f\x63\x41\x67\x51\xd4\xb5\x14\x2e\xba\xeb\x12\x25\xab\x57\xce\xc4\x96\x3e\x0a\x36\x74\x16\x58\xb9\x44\xf3\xfe\xf2\x75\x5f\x09\x80\xd6\x3a\x45\x65\x67\x57\x64\xdd\x30\x6c\xaf\x73\x98\xa9\x7a\xc9\xb3\xac\x61\x9d\xc5\xa2\xbf\xa2\x41\x77\xe6\xbc\x8c\xc5\xf9\xac\x30\xae\xc8\x5a\x14\xa5\x90\xcd\x8f\xb3\x5e\x88\x64\x1b\x0b\x49\xdb\x6a\xe8\xda\x92\x74\x5b\x39\x7c\x98\x11\x94\xab\x6a\xf8\xb9\x1c\x4a\x83\xdc\x52\x05\xc5\x02\x6e\x6f\x61\x6b\xf9\xa6\xa9\x1f\x60\xf3\x1e\xd6\xa3\x06\x6a\x80\xfb\x7b\x60\x0b\xef\x1e\x9e\x60\xbd\x74\x78\x97\x1e\x24\xe0\xac\xe9\xa9\x7d\x60\xab\x35\x24\xdb\x93\xf4\xb0\x4e\x60\x6b\x8e\x26\xd2\x0f\x94\xdb\x50\x07\xa2\x74\xb5\x46\x5f\x7d\xc8\xe1\x6e\x40\x1c\x4c\x26\xc3\x7c\x0f\xae\x63\x41\x86\x74\xba\x94\x37\x15\x45\x95\x29\xce\x91\x0d\x16\x86\xa6\xc5\x42\x49\x6e\xbf\xb8\xe2\xbf\x64\x85\x4c\xf6\x07\x61\xff\x7c\x4b\x76\x1e\x2d\x93\xee\xdd\x75\x90\xee\x5f\x51\x8d\xd1\xe8\x9d\x71\x4d\xc3\xb6\xd9\x4d\xee\x87\x8e\xd9\xd3\x1d\x4b\xf4\x58\xb2\x2e\x5e\xbe\xe1\x29\x1c\xad\xe6\xeb\x31\xeb\xc6\x73\xc6\x7f\xc0\x09\xcd\x29\xb0\x2e\x72\xb8\xc1\x60\x1f\x76\x36\x72\xf7\x79\x34\xe6\x8d\x3d\x77\x31\xbc\xc2\x85\xfc\xd9\xf6\xfe\x1f\x85\x2a\x70\x16\x02\x95\x64\x15\x04\x5b\x6f\xd8\x36\xfb\xa0\x1b\x1a\x7f\xcd\x84\xcf\x45\x60\x53\xe3\xaf\x51\xb2\x74\x56\xa6\x52\xa9\x02\x75\x50\xb3\x31\x10\x3d\xdc\xb0\xce\xd8\x42\xed\x62\x80\x0a\x17\x92\xc2\x59\x0c\x81\xac\x6e\x9e\x16\x16\x18\x1c\xbf\x59\x6a\x76\xfe\xd6\xd8\xec\xae\xe5\xe6\xe0\x5f\x40\x5b\x81\x0f\x54\x71\xa9\x53\xc3\x96\x30\xfc\xae\x93\x7f\x3a\x99\x7d\xde\x1f\xc4\x1c\xc3\x1e\x1c\x76\x9f\xa3\x93\xc9\x64\x17\x4e\x61\xf2\xe2\x99\xfe\x1e\x00\x00\xff\xff\xda\x89\x73\x4f\xcb\x07\x00\x00")

func prometheusruleMonitoringCoreosComOpenshiftMonitoringSreFilesysfullYamlBytes() ([]byte, error) {
	return bindataRead(
		_prometheusruleMonitoringCoreosComOpenshiftMonitoringSreFilesysfullYaml,
		"PrometheusRule.monitoring.coreos.com/openshift-monitoring/sre-filesysfull.yaml",
	)
}

func prometheusruleMonitoringCoreosComOpenshiftMonitoringSreFilesysfullYaml() (*asset, error) {
	bytes, err := prometheusruleMonitoringCoreosComOpenshiftMonitoringSreFilesysfullYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "PrometheusRule.monitoring.coreos.com/openshift-monitoring/sre-filesysfull.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _prometheusruleMonitoringCoreosComOpenshiftMonitoringSreMachineApiNodeMismatchYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x91\x4f\x6b\xd6\x40\x10\xc6\xef\xf9\x14\x0f\x45\xf0\x94\xd8\x52\xf4\xb0\xd0\x93\xe8\xcd\x2a\x55\xf4\x58\xa6\x9b\x79\x93\xd1\xec\xce\xb2\x33\xa9\x4a\xe9\x77\x97\xfc\xe9\xab\xb7\x16\xf1\xe0\x9c\x12\x78\xe6\xc7\x33\xbf\xa5\x22\x9f\xb9\x9a\x68\x0e\x48\x9a\xc5\xb5\x4a\x1e\xba\xa8\x95\xd5\xba\xa8\xe9\xc5\xed\x59\xf3\x4d\x72\x1f\xf0\xa1\x6a\x62\x1f\x79\xb6\xab\x79\xe2\x26\xb1\x53\x4f\x4e\xa1\x01\x26\xba\xe1\xc9\x96\x2f\x80\x8a\x74\x5a\x38\xdb\x28\x07\x5f\x09\x89\x32\x0d\xdc\x07\x9c\x78\x9d\xf9\x64\x4d\x95\x23\x2c\xc0\x2a\xb7\x89\xe2\x28\x99\x5b\x2a\xd2\x66\xed\xb9\x4d\x62\x89\x3c\x8e\x6b\xba\xea\xc4\x01\x34\x71\xf5\xb6\xce\x13\x5b\x03\x64\x4a\xfc\xf8\xee\x92\xb2\x42\x91\x03\x8e\xa5\xda\xdf\x87\x36\x56\x38\x2e\xbd\x87\xaa\x73\x59\x2f\x68\x9f\x48\x06\xd6\x26\xdb\xd1\xed\x56\x2e\xe0\x52\x2f\xb5\xe7\xf7\x37\x5f\x39\xfa\x5b\xad\xef\x36\xc0\x17\xaa\x59\xf2\xf0\xf1\xea\xcd\x9a\x06\x28\x67\x75\x72\xd1\xbc\x03\x96\x49\x6c\x46\x03\x07\x7c\x1a\x19\xfb\x26\x74\x45\xe1\xee\x0e\xcf\x36\xcb\xdd\x5e\xea\x7a\xa9\x89\xfb\x7b\x8c\x64\xf9\xb9\x63\xa4\x1e\x94\x41\x66\x1a\x85\x9c\xfb\x23\x17\x58\x3a\xe1\xa0\x15\x3e\x32\x0a\x99\xe3\xfc\x14\x49\xf2\xec\x6c\xdd\x9e\xe3\x1f\xa5\x06\x3c\xc0\xa9\xc8\xb5\x39\xf9\x6c\xb8\xb8\xc0\xe9\x9e\x39\x68\x0d\x38\x7b\x99\xf6\xdf\x3f\x9f\x7d\x99\xc7\x64\x3f\xe4\x8c\x6f\xb9\x8a\xff\x0c\xf8\xbe\x89\x79\x8a\xc3\xd7\x55\x5c\x22\x4d\xff\x91\xc4\x57\x7f\x2f\xf1\xfc\xf4\xdf\x49\x8c\xbb\x99\xe6\x57\x00\x00\x00\xff\xff\x0a\x1f\xf6\x59\xcd\x03\x00\x00")

func prometheusruleMonitoringCoreosComOpenshiftMonitoringSreMachineApiNodeMismatchYamlBytes() ([]byte, error) {
	return bindataRead(
		_prometheusruleMonitoringCoreosComOpenshiftMonitoringSreMachineApiNodeMismatchYaml,
		"PrometheusRule.monitoring.coreos.com/openshift-monitoring/sre-machine-api-node-mismatch.yaml",
	)
}

func prometheusruleMonitoringCoreosComOpenshiftMonitoringSreMachineApiNodeMismatchYaml() (*asset, error) {
	bytes, err := prometheusruleMonitoringCoreosComOpenshiftMonitoringSreMachineApiNodeMismatchYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "PrometheusRule.monitoring.coreos.com/openshift-monitoring/sre-machine-api-node-mismatch.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _prometheusruleMonitoringCoreosComOpenshiftMonitoringSreNodeUnschedulableYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x52\x3d\x8f\xdb\x30\x0c\xdd\xfd\x2b\x1e\x0e\x5d\x6d\xf7\xd0\x4d\x43\xb7\x4e\x05\x8a\xe2\xfa\xb1\x06\xb4\xcd\x58\x42\x64\x51\x10\xa5\xb4\xc5\xe1\xfe\x7b\x21\x25\xe7\x4b\x97\x86\x93\x08\x3e\xbe\xf7\x48\x8a\xa2\xfb\xc9\x49\x9d\x04\x83\x4d\x82\xcb\x92\x5c\x58\x87\x59\x12\x8b\x0e\xb3\x6c\xe3\xf9\xb1\x3b\xb9\xb0\x18\x7c\x4d\xb2\x71\xb6\x5c\xf4\xa9\x78\xee\x36\xce\xb4\x50\x26\xd3\x01\x9e\x26\xf6\x5a\x5f\x00\x45\x37\x48\xe4\xa0\xd6\x1d\x73\x63\xd8\x28\xd0\xca\x8b\xc1\x43\x4e\x85\x1f\x1a\x2a\xee\x64\x06\x9a\xb8\x0f\xb2\x70\x5f\x82\xce\x96\x97\xe2\x69\xf2\xdc\x60\x49\x3c\x1b\x90\xe7\x94\xfb\x54\x3c\x6b\x07\x04\xda\xf8\x3f\x4d\xb5\xac\x91\x66\x36\xd8\x6d\xf4\x6f\xa3\x75\x1a\x79\xae\x4e\xd7\x24\x25\x36\xcf\xfd\x3d\x4a\xa0\x69\x5f\xe6\xeb\x2f\x76\x0c\x3e\x97\x89\xbf\xc8\xc2\x3f\x6e\xd1\xdf\x9e\x3e\x35\x14\x40\x21\x48\xa6\xec\x24\x5c\x1b\x6b\x78\x17\x4e\x06\x36\xe7\xa8\x66\x1c\x57\x97\x6d\x99\xda\x8e\x76\xab\xa3\x44\xed\x55\xe2\x38\x79\x99\xc6\x8d\x34\x73\x1a\xcf\x1f\xc6\x26\xaa\x6f\xb8\x43\x75\x7a\x08\x92\x0f\x37\xea\x03\xe9\xec\xdc\x22\xf3\x2e\xb8\xb1\x2a\xad\x6c\xf0\xdd\x32\x6a\x0b\x9e\x9f\xf1\xee\x72\xaf\xa1\xe5\x2f\x2f\xb0\xa4\x98\x98\x03\xea\xe0\xaf\x5c\x38\x4a\xc2\x26\x89\x91\x2d\x05\x50\xd8\x39\x01\x2b\x25\x0d\xd7\x9c\x7f\xc7\x64\x70\x2a\x13\x5f\x2c\xd5\xfd\x1e\xfe\xd9\x20\x3e\xe2\xfd\x15\x7c\x94\x64\xf0\x68\xaf\xd9\xed\xb7\xa9\x71\xef\x74\xaf\x38\xe5\x33\x27\x97\xff\x18\xfc\xa2\x14\x6a\xe5\x6f\x00\x00\x00\xff\xff\xf8\xa3\x70\xc8\xc7\x02\x00\x00")

func prometheusruleMonitoringCoreosComOpenshiftMonitoringSreNodeUnschedulableYamlBytes() ([]byte, error) {
	return bindataRead(
		_prometheusruleMonitoringCoreosComOpenshiftMonitoringSreNodeUnschedulableYaml,
		"PrometheusRule.monitoring.coreos.com/openshift-monitoring/sre-node-unschedulable.yaml",
	)
}

func prometheusruleMonitoringCoreosComOpenshiftMonitoringSreNodeUnschedulableYaml() (*asset, error) {
	bytes, err := prometheusruleMonitoringCoreosComOpenshiftMonitoringSreNodeUnschedulableYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "PrometheusRule.monitoring.coreos.com/openshift-monitoring/sre-node-unschedulable.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _prometheusruleMonitoringCoreosComOpenshiftMonitoringSreOcpOverridesYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x52\x4f\x6b\xdb\x4e\x10\xbd\xfb\x53\x4c\x44\x0e\xbf\x1f\x58\x6a\x53\x28\xd4\x0b\x6e\x31\x26\x10\xd3\x90\x18\xc7\xf4\xcf\xa5\x66\x2c\x8d\xa5\x6d\x56\xbb\x9b\x99\x5d\xb5\xc1\x76\x3f\x7b\x91\x64\xab\x39\xb5\x7b\x10\xda\x99\xf7\xde\xbc\xb7\x0c\x7a\xfd\x89\x58\xb4\xb3\x0a\x6a\x67\x75\x70\xac\x6d\x99\xe5\x8e\xc9\x49\x96\xbb\xfa\x55\x73\x35\x7a\xd4\xb6\x50\xb0\x64\x57\x53\xa8\x28\xca\x2a\x1a\x1a\xd5\x14\xb0\xc0\x80\x6a\x04\x60\x70\x4b\x46\xda\x3f\x00\xf4\x3a\x73\x9e\xac\x54\x7a\x17\x3a\x85\x1a\x2d\x96\x54\x28\x48\x02\x47\x4a\x3a\x94\x1f\xc4\x14\x3c\xbe\x93\xae\xc6\xce\x90\x02\x34\xc4\x21\xe5\x68\xa8\xad\x5a\xac\x49\x81\x30\xa5\x2e\xf7\xa9\x6b\x88\x59\x17\x43\x47\x3c\xe6\xa4\x60\x18\x97\xfe\x89\x30\x12\x4f\x79\xeb\xa8\x64\x17\x7d\xe7\x2d\xfd\x8b\x1a\x40\x37\xb1\x8f\x90\xf6\x26\x14\x7c\x8c\x5b\x9a\x2d\x17\xb7\x18\xc8\xe6\xcf\x37\xba\xac\x1e\x56\xd7\x1d\x04\x00\xad\x75\x01\x83\x76\xf6\xc4\x6a\x4f\x4d\x22\x58\x92\x82\x75\x45\x30\x5b\x2e\x40\x88\x1b\x62\xa8\x50\x00\x61\x32\x09\x15\x78\xe2\x9c\x6c\xd0\x86\xc0\xf4\xba\xe0\x76\xb0\xdf\xc3\x65\x83\x26\x12\x1c\x8f\x20\x94\x3b\x5b\xc8\xa0\x0a\xb0\x73\xdc\x41\xfa\x87\xce\x1a\xe2\x6d\x0b\x7c\x51\x62\x12\x17\x39\x6f\xf9\xd9\x89\x48\x3f\x3d\x2b\x38\x0c\x32\xb9\x89\x12\x88\x37\x4f\x11\xbb\xf9\x0a\xbd\xee\xfd\x6d\x98\x9e\x22\x49\xd8\x14\x91\xbb\x48\x9b\x93\x05\x55\x69\x09\xae\x64\xac\x07\xd6\xfe\xbb\xdb\x4e\x93\x81\x9a\x8c\xcf\x8d\x69\xf2\x3a\x9b\x4c\x92\xb1\xc4\xed\xd9\xcc\xc5\x34\x31\xae\x4c\xc6\xad\xdf\x8b\x5f\xc9\xb7\xff\x3e\xa8\xdb\xc5\xc3\xfa\xf0\x79\xb6\x9e\xdf\xf4\xdf\xee\xbe\x5c\xdd\x7f\xf9\x7a\x98\xdf\xdf\xdd\x5d\xcf\xd7\xff\x5f\x26\x47\x78\x0f\x57\xa3\x21\xba\x82\x37\x6f\xeb\xd3\xf5\xe5\xaa\xb5\xe7\x5f\x6b\x70\xc6\x09\x35\xc4\x3a\x3c\x2b\xf8\x81\x6c\xdb\xce\xef\x00\x00\x00\xff\xff\x7b\xc6\x17\xc4\xfb\x02\x00\x00")

func prometheusruleMonitoringCoreosComOpenshiftMonitoringSreOcpOverridesYamlBytes() ([]byte, error) {
	return bindataRead(
		_prometheusruleMonitoringCoreosComOpenshiftMonitoringSreOcpOverridesYaml,
		"PrometheusRule.monitoring.coreos.com/openshift-monitoring/sre-ocp-overrides.yaml",
	)
}

func prometheusruleMonitoringCoreosComOpenshiftMonitoringSreOcpOverridesYaml() (*asset, error) {
	bytes, err := prometheusruleMonitoringCoreosComOpenshiftMonitoringSreOcpOverridesYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "PrometheusRule.monitoring.coreos.com/openshift-monitoring/sre-ocp-overrides.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _prometheusruleMonitoringCoreosComOpenshiftMonitoringSrePruningYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x51\x4d\x8b\xdb\x30\x10\xbd\xfb\x57\x3c\x42\xaf\xf6\x6e\xe9\x4d\xd0\x5e\x4a\x2e\x3d\x95\x2c\xf4\x1a\x26\xca\xac\xa3\xc6\xd2\x88\xd1\x28\x74\x09\xfe\xef\xc5\x8e\xd7\x1b\x96\xcc\x49\x9a\x8f\xf7\xde\xbc\xa1\x1c\xfe\xb0\x96\x20\xc9\x21\x4a\x0a\x26\x1a\x52\xdf\x79\x51\x96\xd2\x79\x89\x4f\x97\xaf\xcd\x39\xa4\xa3\xc3\x6f\x95\xc8\x76\xe2\x5a\x76\x75\xe0\x26\xb2\xd1\x91\x8c\x5c\x03\x0c\x74\xe0\xa1\x4c\x2f\x80\x72\xe8\x24\x73\x2a\xa7\xf0\x6a\x33\x42\xa4\x44\x3d\x1f\x1d\x36\xa6\x95\x37\x73\x57\x5e\xc1\x1c\x8a\x72\x9b\xb5\xa6\x90\xfa\xb9\xa6\x32\xb0\x03\x0d\xac\xd6\x6a\x1d\xb8\x34\x40\xa2\xc8\x9f\x3b\xa7\x5c\xc9\xe4\xd9\x61\x25\x6c\x3f\x96\x68\x4a\x66\x3f\x69\xea\x55\x6a\x9e\xd5\xb5\x0f\x71\x80\x99\xe5\x26\xbf\xbd\x11\x4f\xeb\xce\xf5\x9f\x2a\xe9\xaf\x1c\xb6\xaa\xa2\x2f\xbb\xed\xdc\x03\x50\x4a\x62\x64\x41\xd2\x32\x36\x45\xe4\x52\xa8\x67\x87\x97\xdd\xf6\x7d\x1c\xbf\xe4\x80\xeb\x15\x5f\x6e\x16\x75\xab\x66\x8c\xe3\xd3\x5d\xde\xdf\x68\x30\x8e\x08\x65\x45\x04\x8c\xce\x13\x4a\x14\x65\xd8\x89\x12\xec\x14\xd4\xde\x10\x43\xaa\xc6\x05\x26\xf0\x12\xf3\xc0\xc6\xdd\x32\xc6\xff\xb2\x3a\x9c\xeb\x81\xf7\x0b\xea\xbe\x18\x59\x2d\x7b\xf2\x16\x2e\x7c\x5d\x35\x7c\xdf\x7c\xf8\x76\x67\xc9\x66\xfc\xf1\xbc\x60\xbd\x8a\x3a\x7c\x7b\x8e\xcb\xf7\xfe\xce\x53\x3c\xbc\xc0\x67\x73\xa7\x28\x7c\x61\x0d\xf6\xe6\xe0\x35\x58\xf0\x34\x34\xff\x03\x00\x00\xff\xff\x66\x89\xd7\xe2\x7a\x02\x00\x00")

func prometheusruleMonitoringCoreosComOpenshiftMonitoringSrePruningYamlBytes() ([]byte, error) {
	return bindataRead(
		_prometheusruleMonitoringCoreosComOpenshiftMonitoringSrePruningYaml,
		"PrometheusRule.monitoring.coreos.com/openshift-monitoring/sre-pruning.yaml",
	)
}

func prometheusruleMonitoringCoreosComOpenshiftMonitoringSrePruningYaml() (*asset, error) {
	bytes, err := prometheusruleMonitoringCoreosComOpenshiftMonitoringSrePruningYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "PrometheusRule.monitoring.coreos.com/openshift-monitoring/sre-pruning.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _prometheusruleMonitoringCoreosComOpenshiftMonitoringSreRouterHealthYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x92\x3f\x6f\xd4\x40\x10\xc5\x7b\x7f\x8a\x91\xab\x33\x8a\x9d\x8b\xa2\x34\x2b\x02\xa2\xa0\xa3\x88\x0e\x44\x83\x91\x35\xb7\x9e\x9c\x57\xd9\x7f\x9a\x9d\x35\x39\x21\xf8\xec\xe8\xec\x9c\xa1\x38\x25\x57\x40\x87\x2b\x4b\xfb\x7b\x6f\xdf\xf3\x33\x46\xf3\x99\x38\x99\xe0\x15\xb8\xe0\x8d\x04\x36\x7e\xd7\xe8\xc0\x14\x52\xa3\x83\xbb\x1c\xaf\x8a\x07\xe3\x7b\x05\x77\x1c\x1c\xc9\x40\x39\x6d\xb2\xa5\xc2\x91\x60\x8f\x82\xaa\x00\xb0\xb8\x25\x9b\x0e\x6f\x00\x18\x4d\x13\x22\xf9\x34\x98\x7b\x99\x1c\x1c\x7a\xdc\x51\xaf\xa0\x14\xce\x54\x4e\x54\x5c\xcc\x14\x24\xa6\x9a\x43\x16\xe2\x7a\x20\xb4\x32\x4c\x04\x07\x4b\x0a\xd0\x12\x4b\xcd\xd9\x52\x2a\x00\x3c\x3a\x3a\xcd\x1f\x4e\x52\x44\x4d\x0a\x96\xcb\xeb\xdf\x85\x8a\x14\x49\x1f\xf2\xed\x38\xe4\x38\x25\xad\x9f\x71\x03\x98\x6e\x9c\x0b\xd5\x73\x08\x05\x9b\x89\x7a\x37\xa2\xb1\xb8\x35\xd6\xc8\xfe\xc3\xa7\x9b\xf5\x9d\x96\x8f\x9b\xf7\x13\x09\x40\x8f\x91\x15\x94\xab\x94\xdd\x0a\xc7\x5d\x17\x46\xe2\x4e\x8c\xa3\xd5\x43\xde\x52\xc7\x14\xad\xd1\x28\x26\x78\x1d\xbc\x70\xb0\x96\xb8\x4b\x82\x92\x53\xc7\x84\xfd\xfe\x88\xa4\x2f\x57\xc3\xd7\xaa\x7a\xb2\x05\xd8\xee\x61\x75\x52\x7d\xb1\x34\xaf\xa0\xf5\x97\xad\x0f\xfe\x45\xb0\xf5\x0e\x1f\xcf\x4a\x34\x67\xf9\xbe\x48\x6f\xdb\xb2\xa7\x7b\xcc\x56\xda\xf2\xe2\xa4\xf6\xf6\x67\x5b\xce\x9f\xb3\x79\x5b\x37\xaf\xda\xf2\xc7\xd2\xe1\xcd\xba\x3a\xab\x47\x05\xaf\x61\xdd\xdc\xb4\xbe\x7c\x92\xfe\xf9\x7b\x1d\x9e\x97\xc6\x3e\x72\x89\x46\x62\x23\x7b\x05\xdf\x90\xfd\xf1\xe4\xd9\x3d\xaf\xff\xef\xf9\x8f\xf6\xbc\xfe\x9b\x7b\x6a\x36\x62\x34\xda\xe2\x57\x00\x00\x00\xff\xff\xe6\x99\x21\x7d\xc0\x04\x00\x00")

func prometheusruleMonitoringCoreosComOpenshiftMonitoringSreRouterHealthYamlBytes() ([]byte, error) {
	return bindataRead(
		_prometheusruleMonitoringCoreosComOpenshiftMonitoringSreRouterHealthYaml,
		"PrometheusRule.monitoring.coreos.com/openshift-monitoring/sre-router-health.yaml",
	)
}

func prometheusruleMonitoringCoreosComOpenshiftMonitoringSreRouterHealthYaml() (*asset, error) {
	bytes, err := prometheusruleMonitoringCoreosComOpenshiftMonitoringSreRouterHealthYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "PrometheusRule.monitoring.coreos.com/openshift-monitoring/sre-router-health.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _prometheusruleMonitoringCoreosComOpenshiftMonitoringSreTelemeterClientYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x91\x4d\x0b\x13\x31\x10\x86\xef\xfb\x2b\xc6\x3d\xb5\x87\xad\xad\xd0\x4b\x40\x2f\xa2\x37\x41\x5a\xf0\x22\x52\xa6\xd9\xb7\xdb\x60\xbe\x9c\x99\x2d\x8a\xf8\xdf\x65\x77\x6b\x15\x41\xc5\x9c\x12\xf2\xcc\x93\x77\x32\x5c\xc3\x3b\x88\x86\x92\x1d\xa5\x92\x83\x15\x09\x79\xd8\xf8\x22\x28\xba\xf1\x25\x3d\xbd\xed\x9a\x8f\x21\xf7\x8e\xde\x4a\x49\xb0\x2b\x46\x3d\x8c\x11\x4d\x82\x71\xcf\xc6\xae\x21\x8a\x7c\x46\xd4\x69\x47\xc4\x35\x6c\x4a\x45\xd6\x6b\xb8\xd8\x6c\x48\x9c\x79\x40\xef\xa8\x35\x19\xd1\xce\x54\x7d\xc8\x1c\xa9\xa0\x33\x44\x24\x18\xa4\xf3\x31\x20\xdb\x0c\x49\x89\x70\xc4\x11\x62\x9d\x8c\x11\xda\x10\x65\x4e\xf8\x63\xc9\x74\xa9\x95\x3d\x1c\x3d\x22\x74\x3f\xdb\x6a\xb4\xc2\x4f\x29\x07\x29\x63\x9d\xf3\x76\x7f\x17\x12\xcd\xef\x2e\x9d\x75\x4b\x14\x47\x6f\x60\x12\xbc\xbe\x9c\xa9\x23\x72\xff\x9a\x43\x0c\x79\x38\x1e\x5e\xcd\x20\x11\x3e\x57\x71\xc4\x67\x45\xb6\x95\xb0\x61\x95\x96\x9a\xc5\x7c\x12\x7c\x1a\xa1\x76\x52\xe4\xfe\xab\x1a\xdb\xa8\x27\x5f\x7a\x3c\x6f\x9f\x6d\xb7\xed\xb7\xf7\xfb\xf4\x61\x4d\x2f\x68\xbb\xa6\x22\x77\x25\xd1\x7f\x78\x9e\xfc\x2e\xba\x4b\x2e\x45\x1c\xed\xf6\xe9\x7e\xfc\x75\x6e\xd3\xfa\xd7\xff\xfd\xe0\x14\x37\x48\xb0\x2f\x8e\xbc\x04\x0b\x9e\x63\xf3\x3d\x00\x00\xff\xff\xc4\x00\xed\x4f\x49\x02\x00\x00")

func prometheusruleMonitoringCoreosComOpenshiftMonitoringSreTelemeterClientYamlBytes() ([]byte, error) {
	return bindataRead(
		_prometheusruleMonitoringCoreosComOpenshiftMonitoringSreTelemeterClientYaml,
		"PrometheusRule.monitoring.coreos.com/openshift-monitoring/sre-telemeter-client.yaml",
	)
}

func prometheusruleMonitoringCoreosComOpenshiftMonitoringSreTelemeterClientYaml() (*asset, error) {
	bytes, err := prometheusruleMonitoringCoreosComOpenshiftMonitoringSreTelemeterClientYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "PrometheusRule.monitoring.coreos.com/openshift-monitoring/sre-telemeter-client.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _resourcequotaOpenshiftLoggingLoggingStorageQuotaYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\xcd\x3b\x8e\xc3\x30\x0c\x84\xe1\x5e\xa7\x20\xdc\xdb\xeb\x6d\xb6\xd0\x05\xb6\x4e\x8a\xf4\x8c\x34\x91\x85\x58\x0f\x8b\x54\xce\x1f\x38\x36\xd2\x11\xe0\xe0\xfb\xb9\xc6\x1b\x9a\xc4\x92\x2d\xbd\x7e\xcd\x33\x66\x6f\xe9\x0a\x29\xbd\x39\x5c\x7a\x51\x36\x09\xca\x9e\x95\xad\x21\x5a\xf9\x8e\x55\xf6\x8b\x88\x6b\x9c\x4a\x45\x96\x25\x3e\x74\x72\x25\xfd\x24\xce\x1c\xe0\x2d\x0d\xda\x3a\x06\x43\x94\x39\xc1\xd2\x5a\x42\x88\x39\x8c\xa2\xa5\x71\xc0\xb8\x7d\xdc\xe3\x2b\x95\x1d\x2c\x7d\xa1\xf1\x1c\x1b\xa9\x70\x7b\x68\xe1\xe6\x8f\x60\xc3\xd6\x21\x2a\xd3\xe9\x58\xfa\x9b\xe7\xff\x68\xde\x01\x00\x00\xff\xff\x26\x1e\x48\x63\xc4\x00\x00\x00")

func resourcequotaOpenshiftLoggingLoggingStorageQuotaYamlBytes() ([]byte, error) {
	return bindataRead(
		_resourcequotaOpenshiftLoggingLoggingStorageQuotaYaml,
		"ResourceQuota/openshift-logging/logging-storage-quota.yaml",
	)
}

func resourcequotaOpenshiftLoggingLoggingStorageQuotaYaml() (*asset, error) {
	bytes, err := resourcequotaOpenshiftLoggingLoggingStorageQuotaYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ResourceQuota/openshift-logging/logging-storage-quota.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _roleRbacAuthorizationK8sIoKubeSystemClusterConfigV1ReaderYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x8d\xb1\x6a\xc4\x30\x0c\x86\x77\x3f\x85\xc8\xee\x1c\xb7\x15\xbf\x40\xb7\x0e\x1d\xba\x2b\xce\x7f\x39\x13\xdb\x32\x92\x1d\x68\x9f\xbe\xe4\x7a\x85\x42\x37\xf1\xe9\x93\x3e\x6e\xe9\x03\x6a\x49\x6a\x20\x5d\x38\xce\x3c\xfa\x5d\x34\x7d\x71\x4f\x52\xe7\xfd\xc5\xe6\x24\x97\xe3\xea\xf6\x54\xd7\x40\xef\x92\xe1\x0a\x3a\xaf\xdc\x39\x38\xa2\xcc\x0b\xb2\x9d\x13\x11\xb7\x34\x4b\x43\xb5\x7b\xba\xf5\x39\x4a\xb9\x14\xae\xbc\x61\x0d\x34\x75\x1d\x98\x1c\x51\xe5\x82\x40\x31\x0f\xeb\x50\x1f\xa5\xde\xd2\xe6\x8f\xab\x57\xf0\x0a\x7d\x0a\xd6\x38\x22\xd0\x3e\x16\x78\xfb\xb4\x8e\xe2\x74\x64\x58\x70\xfe\x8c\xbc\xaa\x8c\xf6\x68\x7a\x9a\xce\xa7\x0a\x93\xa1\x11\x6f\xe7\xed\x0f\xff\x57\xf8\xa3\xfd\x2a\x8f\x55\xe1\x66\x8e\xe8\x80\x2e\x4f\xbe\xa1\xbb\xef\x00\x00\x00\xff\xff\xb1\x93\x23\x07\x17\x01\x00\x00")

func roleRbacAuthorizationK8sIoKubeSystemClusterConfigV1ReaderYamlBytes() ([]byte, error) {
	return bindataRead(
		_roleRbacAuthorizationK8sIoKubeSystemClusterConfigV1ReaderYaml,
		"Role.rbac.authorization.k8s.io/kube-system/cluster-config-v1-reader.yaml",
	)
}

func roleRbacAuthorizationK8sIoKubeSystemClusterConfigV1ReaderYaml() (*asset, error) {
	bytes, err := roleRbacAuthorizationK8sIoKubeSystemClusterConfigV1ReaderYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Role.rbac.authorization.k8s.io/kube-system/cluster-config-v1-reader.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _roleRbacAuthorizationK8sIoOpenshiftCodereadyWorkspacesDedicatedAdminsOpenshiftCodereadyWorkspacesYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x92\xc1\x8e\xd4\x30\x0c\x86\xef\x7d\x8a\x68\x2e\x2b\x21\x35\x23\x6e\xa8\x2f\xc0\x9d\x03\x77\xd7\xf1\xa6\xd6\xa4\x71\x64\x27\x5d\xc1\xd3\xa3\x74\xcb\x30\x43\x41\x70\xf2\xef\xca\xf6\xff\xd5\x0e\x14\xfe\x4a\x6a\x2c\x79\x72\x3a\x03\x7a\x68\x75\x11\xe5\xef\x50\x59\xb2\xbf\x7d\x32\xcf\x72\xdd\x3e\x0e\x37\xce\x61\x72\x5f\x24\xd1\xb0\x52\x85\x00\x15\xa6\xc1\xb9\x04\x33\x25\xeb\xca\x39\x28\xec\xa5\x50\xb6\x85\x5f\xab\x47\x59\xaf\x2b\x64\x88\x14\x26\x77\xa9\xda\xe8\x32\x38\x97\x61\xa5\xc9\x05\x0a\x8c\x50\x29\x8c\x10\x56\xce\x36\xde\xdb\x46\x94\x40\x4a\x10\xbe\x8d\x6f\xa2\x37\x2b\x80\x64\x47\xdf\x9e\x4c\xee\x1f\xb5\xda\x12\xd9\x34\x8c\x1d\xe7\xb3\x4a\x2b\x3b\xdd\xe8\x2e\xdd\x5e\xc9\xa4\x29\xd2\xf1\xed\x3e\xd5\xf6\xb4\x48\xf8\x25\xae\x49\xe2\xe0\xdc\x46\x3a\x1f\xd5\x89\xad\xee\x22\xd2\x7b\x7c\x83\x8a\xcb\xd9\x29\x49\x8c\x9c\xe3\xc3\x2e\x58\xce\xde\x98\x9a\x55\xd2\xa3\xd8\x9e\xad\x50\x09\x2a\xed\x32\x50\xa2\x27\x89\x92\x12\x61\x3f\xcf\x13\xcc\x9d\xae\xec\x54\x5d\xb5\x12\x7e\x4e\xf9\x0b\xaa\x14\x52\xa8\xa2\xe6\x51\x94\xa4\x87\xf5\x8c\x6a\x6d\x36\x54\x2e\xdd\xd3\x1e\xe1\x8d\x74\x63\xa4\xed\xfd\x05\xfd\xf6\x0f\x2f\x1f\x5e\xfe\xef\x0a\x28\xf9\x95\xe3\x0a\xc5\xfe\xb0\xef\x33\xb2\x46\x4f\x98\xb8\x18\x79\x5c\xe8\x3c\xae\xfb\x9e\x40\x7e\x04\x00\x00\xff\xff\xed\x99\x59\x4d\xe8\x02\x00\x00")

func roleRbacAuthorizationK8sIoOpenshiftCodereadyWorkspacesDedicatedAdminsOpenshiftCodereadyWorkspacesYamlBytes() ([]byte, error) {
	return bindataRead(
		_roleRbacAuthorizationK8sIoOpenshiftCodereadyWorkspacesDedicatedAdminsOpenshiftCodereadyWorkspacesYaml,
		"Role.rbac.authorization.k8s.io/openshift-codeready-workspaces/dedicated-admins-openshift-codeready-workspaces.yaml",
	)
}

func roleRbacAuthorizationK8sIoOpenshiftCodereadyWorkspacesDedicatedAdminsOpenshiftCodereadyWorkspacesYaml() (*asset, error) {
	bytes, err := roleRbacAuthorizationK8sIoOpenshiftCodereadyWorkspacesDedicatedAdminsOpenshiftCodereadyWorkspacesYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Role.rbac.authorization.k8s.io/openshift-codeready-workspaces/dedicated-admins-openshift-codeready-workspaces.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _roleRbacAuthorizationK8sIoOpenshiftLoggingDedicatedAdminsOpenshiftLoggingYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x92\xc1\x4e\xc3\x30\x0c\x86\xef\x7d\x8a\x68\x97\x49\x48\xed\xc4\x0d\xe5\x05\xb8\x73\xe0\xee\x3a\xa6\xb3\x96\xc6\x91\x9d\x14\x89\xa7\x47\xe9\xca\xd8\xa8\x38\xf9\x6f\xeb\xfa\xfb\xac\x04\x32\xbf\x93\x1a\x4b\xf2\x4e\x47\xc0\x01\x6a\x39\x8b\xf2\x17\x14\x96\x34\x5c\x5e\x6c\x60\x39\x2d\xcf\xdd\x85\x53\xf0\xee\x4d\x22\x75\x33\x15\x08\x50\xc0\x77\xce\x45\x18\x29\x5a\x4b\xce\x41\xe6\x41\x32\x25\x3b\xf3\x47\x19\x50\xe6\xd3\x0c\x09\x26\x0a\xde\x1d\x8a\x56\x3a\x74\xce\x25\x98\xc9\xbb\x40\x81\x11\x0a\x85\x1e\xc2\xcc\xc9\xfa\xdb\x6f\x7d\x94\x69\xe2\x34\x6d\xad\x96\x01\xc9\xbb\xfd\x67\xad\x91\xcc\x77\x7d\x83\xbe\xaa\xd4\xbc\x3a\xf4\xee\xd0\x20\x4a\x26\x55\x91\xb6\x77\xb7\x41\xb6\x3e\x66\x09\xbf\xe1\x14\xa5\xb1\x16\xd2\x71\xeb\x8e\x6c\x65\x0d\x13\x5d\xeb\x27\x14\x3c\xef\x49\x9b\xc9\xdd\xc6\x2c\x7b\x36\xc6\x6a\x85\x74\x6b\xb6\x47\x14\x2a\x41\xa1\x35\x06\x8a\xf4\x10\x51\x62\x24\x6c\x87\xf0\x20\x73\xb3\xcb\xab\x55\x4b\x35\x87\x9f\x29\xff\xa8\x4a\x26\x85\x22\x6a\x03\x8a\x92\xb4\x32\xef\x55\xad\x8e\x86\xca\xb9\x31\xed\x5e\xde\x48\x17\x46\x5a\xae\xf7\xe4\xcf\x0e\xc7\xa7\x63\xf7\x1d\x00\x00\xff\xff\xa1\xac\x7b\xd0\x45\x02\x00\x00")

func roleRbacAuthorizationK8sIoOpenshiftLoggingDedicatedAdminsOpenshiftLoggingYamlBytes() ([]byte, error) {
	return bindataRead(
		_roleRbacAuthorizationK8sIoOpenshiftLoggingDedicatedAdminsOpenshiftLoggingYaml,
		"Role.rbac.authorization.k8s.io/openshift-logging/dedicated-admins-openshift-logging.yaml",
	)
}

func roleRbacAuthorizationK8sIoOpenshiftLoggingDedicatedAdminsOpenshiftLoggingYaml() (*asset, error) {
	bytes, err := roleRbacAuthorizationK8sIoOpenshiftLoggingDedicatedAdminsOpenshiftLoggingYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Role.rbac.authorization.k8s.io/openshift-logging/dedicated-admins-openshift-logging.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _roleRbacAuthorizationK8sIoOpenshiftVeleroManagedVeleroOperatorYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x53\xbb\x8e\xdb\x30\x10\xec\xf5\x15\x84\x9b\x03\x02\x58\x46\xba\x40\x3f\x90\x2e\x45\x8a\xf4\x6b\x72\x6c\x2f\x8e\xe4\x32\x4b\x52\x41\xee\xeb\x03\x49\x3c\xc7\xf2\xe3\x7c\x1d\x77\x35\x9c\x9d\xd9\xa1\x28\xf1\x2f\x68\x66\x89\x83\xd1\x3d\xd9\x9e\x6a\x39\x89\xf2\x1b\x15\x96\xd8\xbf\x7e\xcb\x3d\xcb\x6e\xfc\xda\xbd\x72\x74\x83\xf9\x29\x1e\x5d\x40\x21\x47\x85\x86\xce\x18\x4f\x7b\xf8\x3c\x9d\x8c\xa1\xc4\xbd\x24\xc4\x7c\xe2\x43\xe9\xad\x84\x5d\xa0\x48\x47\xb8\xc1\x6c\x8a\x56\x6c\x66\xd4\x89\x47\x5c\xc0\x58\x76\xd6\xd7\x5c\xa0\xdb\xe4\xa9\x1c\x44\xc3\x60\xe8\x4f\xee\x8c\x89\x14\x30\x98\xc6\xb1\x1d\xe1\xa1\xb2\x95\x04\xa5\x22\xda\xbe\xe7\x44\x16\x83\x39\xf3\x35\x58\xa7\xd5\x23\x0f\xdd\x76\x12\xf5\x5d\xa5\xa6\x59\xe3\xd6\x6c\x26\x11\x8a\x2c\x55\x2d\x5a\x2f\x89\xcb\xf3\x21\x43\x47\xb6\x58\x17\xbb\x03\x47\xf2\xfc\x06\x5d\xfa\x88\x2e\x09\xc7\xb2\x54\x69\x5a\x5e\x2e\x88\x65\x14\x5f\x03\xac\x27\x0e\x0d\x38\xe2\x1d\x65\x25\x1e\xf8\x18\x28\xbd\x53\x5b\xc5\xfc\x69\x84\xee\x9b\x8a\x97\x2f\x2f\xb7\x72\x29\xcd\x57\xae\x04\x3b\x24\x2f\x7f\xc3\x99\xde\x11\x82\xc4\x8c\x56\x2a\x92\x67\x4b\xe7\x3a\x17\x2a\x38\x54\x9f\x3f\x37\x33\x48\xe4\x22\xca\xf1\xd8\x5b\x51\x48\x9e\xa2\xbc\x15\xd1\xf6\xd3\xd0\x57\xc4\x47\x94\xc5\xb8\x82\x0a\x9e\xfa\xfa\x31\x25\xd9\xa6\x3f\x8c\xfb\xf1\x12\xd6\x11\x5d\xc8\xa8\xc9\xdd\x1d\xff\xc1\x2b\xb8\x32\xf1\xc9\x44\xd6\x2b\x7f\xc6\xd1\x3c\xae\xfe\x82\x5b\xce\x65\x03\xf9\xf2\xbc\x9b\xa2\xac\xeb\xd6\x23\xef\x77\xb3\x5d\x2e\xdd\x1d\x37\xe1\x9f\x13\x58\x2f\xd5\x59\x85\x43\x2c\x4c\xfe\x89\x85\xff\xc0\xac\xf8\x5d\x91\xef\x3d\xc0\x7f\x01\x00\x00\xff\xff\x01\x9e\x17\x2d\x83\x04\x00\x00")

func roleRbacAuthorizationK8sIoOpenshiftVeleroManagedVeleroOperatorYamlBytes() ([]byte, error) {
	return bindataRead(
		_roleRbacAuthorizationK8sIoOpenshiftVeleroManagedVeleroOperatorYaml,
		"Role.rbac.authorization.k8s.io/openshift-velero/ managed-velero-operator.yaml",
	)
}

func roleRbacAuthorizationK8sIoOpenshiftVeleroManagedVeleroOperatorYaml() (*asset, error) {
	bytes, err := roleRbacAuthorizationK8sIoOpenshiftVeleroManagedVeleroOperatorYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Role.rbac.authorization.k8s.io/openshift-velero/ managed-velero-operator.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _roleRbacAuthorizationK8sIoOpenshiftVeleroPrometheusK8sYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\x8e\xb1\x6e\xeb\x30\x0c\x45\x77\x7d\x05\xe1\xdd\x36\xde\x16\xe8\x07\xde\xde\xa1\x3b\x2d\x33\x31\x61\x49\x14\x48\xca\x01\xfa\xf5\x85\x9d\xb4\xe8\xa4\x73\x2f\x0e\xc4\x8b\x8d\x3f\x49\x8d\xa5\x46\xd0\x05\xd3\x84\xdd\x37\x51\xfe\x42\x67\xa9\xd3\x7e\xb3\x89\x65\x3e\xfe\x85\x9d\xeb\x1a\xe1\x43\x32\x85\x42\x8e\x2b\x3a\xc6\x00\x90\x71\xa1\x6c\x27\x01\x60\xe3\x49\x1a\x55\xdb\xf8\xee\x53\x92\x32\x17\xac\xf8\xa0\x35\xc2\xe0\xda\x69\xb8\xac\x8d\x0f\xfa\xa3\xb1\xcc\x29\x77\x73\xd2\xb1\x65\xf4\xbb\x68\x89\x80\x4f\x0b\x00\x15\x0b\x45\x68\x2a\x85\x7c\xa3\x6e\xe3\x7e\xfb\xa9\xad\x61\xa2\x08\xbf\xdf\x8c\x07\x65\x52\x09\xda\x33\x59\x0c\xe3\xb9\xe5\xbf\x4a\x6f\xd7\xb4\x11\x86\xf3\xb6\x92\x49\xd7\x44\xef\xce\x48\x0f\x4e\x64\x57\xa0\xba\x36\xe1\xea\xaf\xd4\x64\x3d\xe1\x20\x5d\xde\xf2\x83\xfc\x7a\x33\xdb\x0b\x9e\xe8\x69\x0b\xdf\x01\x00\x00\xff\xff\xe4\xcf\xa8\xf9\x3f\x01\x00\x00")

func roleRbacAuthorizationK8sIoOpenshiftVeleroPrometheusK8sYamlBytes() ([]byte, error) {
	return bindataRead(
		_roleRbacAuthorizationK8sIoOpenshiftVeleroPrometheusK8sYaml,
		"Role.rbac.authorization.k8s.io/openshift-velero/prometheus-k8s.yaml",
	)
}

func roleRbacAuthorizationK8sIoOpenshiftVeleroPrometheusK8sYaml() (*asset, error) {
	bytes, err := roleRbacAuthorizationK8sIoOpenshiftVeleroPrometheusK8sYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Role.rbac.authorization.k8s.io/openshift-velero/prometheus-k8s.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _rolebindingRbacAuthorizationK8sIoKubeSystemManagedValeroOperatorClusterConfigV1ReaderYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x90\xb1\x6e\x32\x31\x10\x84\x7b\x3f\x85\x45\xef\x43\x74\xbf\xdc\xfd\x69\xd2\x13\x29\xfd\x9e\x6f\x0e\x36\xf8\xbc\xd6\xda\x3e\x94\x3c\x7d\x74\xe8\x80\xa4\x80\x74\x96\xfc\xcd\xec\xcc\x50\xe6\x77\x68\x61\x49\xde\x6a\x4f\xa1\xa3\x56\x8f\xa2\xfc\x45\x95\x25\x75\xa7\x7f\xa5\x63\xd9\xce\x3b\x73\xe2\x34\x78\xbb\x97\x88\x17\x4e\x03\xa7\x83\x99\x50\x69\xa0\x4a\xde\x58\x1b\xa9\x47\x2c\xcb\xcb\x5a\xca\xdc\x49\x46\x2a\x47\x1e\x6b\x17\x64\xda\x4e\x94\xe8\x80\xc1\xdb\x4d\xd5\x86\xcd\x85\x3a\xf2\x8c\x1f\x18\xcb\x36\xc4\x56\x2a\xd4\xe5\x48\x75\x14\x9d\xbc\xa5\x73\xb9\xb0\x72\x4e\x50\x6f\x57\x1b\x37\x23\x42\xc5\x49\x86\x52\x15\xbd\x23\x5d\xa2\x09\x25\x53\xc0\x33\x78\x81\x1e\xfe\xbb\x6b\x8a\x20\x69\xe4\x83\x9b\x77\x4e\x41\x03\xae\xc2\xd5\xfd\xd4\x7a\xb8\xf2\x59\x2a\x26\xa3\x12\xb1\xc7\xb8\x94\xa7\xcc\xaf\x2a\x2d\x3f\xd9\xd2\x58\x7b\x9f\xf2\x96\xe6\xe1\xd5\xd2\xfa\x0f\x84\x5a\xbc\x71\xab\xee\x0d\x3a\x73\xc0\xff\x10\xa4\xa5\xfa\x57\x9f\xdf\xb1\x6f\x7b\xaf\x98\xf9\x0e\x00\x00\xff\xff\xfb\x52\x5a\xc1\xff\x01\x00\x00")

func rolebindingRbacAuthorizationK8sIoKubeSystemManagedValeroOperatorClusterConfigV1ReaderYamlBytes() ([]byte, error) {
	return bindataRead(
		_rolebindingRbacAuthorizationK8sIoKubeSystemManagedValeroOperatorClusterConfigV1ReaderYaml,
		"RoleBinding.rbac.authorization.k8s.io/kube-system/managed-valero-operator-cluster-config-v1-reader.yaml",
	)
}

func rolebindingRbacAuthorizationK8sIoKubeSystemManagedValeroOperatorClusterConfigV1ReaderYaml() (*asset, error) {
	bytes, err := rolebindingRbacAuthorizationK8sIoKubeSystemManagedValeroOperatorClusterConfigV1ReaderYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "RoleBinding.rbac.authorization.k8s.io/kube-system/managed-valero-operator-cluster-config-v1-reader.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _rolebindingRbacAuthorizationK8sIoOpenshiftCodereadyWorkspacesDedicatedAdminsOpenshiftCodereadyWorkspacesYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x8f\xb1\x4e\x43\x31\x0c\x45\xf7\x7c\x85\xd5\x3d\xa9\xd8\x50\x46\x16\xf6\x0e\xec\x7e\xb1\xdb\x9a\xf7\x62\x47\x71\x02\x82\xaf\x47\xad\x2a\x98\x00\xa9\x9b\x2d\xf9\x5e\x9f\x83\x4d\x5e\xb8\xbb\x98\x66\xe8\x0b\x96\x84\x73\x9c\xad\xcb\x27\x0e\x31\x4d\xeb\xa3\x27\xb1\xfd\xdb\x43\x58\x45\x29\xc3\xc1\x36\x7e\x12\x25\xd1\x53\xa8\x3c\x90\x70\x60\x0e\x00\x1b\x2e\xbc\xf9\x65\x02\xc0\x26\xc9\x1a\xab\x9f\xe5\x38\x52\xb1\xba\xaf\xa8\x78\x62\xca\xb0\x1b\x7d\xf2\x2e\x00\x28\x56\xce\x40\x4c\x52\x70\x30\x45\xa4\x2a\xea\xf1\x3b\x16\x8b\x11\x77\x46\xfa\x88\xef\xd6\x57\x6f\x58\xd8\x6f\xb9\xeb\x92\xe1\x9f\xdb\x6e\x1b\x1f\xf8\x78\x41\xc2\x26\xcf\xdd\x66\xfb\xc3\x30\x00\xfc\x08\xde\xcd\xe7\x73\x79\xe5\x32\x3c\x87\x78\xab\xbb\xfe\xfd\xb5\x2f\x7c\x05\x00\x00\xff\xff\x49\x59\x11\xe4\x7e\x01\x00\x00")

func rolebindingRbacAuthorizationK8sIoOpenshiftCodereadyWorkspacesDedicatedAdminsOpenshiftCodereadyWorkspacesYamlBytes() ([]byte, error) {
	return bindataRead(
		_rolebindingRbacAuthorizationK8sIoOpenshiftCodereadyWorkspacesDedicatedAdminsOpenshiftCodereadyWorkspacesYaml,
		"RoleBinding.rbac.authorization.k8s.io/openshift-codeready-workspaces/dedicated-admins-openshift-codeready-workspaces.yaml",
	)
}

func rolebindingRbacAuthorizationK8sIoOpenshiftCodereadyWorkspacesDedicatedAdminsOpenshiftCodereadyWorkspacesYaml() (*asset, error) {
	bytes, err := rolebindingRbacAuthorizationK8sIoOpenshiftCodereadyWorkspacesDedicatedAdminsOpenshiftCodereadyWorkspacesYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "RoleBinding.rbac.authorization.k8s.io/openshift-codeready-workspaces/dedicated-admins-openshift-codeready-workspaces.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _rolebindingRbacAuthorizationK8sIoOpenshiftLoggingDedicatedAdminsOpenshiftLoggingYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x8f\xbd\x4e\x04\x31\x0c\x84\xfb\x3c\x85\x75\xfd\xe6\x44\x87\x52\xd2\xd0\x5f\x41\x3f\x9b\xf8\xf6\xcc\x26\x76\x94\x1f\x0a\x9e\x1e\x2d\x20\x28\x10\x48\x74\x96\x6c\xcf\x37\x1f\xaa\x3c\x71\xeb\x62\x1a\xa8\xad\x88\x1e\x73\xdc\xac\xc9\x2b\x86\x98\xfa\xfd\xbe\x7b\xb1\xf3\xcb\x9d\xdb\x45\x53\xa0\x8b\x65\x7e\x10\x4d\xa2\x9b\x2b\x3c\x90\x30\x10\x1c\x51\xc6\xca\xb9\x1f\x13\x11\xaa\x78\xab\xac\xfd\x26\xd7\xe1\xa3\x95\x73\x81\x62\xe3\x14\xe8\x34\xda\xe4\x93\x23\x52\x14\x0e\x94\x38\x49\xc4\xe0\xb4\x20\x15\xd1\xbe\x7c\xbd\x2d\xd9\xb6\xed\x80\x7c\x9c\xf6\x8a\xc8\x81\x7e\xae\x9b\x65\xbe\xf0\xf5\x00\xa3\xca\x63\xb3\x59\xff\xf0\x70\x44\xdf\x1a\xff\x69\xd1\xe7\xfa\xcc\x71\xf4\xe0\x96\xcf\x84\x77\xd4\xaf\x11\xee\x2d\x00\x00\xff\xff\xd2\xa3\x85\xf7\x57\x01\x00\x00")

func rolebindingRbacAuthorizationK8sIoOpenshiftLoggingDedicatedAdminsOpenshiftLoggingYamlBytes() ([]byte, error) {
	return bindataRead(
		_rolebindingRbacAuthorizationK8sIoOpenshiftLoggingDedicatedAdminsOpenshiftLoggingYaml,
		"RoleBinding.rbac.authorization.k8s.io/openshift-logging/dedicated-admins-openshift-logging.yaml",
	)
}

func rolebindingRbacAuthorizationK8sIoOpenshiftLoggingDedicatedAdminsOpenshiftLoggingYaml() (*asset, error) {
	bytes, err := rolebindingRbacAuthorizationK8sIoOpenshiftLoggingDedicatedAdminsOpenshiftLoggingYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "RoleBinding.rbac.authorization.k8s.io/openshift-logging/dedicated-admins-openshift-logging.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _rolebindingRbacAuthorizationK8sIoOpenshiftValeroManagedValeroOperatorYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x8f\xb1\x4e\xc4\x30\x0c\x86\xf7\x3c\x85\x75\x7b\x5b\xb1\xa1\x6c\xb0\xb0\x1f\x12\xbb\x9b\xba\x57\x73\x49\x1c\xd9\x4e\x91\x78\x7a\x74\xa8\x02\x26\x18\xd8\x2c\xf9\xf3\xef\xff\xc3\xc6\x2f\xa4\xc6\x52\x23\xe8\x8c\x69\xc4\xee\x9b\x28\xbf\xa3\xb3\xd4\xf1\x7a\x6f\x23\xcb\xb4\xdf\x85\x2b\xd7\x25\xc2\x59\x32\x3d\x72\x5d\xb8\x5e\x42\x21\xc7\x05\x1d\x63\x00\xc8\x38\x53\xb6\xdb\x04\x80\x8d\x47\x69\x54\x6d\xe3\xd5\xc7\x24\x65\x2a\x58\xf1\x42\x4b\x84\x93\x6b\xa7\xd3\x27\xb5\xf1\x4e\x3f\x30\x96\x29\xe5\x6e\x4e\x3a\xb4\x8c\xbe\x8a\x96\x08\xf8\x66\x01\xa0\x62\xa1\x08\x47\xc6\xb0\x53\x26\x95\x41\x1a\x29\xba\xe8\xb1\xb7\x86\x89\x22\x7c\xe5\x1d\x58\x50\xc9\x74\xa6\xf5\x56\x0c\x1b\x3f\xa9\xf4\xf6\x8b\x67\x00\xf8\xd6\xfc\xf3\xb3\xf5\xf9\x95\x92\x5b\x0c\xc3\x71\xf6\x4c\xba\x73\xa2\x87\x94\xa4\x57\xff\x67\xf5\x8f\x00\x00\x00\xff\xff\x88\xe1\x8c\xff\x9a\x01\x00\x00")

func rolebindingRbacAuthorizationK8sIoOpenshiftValeroManagedValeroOperatorYamlBytes() ([]byte, error) {
	return bindataRead(
		_rolebindingRbacAuthorizationK8sIoOpenshiftValeroManagedValeroOperatorYaml,
		"RoleBinding.rbac.authorization.k8s.io/openshift-valero/managed-valero-operator.yaml",
	)
}

func rolebindingRbacAuthorizationK8sIoOpenshiftValeroManagedValeroOperatorYaml() (*asset, error) {
	bytes, err := rolebindingRbacAuthorizationK8sIoOpenshiftValeroManagedValeroOperatorYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "RoleBinding.rbac.authorization.k8s.io/openshift-valero/managed-valero-operator.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _rolebindingRbacAuthorizationK8sIoOpenshiftValeroPrometheusK8sYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x90\x3d\x6b\xc4\x30\x0c\x86\x77\xff\x0a\x71\x7b\x1c\xba\x1d\xde\xda\xa5\xfb\x15\xba\x2b\x8e\x72\x51\x63\x5b\x46\x96\x53\xe8\xaf\x2f\x29\xfd\x5a\x5a\xb8\x4d\x88\x07\xe9\x7d\x5e\xac\xfc\x4c\xda\x58\x4a\x00\x9d\x30\x7a\xec\xb6\x8a\xf2\x1b\x1a\x4b\xf1\xdb\xb9\x79\x96\x71\xbf\x73\x1b\x97\x39\xc0\x45\x12\x3d\x70\x99\xb9\x5c\x5d\x26\xc3\x19\x0d\x83\x03\x48\x38\x51\x6a\xc7\x04\x80\x95\xbd\x54\x2a\x6d\xe5\xc5\x7c\x94\x3c\x66\x2c\x78\xa5\x39\xc0\xc9\xb4\xd3\xe9\x83\x5a\x79\xa7\x5f\x18\xcb\x18\x53\x6f\x46\x3a\xd4\x84\xb6\x88\xe6\x00\xf8\xda\x1c\x40\xc1\x4c\x01\xaa\x4a\x26\x5b\xa9\xb7\x61\x3b\x7f\xad\x5b\xc5\x48\x01\xbe\xcf\x0c\x3b\x25\x52\x71\x2a\x89\x2e\xb4\x1c\x79\xb0\xf2\xa3\x4a\xaf\xff\xe8\x39\x80\x1f\xbb\xbf\x1e\xb6\x3e\xbd\x50\xb4\x16\xdc\xf0\x49\x3f\x91\xee\x1c\xe9\x3e\x46\xe9\xc5\x6e\x0c\x9a\xa5\xb0\x89\x1e\x3d\xbe\x07\x00\x00\xff\xff\x70\xd6\x81\x5e\x83\x01\x00\x00")

func rolebindingRbacAuthorizationK8sIoOpenshiftValeroPrometheusK8sYamlBytes() ([]byte, error) {
	return bindataRead(
		_rolebindingRbacAuthorizationK8sIoOpenshiftValeroPrometheusK8sYaml,
		"RoleBinding.rbac.authorization.k8s.io/openshift-valero/prometheus-k8s.yaml",
	)
}

func rolebindingRbacAuthorizationK8sIoOpenshiftValeroPrometheusK8sYaml() (*asset, error) {
	bytes, err := rolebindingRbacAuthorizationK8sIoOpenshiftValeroPrometheusK8sYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "RoleBinding.rbac.authorization.k8s.io/openshift-valero/prometheus-k8s.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _scheduleValeroIoOpenshiftVeleroDailyFullBackupYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x51\x3b\x6b\x03\x31\x0c\xde\xef\x57\x88\x2c\x81\xc0\xe5\xb1\x94\xe2\xb5\x6b\xe9\xd0\x40\x77\xc5\xa7\xe4\x4c\x64\xcb\x58\xf2\xb5\xfd\xf7\xe5\x1e\x29\x09\x84\x5b\x0e\x7d\x4f\xc9\x98\xc3\x17\x15\x0d\x92\x1c\x0c\xc4\x54\x64\x1b\x64\x37\x1c\x9a\x6b\x48\x9d\x83\xa3\xef\xa9\xab\x4c\x4d\x24\xc3\x0e\x0d\x5d\x03\xc0\x78\x22\xd6\xf1\x0f\x00\x73\xd8\x4a\xa6\xa4\x7d\x38\xdb\xd6\x4b\xdc\x45\x4c\x78\xa1\xce\xc1\xca\x4a\xa5\xd5\xc4\xea\xc3\x40\x77\xb4\x20\x3b\xcf\x55\x8d\x4a\x9b\x19\xed\x2c\x25\x3a\xc0\x6f\x6d\x00\x12\x46\x72\xd0\x61\xe0\xdf\xf6\x5c\x99\xdb\x13\xfa\x6b\xcd\x0b\xa2\x19\x3d\x39\xf8\x77\x6a\xe7\xca\x8d\x66\xf2\x63\x1f\x5d\xea\x3a\xd8\xc3\x01\x36\xe3\xd7\x00\x18\xc5\x31\x86\xe6\xc6\xf4\xe3\xb9\x76\xd4\x7d\xdc\xfc\xd4\x41\xaa\xcc\x0f\xe0\x27\xa9\xd4\xf2\x88\xf5\x22\xd7\x65\x6b\x80\xf2\x84\x10\xd2\x24\x7e\x9b\x57\x7b\x66\xb1\x30\xee\xb3\xa7\x79\x0b\xeb\xcd\xfa\x81\xf1\x4c\x3d\xdd\xfd\x48\x4c\xde\xa4\xdc\xcd\xd5\xa4\xe0\x85\xde\xc5\xa3\x4d\x0f\xb9\x9a\xaf\x6e\xc6\x0e\x0e\x2f\xaf\xfd\x3e\xee\x75\x9a\x0c\xc2\x35\xd2\x31\x61\xd6\x5e\xec\x26\xb8\x65\xfc\x05\x00\x00\xff\xff\xa1\x74\x30\x65\x0c\x02\x00\x00")

func scheduleValeroIoOpenshiftVeleroDailyFullBackupYamlBytes() ([]byte, error) {
	return bindataRead(
		_scheduleValeroIoOpenshiftVeleroDailyFullBackupYaml,
		"Schedule.valero.io/openshift-velero/daily-full-backup.yaml",
	)
}

func scheduleValeroIoOpenshiftVeleroDailyFullBackupYaml() (*asset, error) {
	bytes, err := scheduleValeroIoOpenshiftVeleroDailyFullBackupYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Schedule.valero.io/openshift-velero/daily-full-backup.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _scheduleValeroIoOpenshiftVeleroHourlyObjectBackupYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x51\x4b\x8b\xe3\x30\x0c\xbe\xe7\x57\x88\x5e\x0a\x85\xf4\xb1\x2c\x2c\xf8\xba\xd7\x65\x0f\x53\xe8\x5d\x75\xd4\xc6\x53\xd9\x32\x96\x9c\x99\xf9\xf7\x43\x1e\x1d\x5a\x28\xb9\x04\x7d\x4f\x59\x98\xc3\x89\x8a\x06\x49\x0e\x06\x62\x2a\xb2\x0d\xb2\x1b\x0e\xcd\x2d\xa4\xce\xc1\xd1\xf7\xd4\x55\xa6\x26\x92\x61\x87\x86\xae\x01\x60\x3c\x13\xeb\xf8\x07\x80\x39\x6c\x25\x53\xd2\x3e\x5c\x6c\xeb\x25\xee\x22\x26\xbc\x52\xe7\x60\x65\xa5\xd2\x6a\x62\xf5\x61\xa0\x07\x5a\x90\x9d\xe7\xaa\x46\xa5\xcd\x8c\x76\x91\x12\x1d\xe0\x87\x36\x00\x09\x23\x39\xe8\xa5\x16\xfe\x6a\xe5\xfc\x4e\xde\xda\x33\xfa\x5b\xcd\x0b\xa8\x19\x3d\x39\xf8\x31\x6b\xe7\xd6\x8d\x66\xf2\x63\x25\x5d\x1a\x3b\x38\xfc\x81\xcd\xfc\x35\x00\x46\x71\x8c\xa2\xb9\x35\x7d\x7a\xae\x1d\x75\xff\xef\x86\xea\x20\x55\xe6\x27\xf0\x8d\x54\x6a\x79\xc6\x7a\x91\xdb\xb2\x39\x40\x79\x41\x08\x69\x12\xff\x9d\xd7\x7b\x65\xb1\x30\x1e\xb3\xa7\x79\x0b\xeb\xcd\xfa\x89\xf1\x4a\x3d\xbd\xfd\x91\x98\xbc\x49\x79\x98\x6b\xc2\xac\xbd\xd8\x49\xb8\xc6\x51\x71\x41\x56\x9a\x21\x93\x82\x57\xfa\x27\x1e\x6d\xba\xf3\x6a\x3e\x8a\x19\x3b\xf8\xf5\xbb\xdf\xc7\xbd\x4e\x83\x61\xd2\x1e\x17\xa7\x3b\xff\x9e\xfe\x1d\x00\x00\xff\xff\xda\x4b\xd2\xc4\x2a\x02\x00\x00")

func scheduleValeroIoOpenshiftVeleroHourlyObjectBackupYamlBytes() ([]byte, error) {
	return bindataRead(
		_scheduleValeroIoOpenshiftVeleroHourlyObjectBackupYaml,
		"Schedule.valero.io/openshift-velero/hourly-object-backup.yaml",
	)
}

func scheduleValeroIoOpenshiftVeleroHourlyObjectBackupYaml() (*asset, error) {
	bytes, err := scheduleValeroIoOpenshiftVeleroHourlyObjectBackupYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Schedule.valero.io/openshift-velero/hourly-object-backup.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _scheduleValeroIoOpenshiftVeleroWeeklyFullBackupYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x51\xcd\x6e\xc2\x30\x0c\xbe\xf7\x29\x2c\x2e\x48\x48\x85\xc2\x65\x52\xae\xbb\x4e\x3b\x0c\x69\x77\x93\x1a\x1a\xd5\x89\xa3\xc4\x29\xdb\xdb\x4f\xa4\x65\x02\x89\x5b\xe4\xef\xd7\x0e\x46\xf7\x4d\x29\x3b\x09\x06\x26\x62\x4a\xb2\x75\xb2\x9b\xf6\xcd\xe8\x42\x6f\xe0\x68\x07\xea\x0b\x53\xe3\x49\xb1\x47\x45\xd3\x00\x30\x9e\x88\xf3\xed\x05\x80\xd1\x6d\x25\x52\xc8\x83\x3b\xeb\xd6\x8a\xdf\x79\x0c\x78\xa1\xde\xc0\x4a\x53\xa1\x55\x65\x0d\x6e\xa2\x07\x9a\x93\x9d\xe5\x92\x95\x52\x1b\x19\xf5\x2c\xc9\x1b\xc0\x6b\x6e\x00\x02\x7a\x32\x70\x25\x1a\xf9\xb7\x3d\x17\xe6\xf6\x84\x76\x2c\x71\x81\x72\x44\x4b\x06\xfe\xad\xda\xb9\x73\x93\x23\xd9\x5b\xa1\xbc\xf4\x35\xd0\xc1\x01\x36\xb0\x81\x7d\x03\xa0\xe4\x6f\x39\x34\x57\xa6\x1f\xcb\xa5\xa7\xfe\xf3\xee\x97\x0d\x84\xc2\xfc\x04\x7e\x51\x96\x92\x9e\xb1\x41\x64\x5c\xd6\x06\x48\x2f\x08\x2e\x54\xf1\xfb\xbc\xdb\x2b\x8b\x85\xf1\x98\x5d\xe7\x2d\xac\x37\xeb\x27\xc6\x2b\x75\x3d\xfc\x91\x98\xac\x4a\x7a\x98\x67\x95\x84\x17\xfa\x10\x8b\x5a\x7f\x72\x35\x9f\x5d\x95\x0d\xbc\x1d\xba\xa1\xf3\x5d\xae\x93\x49\xb8\x78\x3a\x06\x8c\x79\x10\xbd\x0b\xee\x19\x7f\x01\x00\x00\xff\xff\x04\xc9\xb0\x36\x0d\x02\x00\x00")

func scheduleValeroIoOpenshiftVeleroWeeklyFullBackupYamlBytes() ([]byte, error) {
	return bindataRead(
		_scheduleValeroIoOpenshiftVeleroWeeklyFullBackupYaml,
		"Schedule.valero.io/openshift-velero/weekly-full-backup.yaml",
	)
}

func scheduleValeroIoOpenshiftVeleroWeeklyFullBackupYaml() (*asset, error) {
	bytes, err := scheduleValeroIoOpenshiftVeleroWeeklyFullBackupYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Schedule.valero.io/openshift-velero/weekly-full-backup.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _secretOpenshiftConfigOsdOauthTemplatesErrorsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x34\xcd\x3d\xaa\xc3\x30\x10\x04\xe0\x5e\xa7\x58\xdc\x18\x04\xf2\xe3\xb5\xea\x02\x36\xe9\x52\x24\x21\xfd\x46\x5a\xdb\x22\xfa\x43\xbb\xce\xf9\x83\x89\xd3\x4d\xf1\xcd\x0c\xd6\xf0\xa0\xc6\xa1\x64\x0b\xef\x7f\xf5\x0a\xd9\x5b\xb8\x91\x6b\x24\x2a\x91\xa0\x47\x41\xab\x00\x22\x3e\x29\xf2\x9e\x00\xb0\x86\xa1\x54\xca\xbc\x86\x59\x06\x57\xd2\x5f\xc2\x8c\x0b\x79\x0b\x9d\xb4\x8d\x3a\x05\x90\x31\x91\x85\xc2\xde\x14\xdc\x64\x35\x42\xa9\x46\x14\x62\x43\xad\x95\xc6\x07\xe1\x8a\x6e\x77\xbf\x35\xe3\x4a\x9e\xc3\xa2\x58\x5a\xc8\xcb\x78\x9c\x7f\x2b\xc3\x2a\x29\x5a\xe8\xb5\xd6\x70\x9e\x2e\xd3\xf5\x74\x9f\x46\xd0\x5a\xf7\xea\x13\x00\x00\xff\xff\x8c\x27\xd1\x85\xc6\x00\x00\x00")

func secretOpenshiftConfigOsdOauthTemplatesErrorsYamlBytes() ([]byte, error) {
	return bindataRead(
		_secretOpenshiftConfigOsdOauthTemplatesErrorsYaml,
		"Secret/openshift-config/osd-oauth-templates-errors.yaml",
	)
}

func secretOpenshiftConfigOsdOauthTemplatesErrorsYaml() (*asset, error) {
	bytes, err := secretOpenshiftConfigOsdOauthTemplatesErrorsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Secret/openshift-config/osd-oauth-templates-errors.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _secretOpenshiftConfigOsdOauthTemplatesLoginYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x34\xcd\xb1\x6a\xc6\x30\x0c\x04\xe0\xdd\x4f\x21\xb2\x04\x0c\x4e\xe9\xea\xad\x90\xd0\xad\x43\x5b\xba\xab\xb6\xe2\x88\xda\xb2\xb1\x95\x3e\xff\x4f\xe0\xcf\x76\xc3\x77\x77\xd8\xf8\x87\xfa\xe0\x2a\x1e\xfe\x5f\xcd\x1f\x4b\xf4\xf0\x45\xa1\x93\x9a\x42\x8a\x11\x15\xbd\x01\xc8\xf8\x4b\x79\x5c\x09\x00\x1b\x2f\xb5\x91\x8c\x83\x77\x5d\x42\x2d\x2f\x05\x05\x13\x45\x0f\x93\xf6\x93\x26\x03\x20\x58\xc8\x43\x1d\xd1\x55\x3c\xf5\x70\x4a\xa5\x65\x54\x1a\x2e\xd7\xc4\xf2\x14\xa3\x61\xb8\xd8\x3d\xe6\x42\x95\x9d\x93\x19\xda\x59\xd2\x7a\x7f\x5f\x8d\xe5\xd0\x92\x3d\xcc\xd6\x5a\x78\xdf\x3e\xb6\xcf\xb7\xef\x6d\x05\x6b\xed\x6c\x1e\x01\x00\x00\xff\xff\x57\x5f\x29\x01\xc4\x00\x00\x00")

func secretOpenshiftConfigOsdOauthTemplatesLoginYamlBytes() ([]byte, error) {
	return bindataRead(
		_secretOpenshiftConfigOsdOauthTemplatesLoginYaml,
		"Secret/openshift-config/osd-oauth-templates-login.yaml",
	)
}

func secretOpenshiftConfigOsdOauthTemplatesLoginYaml() (*asset, error) {
	bytes, err := secretOpenshiftConfigOsdOauthTemplatesLoginYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Secret/openshift-config/osd-oauth-templates-login.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _secretOpenshiftConfigOsdOauthTemplatesProvidersYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\xcd\xbf\x6a\xc6\x30\x0c\x04\xf0\xdd\x4f\x21\xb2\x04\x0c\x4e\xe9\xea\xad\x90\xd0\xad\x43\x5b\xba\xab\xb6\x92\x88\xfa\x1f\x96\x92\xe7\x2f\x81\x7c\xdf\x76\xc3\xef\xee\xb0\xf1\x0f\x75\xe1\x5a\x3c\x9c\xaf\xe6\x8f\x4b\xf4\xf0\x45\xa1\x93\x9a\x4c\x8a\x11\x15\xbd\x01\x48\xf8\x4b\x49\xae\x04\x80\x8d\xa7\xda\xa8\xc8\xce\xab\x4e\xa1\xe6\x97\x8c\x05\x37\x8a\x1e\x06\xed\x07\x0d\x06\xa0\x60\x26\x0f\x55\xa2\xab\x78\xe8\xee\x94\x72\x4b\xa8\x24\xae\xf5\x7a\x72\xa4\x2e\xb7\x92\x86\xe1\xa2\x8f\x41\x17\x6a\x59\x79\x33\xa2\x9d\xcb\x36\xdf\xff\xcf\xd6\xb4\x6b\x4e\x1e\x46\x6b\x2d\xbc\x2f\x1f\xcb\xe7\xdb\xf7\x32\x83\xb5\x76\x34\xff\x01\x00\x00\xff\xff\xc4\x0d\xa3\x90\xcc\x00\x00\x00")

func secretOpenshiftConfigOsdOauthTemplatesProvidersYamlBytes() ([]byte, error) {
	return bindataRead(
		_secretOpenshiftConfigOsdOauthTemplatesProvidersYaml,
		"Secret/openshift-config/osd-oauth-templates-providers.yaml",
	)
}

func secretOpenshiftConfigOsdOauthTemplatesProvidersYaml() (*asset, error) {
	bytes, err := secretOpenshiftConfigOsdOauthTemplatesProvidersYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Secret/openshift-config/osd-oauth-templates-providers.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _selectorsyncidentityproviderHiveOpenshiftIoOsdSreIdenitityproviderYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x91\xcd\x8e\x9b\x40\x10\x84\xef\x3c\xc5\x68\x95\x2b\xbb\xda\xeb\xdc\x88\x20\x09\x92\x21\x08\xe3\x48\x39\xa1\xf6\x4c\x1b\x5a\x99\x3f\xcd\x0c\x8e\xac\x28\xef\x1e\xe1\x65\x0d\x1b\x29\xce\xde\xf8\xf9\xaa\xaa\xbb\x1a\x1c\x7d\x43\x1f\xc8\x1a\xce\x46\x3a\xe3\xa3\x75\x68\xc2\x48\xa7\xf8\x48\xf6\xe9\xfc\x0c\xca\x8d\xf0\x9c\xfc\x20\x23\x39\xdb\xa3\x42\x11\xad\xdf\x5f\x8c\x28\x25\x9a\x48\xf1\xd2\x78\x7b\x26\x89\x3e\xd1\x18\x41\x42\x04\x9e\x30\xa6\xe0\x88\x2a\xcc\x4f\x8c\x81\xa3\x8d\xa9\xb0\xfa\x49\x83\x81\x01\x25\x67\x0f\xd1\x4f\xf8\x90\x30\x66\x40\x23\x67\x36\xc8\x34\x78\x4c\x69\xb1\x76\xaf\xd6\xc1\xa1\x98\xcd\x84\x9a\x42\x44\x9f\xa3\x53\xf6\xa2\xd1\xc4\xd7\x81\x5e\x92\x34\x44\x31\xee\x36\xd1\xef\x0b\xa7\xbf\x36\xb9\x8a\x53\x26\x46\x50\x0a\xcd\x80\x9c\xcd\xe4\xd5\x50\x49\x70\x37\xeb\x18\x3d\x1d\xa7\x88\xb7\x30\xc6\x50\x03\xa9\xf5\x35\x65\x1f\x7e\x95\x79\x51\x77\x65\xf7\xbd\xcf\xba\xae\xed\x8b\x2a\x2b\x77\xbf\x6f\x00\xc9\x7b\x70\x99\xaf\xe4\xb5\xa1\x3b\x6c\x9d\x55\xc5\x4a\x3b\x8f\x27\xf4\x1e\xe5\x21\xa0\xff\x9f\xb4\x69\x8b\x4f\x45\xdb\x16\x79\x7f\xd8\x17\xed\xd6\xe8\x48\x46\xe6\x35\xdf\x2a\x3e\x96\x75\xde\xe7\xf5\x96\x68\x20\x84\x9f\xd6\x6f\x56\x59\xcf\x39\x17\x96\x06\x14\x1e\xe3\xf2\x57\xc0\x3f\x39\x01\xa9\xb0\xe6\x44\x83\x06\xb7\x30\x64\x02\x8a\xc9\x23\x67\x27\x50\x01\x97\xaf\x93\x57\x6f\x86\x3a\xb4\x4b\xa7\xca\x0e\x64\x36\xf7\xd2\xe0\x1c\x99\xa1\xc2\x38\x5a\xf9\x46\x52\x65\x4d\x53\xd6\x9f\xfb\xaa\xe8\xbe\x7c\x5d\x7a\x7e\x19\x67\x03\xad\x5d\xc4\x8b\x43\xce\x76\x79\xd6\x24\x7f\x02\x00\x00\xff\xff\xe5\xfa\x72\xe7\x32\x03\x00\x00")

func selectorsyncidentityproviderHiveOpenshiftIoOsdSreIdenitityproviderYamlBytes() ([]byte, error) {
	return bindataRead(
		_selectorsyncidentityproviderHiveOpenshiftIoOsdSreIdenitityproviderYaml,
		"SelectorSyncIdentityProvider.hive.openshift.io/osd-sre-idenitityprovider.yaml",
	)
}

func selectorsyncidentityproviderHiveOpenshiftIoOsdSreIdenitityproviderYaml() (*asset, error) {
	bytes, err := selectorsyncidentityproviderHiveOpenshiftIoOsdSreIdenitityproviderYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "SelectorSyncIdentityProvider.hive.openshift.io/osd-sre-idenitityprovider.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _selectorsyncsetHiveOpenshiftIoKubeletConfigYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x51\x4d\x0b\x1a\x31\x10\xbd\xe7\x57\x0c\xa1\xe0\x49\xc5\x6b\x6e\x4b\x2b\xb6\xd0\xb5\xa2\xd2\xab\xc4\xec\xb8\x1b\x4c\x32\x21\xc9\x2a\x8b\xec\x7f\x2f\x9b\x55\xdc\x96\xe2\x2d\xcc\xe4\xbd\x79\x1f\xd2\xeb\xdf\x18\xa2\x26\x27\xa0\xd1\x37\x5c\x90\x47\x17\x1b\x7d\x49\x0b\x4d\xcb\xdb\x4a\x1a\xdf\xc8\x15\xbb\x6a\x57\x09\x38\xa0\x41\x95\x28\x1c\x3a\xa7\x0e\x98\x98\xc5\x24\x2b\x99\xa4\x60\x00\x46\x9e\xd1\xc4\xe1\x05\x60\xa5\x93\x35\x56\x7f\x73\xd5\x3a\x7d\x97\xb1\x11\xf0\xe5\xf1\xa3\x2c\x36\xeb\xd3\xb1\xd8\xf4\x1f\xbf\xef\xd1\xd3\x56\x5a\x1c\x20\xfb\xf5\xee\xd7\x69\x5b\x94\xeb\x0f\x10\x8a\x95\x00\x9e\x42\x8b\x9c\x01\xb8\x8c\xbc\xb6\x67\x34\x98\xe6\x8a\xdc\x45\xd7\x2c\x7a\x54\x83\x46\x65\xda\x98\x30\x7c\x43\x6f\xa8\xb3\xe8\xd2\xcb\xda\xcb\x40\x52\xcd\xcf\x89\x23\x00\xe9\xf5\xe4\x9a\x22\xbb\x7c\x6a\x98\x9c\xf4\x03\x0c\x33\x64\x0e\xd3\x64\xad\x54\x8d\x76\x38\x8a\x68\x83\x4c\x9a\xdc\xbf\x49\xb3\xf1\x8a\x37\x5d\x49\x15\x0a\x28\xcc\x5d\x76\xb1\x18\x06\x79\x35\x56\x50\x8e\x4c\x5f\x33\xd3\x8e\xc8\xe4\xdd\xe8\xf5\x4e\xe1\x8a\x21\x0f\xb2\x12\x01\xb3\x07\xf0\x57\x49\x5c\xc0\x83\x8f\x2d\xe5\xe7\x7f\x23\x54\x6d\x4c\x64\xe7\xcf\xd4\xb8\xe0\xbc\x87\xfe\x99\x40\x3f\x7b\x53\x1f\x3b\x8f\x02\x2c\x86\x1a\x19\x40\xc0\x48\x6d\x50\x58\xbc\xd5\xc7\xce\x29\xf6\x27\x00\x00\xff\xff\xc7\x68\x36\x37\x5d\x02\x00\x00")

func selectorsyncsetHiveOpenshiftIoKubeletConfigYamlBytes() ([]byte, error) {
	return bindataRead(
		_selectorsyncsetHiveOpenshiftIoKubeletConfigYaml,
		"SelectorSyncSet.hive.openshift.io/kubelet-config.yaml",
	)
}

func selectorsyncsetHiveOpenshiftIoKubeletConfigYaml() (*asset, error) {
	bytes, err := selectorsyncsetHiveOpenshiftIoKubeletConfigYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "SelectorSyncSet.hive.openshift.io/kubelet-config.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _selectorsyncsetHiveOpenshiftIoOsdCuratedOperatorsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x54\x4f\x6b\xdb\x30\x14\xbf\xfb\x53\x3c\xc4\xa0\x97\x24\xa5\x57\xdd\xcc\x16\xba\xc1\x92\x8e\xa6\xec\x32\x46\x79\x93\x5f\x6c\x51\x5b\x12\x92\x9c\x61\x42\xbe\x7b\x91\x6c\x27\x6a\x93\x86\xf6\x50\x72\x33\x7a\x7a\xbf\x7f\xef\xc9\x68\xe4\x6f\xb2\x4e\x6a\xc5\xa1\x92\x1b\x9a\x69\x43\xca\x55\x72\xed\x67\x52\x5f\x6f\x6e\xb0\x36\x15\xde\x64\x4f\x52\x15\x1c\x56\x54\x93\xf0\xda\xae\x3a\x25\x56\xe4\xb3\x86\x3c\x16\xe8\x91\x67\x00\x35\xfe\xa3\xda\x85\x2f\x80\x06\x15\x96\x54\xbc\xc4\x2a\xa5\xff\x8e\xae\xe2\xf0\x65\xfb\x63\x91\xdf\xce\x1f\x1f\xf2\xdb\xdd\xd9\xeb\xf7\x64\xf4\x12\x1b\x0a\x2d\xf7\xf3\x5f\x77\x8f\xcb\x7c\x31\x3f\xd3\xa2\x5d\xc1\x81\x79\xdb\x12\xcb\x00\x54\xec\xd4\xae\x98\x8a\xd6\xa2\xa7\x62\xaa\x0d\x59\xf4\xda\xba\xcc\x19\x12\x41\xaa\xa8\x5b\xe7\xc9\x7e\x23\x53\xeb\xae\x21\xe5\x47\x87\xa3\x0f\x2f\xaa\x9f\x89\x31\x00\x34\x32\x21\x15\xba\xb9\x1e\xa4\x24\xcc\x26\xb4\x51\x6c\x99\x42\x1a\xb0\xd0\x6a\x2d\xcb\xd7\x11\x67\x3d\xae\xa9\xbb\x85\x2e\x88\x43\x5e\xff\xc7\xce\xe5\xe1\x20\x96\xfa\xec\xbf\xf6\x52\x07\xac\x58\xe8\x1d\x6e\x92\x93\xc8\xcc\xe1\x6a\x0b\x2c\x58\x64\x1c\xb6\xc0\xf4\x86\xac\x95\x05\x39\xc6\xe1\x4f\x38\x08\x80\x8c\x03\xbb\x1b\xf2\x58\xe9\xd6\x0a\x62\x13\x60\x01\x31\x54\x2c\x15\x15\xfa\x43\x60\x6c\x32\xd8\x8f\x37\x9c\x41\x11\xaf\xed\x8d\x4c\x1b\xb4\x4f\xe4\x4d\x8d\x3d\x4e\xab\x86\x54\x18\x87\x90\x0a\xec\x26\xe7\x88\x53\xf0\x50\x17\x64\xbd\x5c\xcb\x74\x64\xa3\xba\x0f\x71\x0f\xb8\xef\x50\x90\x70\xeb\xa6\x69\x95\xf4\xdd\x9b\xdc\xa3\xda\x0f\xb8\x87\xbf\xb0\x83\xdd\xd5\x61\x46\x0f\x9d\x21\x0e\x0d\xd9\x92\x8e\xb6\x64\xcf\x3b\x13\xda\x92\x76\x71\xcb\xde\xbb\x26\x2f\x8d\x25\x6b\x72\x22\xd3\x7d\x35\x1a\x8b\xc4\xc7\x86\xde\xde\x2b\x4b\xa5\x74\xde\x76\xcb\x74\x2c\xe3\x5b\x3b\x35\xc2\xcb\x67\x70\x3c\xdb\x4f\xcd\xe0\xc4\x2a\x5d\x3c\x83\xd7\x4f\xfb\x33\x03\x38\xfa\x8d\x9c\x75\x6f\xc9\x45\xb1\xf9\xc1\x9b\xeb\x94\xc8\x9e\x03\x00\x00\xff\xff\x14\x90\x39\xb8\xa3\x06\x00\x00")

func selectorsyncsetHiveOpenshiftIoOsdCuratedOperatorsYamlBytes() ([]byte, error) {
	return bindataRead(
		_selectorsyncsetHiveOpenshiftIoOsdCuratedOperatorsYaml,
		"SelectorSyncSet.hive.openshift.io/osd-curated-operators.yaml",
	)
}

func selectorsyncsetHiveOpenshiftIoOsdCuratedOperatorsYaml() (*asset, error) {
	bytes, err := selectorsyncsetHiveOpenshiftIoOsdCuratedOperatorsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "SelectorSyncSet.hive.openshift.io/osd-curated-operators.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _selectorsyncsetHiveOpenshiftIoOsdOauthTemplatesYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x90\x41\x8b\xdb\x30\x10\x85\xef\xfe\x15\x83\x28\xe4\x52\x27\xe4\xaa\x9b\xa1\x21\x2d\x34\x49\x49\x42\xaf\x41\x2b\x4f\x6c\xb1\xb2\x46\x48\x72\xc0\x18\xff\xf7\x45\x72\xbc\xf1\x2e\x4b\xf6\x36\xb6\xe6\xbd\x37\xdf\x13\x56\xfd\x47\xe7\x15\x19\x0e\xb5\xba\xe1\x92\x2c\x1a\x5f\xab\x6b\x58\x2a\x5a\xdd\xd6\x42\xdb\x5a\xac\xb3\x57\x65\x4a\x0e\x27\xd4\x28\x03\xb9\x53\x67\xe4\x09\x43\xd6\x60\x10\xa5\x08\x82\x67\x00\x5a\xbc\xa0\xf6\x71\x02\x68\x84\x11\x15\x96\x1f\xbd\x2a\x15\x7e\x0b\x5f\x73\xf8\xd1\xff\xd9\x15\xdb\xcd\xe5\x5c\x6c\x87\xa7\xeb\x47\xb4\xb4\x17\x0d\x46\xc9\x71\xf3\xef\x70\xd9\x17\xbb\xcd\x13\x09\xf9\x92\x03\x0b\xae\x45\x96\x01\x98\xa4\x24\x5f\xe6\x24\xda\x50\xe7\x01\x1b\xab\x45\x40\x9f\x79\x8b\x32\x1e\x2a\x75\xeb\x03\xba\x5f\x68\x35\x75\x0d\x9a\x30\xf1\x4d\x14\x41\xd6\x7f\x67\x58\x00\xc2\xaa\x59\xa4\xa4\x66\x75\x3f\x64\x96\x6b\xa3\x0c\x93\x24\x87\x79\xbd\x92\xcc\x55\x55\x9f\x0b\xce\x46\x5f\xab\xbb\x1d\x95\xc8\xa1\x88\xe3\xc1\x48\x4c\x0f\x63\xef\x87\xa2\x0d\x75\xfa\x1e\xa1\xee\x87\xa7\x3f\x29\x8e\xc3\xa2\x67\x11\x8b\xf1\x9e\xbd\x83\x32\x0e\x3d\xd3\x54\x29\x93\xa6\xa8\x65\x1c\xd8\x17\x95\xe4\xe3\xd6\xf0\x93\x59\x47\x37\x55\xa2\x1b\xab\x50\x64\xd8\xc4\xfe\xdc\x60\xd2\xf9\x68\x82\xce\x91\xfb\x36\x33\x6d\x79\x36\x0c\xc3\xb0\x78\xa0\x9c\x3b\x8b\x1c\x1a\x74\x55\x6c\xc0\xa1\xa7\xd6\x49\x2c\x1e\x05\xf9\xce\xc8\xec\x2d\x00\x00\xff\xff\x86\x03\xec\x73\xb7\x02\x00\x00")

func selectorsyncsetHiveOpenshiftIoOsdOauthTemplatesYamlBytes() ([]byte, error) {
	return bindataRead(
		_selectorsyncsetHiveOpenshiftIoOsdOauthTemplatesYaml,
		"SelectorSyncSet.hive.openshift.io/osd-oauth-templates.yaml",
	)
}

func selectorsyncsetHiveOpenshiftIoOsdOauthTemplatesYaml() (*asset, error) {
	bytes, err := selectorsyncsetHiveOpenshiftIoOsdOauthTemplatesYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "SelectorSyncSet.hive.openshift.io/osd-oauth-templates.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _selectorsyncsetHiveOpenshiftIoOsdRegistryYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x91\x41\x8b\x22\x31\x10\x85\xef\xfd\x2b\x8a\x66\xc1\x93\x8a\xd7\xdc\x9a\x5d\x71\x17\x56\x1d\x54\xe6\x2a\x35\xe9\xb2\x3b\x4c\x92\x0a\x49\xb5\xd0\x88\xff\x7d\x48\xab\xd8\x33\x07\x6f\x45\xa5\x5e\xbd\xef\x55\x30\x98\x77\x8a\xc9\xb0\x57\xd0\x9a\x33\xcd\x38\x90\x4f\xad\x39\xc9\xcc\xf0\xfc\xbc\x40\x1b\x5a\x5c\x14\x9f\xc6\xd7\x0a\xf6\x64\x49\x0b\xc7\x7d\xef\xf5\x9e\xa4\x70\x24\x58\xa3\xa0\x2a\x00\x2c\x7e\x90\x4d\xb9\x02\x70\xe8\xb1\xa1\xfa\xfb\xae\xc6\xc8\x5f\x4c\xad\x82\x5f\x97\x7f\xeb\x6a\xb5\x3c\x1e\xaa\xd5\xf5\xe5\xf8\x8e\x02\x6f\xd0\x51\x96\xec\x96\x6f\xdb\xe3\xa6\x5a\x2f\x5f\x48\x38\xd5\x0a\x4a\x89\x1d\x95\x05\x80\x1f\x94\x9c\xea\x69\xa4\xc6\x24\x89\x7d\x91\x02\xe9\x4c\xa8\x6d\x97\x84\xe2\x1f\x0a\x96\x7b\x47\x5e\x1e\xc1\x1e\xf8\xa2\xdb\xff\xa3\x3c\x00\x18\xcc\xc8\x4b\xb3\x9b\xdf\x09\x46\x86\x21\xcb\x68\x90\x4c\x61\x7c\x57\xe3\xb0\xa1\x07\x44\x5e\x13\x51\x38\xfe\xbc\x74\x71\xf3\x09\xb6\x5f\x73\x4d\x0a\xaa\x5c\x6e\xbd\xa6\xe1\xe1\xf6\x01\xbf\xd9\x9f\x4c\x33\x34\x6e\xf1\xee\x49\x86\xce\xe0\xaf\x60\x72\x29\x73\xce\x52\x5d\xca\x9a\x4e\xd8\x59\xd9\x71\x27\x54\xaa\xcc\x79\xbd\x4e\x9e\xb3\x87\x3e\x90\x02\x47\xb1\xc9\x1e\x91\x12\x77\x51\x53\xf5\x44\x48\xbd\xd7\xc5\x57\x00\x00\x00\xff\xff\x6b\xa8\xe3\x23\x22\x02\x00\x00")

func selectorsyncsetHiveOpenshiftIoOsdRegistryYamlBytes() ([]byte, error) {
	return bindataRead(
		_selectorsyncsetHiveOpenshiftIoOsdRegistryYaml,
		"SelectorSyncSet.hive.openshift.io/osd-registry.yaml",
	)
}

func selectorsyncsetHiveOpenshiftIoOsdRegistryYaml() (*asset, error) {
	bytes, err := selectorsyncsetHiveOpenshiftIoOsdRegistryYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "SelectorSyncSet.hive.openshift.io/osd-registry.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _selectorsyncsetHiveOpenshiftIoResourceQuotasYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x92\x4f\x8b\xdb\x40\x0c\xc5\xef\xfe\x14\xc2\x14\x72\xa9\x13\x72\x9d\x9b\xa1\x21\x2d\x34\x69\x49\x42\xaf\x41\x19\xab\xf6\xd0\xf9\xd7\x19\xd9\xad\x09\xfe\xee\x8b\xed\xf5\xc6\x0b\xd9\xdc\xf6\xb0\xb7\x41\xf2\xd3\xd3\xef\xc9\xe8\xd5\x2f\x0a\x51\x39\x2b\xa0\x52\x0d\x2d\x9d\x27\x1b\x2b\xf5\x9b\x97\xca\xad\x9a\x35\x6a\x5f\xe1\x3a\xf9\xa3\x6c\x21\xe0\x48\x9a\x24\xbb\x70\x6c\xad\x3c\x12\x27\x86\x18\x0b\x64\x14\x09\x80\xc6\x0b\xe9\xd8\xbf\x00\x0c\x5a\x2c\xa9\x78\x3d\xab\x54\xfc\x15\x63\x25\xe0\xd3\xf5\xdb\x2e\xdf\x6e\xce\xa7\x7c\xdb\x3d\xfc\xfc\x40\xde\xed\xd1\x50\x2f\x39\x6c\x7e\xfe\x38\xef\xf3\xdd\xe6\x81\xc4\xc5\x42\x40\xca\xa1\xa6\x34\x01\xb0\x83\x32\x50\x74\x75\x90\x94\xfd\xad\x1d\x63\x4c\xa2\x27\xd9\x2f\x29\x75\x1d\x99\xc2\x17\xf2\xda\xb5\x86\x2c\x4f\x6c\x13\x01\xcb\xea\xfb\x0c\x09\x00\xbd\x9a\xd9\x49\x67\x56\xcf\x4b\xcc\x3c\x7d\x2f\xa3\x41\x92\xc1\x3c\xda\x66\x9d\x8c\x33\xbc\x6e\x77\xae\x20\x01\xb9\xfe\x87\x6d\xcc\xfb\xc2\xd0\x1a\x13\xee\x71\xa3\x47\x49\x43\x6d\x44\x78\x31\xcd\x88\x65\x31\x34\x06\x1f\x01\x8b\x2b\xa4\xd3\x0d\x52\x01\xd7\x74\x3c\xc2\xf0\xbc\x9b\x50\x64\x17\xb0\xa4\xcc\x37\x63\x1e\x19\xfd\x27\xe3\x39\x15\x23\xc1\xe7\x37\x54\x14\x1a\x25\x29\xd3\x97\xbb\xaa\xae\xeb\x16\xb7\xad\x4e\xad\x27\x01\x86\x42\x49\xef\x94\x82\x71\x56\xb1\x0b\xca\x96\x1f\x2b\x8b\xe9\x57\xcc\x6f\xf8\xb1\xb5\x32\x79\x0a\x00\x00\xff\xff\x1a\x14\xb0\xd1\x83\x03\x00\x00")

func selectorsyncsetHiveOpenshiftIoResourceQuotasYamlBytes() ([]byte, error) {
	return bindataRead(
		_selectorsyncsetHiveOpenshiftIoResourceQuotasYaml,
		"SelectorSyncSet.hive.openshift.io/resource-quotas.yaml",
	)
}

func selectorsyncsetHiveOpenshiftIoResourceQuotasYaml() (*asset, error) {
	bytes, err := selectorsyncsetHiveOpenshiftIoResourceQuotasYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "SelectorSyncSet.hive.openshift.io/resource-quotas.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _serviceaccountOpenshiftSrePrunningSrePrunerSaYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\x8c\xb1\x0e\xc2\x30\x0c\x05\xf7\x7c\x85\xd5\xbd\x45\xac\xde\xf8\x06\x24\x76\x93\x3e\x8a\x45\xe3\x44\x76\xd2\xef\x47\x48\xc0\x76\x3a\x9d\x4e\x9a\xde\xe0\xa1\xd5\x98\x8e\x73\x7a\xa9\xad\x4c\x57\xf8\xa1\x19\x97\x9c\xeb\xb0\x9e\x0a\xba\xac\xd2\x85\x13\xd1\x2e\x77\xec\xf1\x21\x22\x69\xba\xd4\x06\x8b\xa7\x3e\xfa\x92\x6b\x39\x15\x31\xd9\xb0\x32\x4d\xdd\x07\xa6\x44\x64\x52\xc0\x14\x8e\xb9\xf9\x30\xf8\x1c\xf2\xb5\xd1\x24\x83\xe9\x3f\x98\x7f\x91\xda\x96\xde\x01\x00\x00\xff\xff\xf9\xfe\x19\x41\x97\x00\x00\x00")

func serviceaccountOpenshiftSrePrunningSrePrunerSaYamlBytes() ([]byte, error) {
	return bindataRead(
		_serviceaccountOpenshiftSrePrunningSrePrunerSaYaml,
		"ServiceAccount/openshift-sre-prunning/sre-pruner-sa.yaml",
	)
}

func serviceaccountOpenshiftSrePrunningSrePrunerSaYaml() (*asset, error) {
	bytes, err := serviceaccountOpenshiftSrePrunningSrePrunerSaYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ServiceAccount/openshift-sre-prunning/sre-pruner-sa.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _serviceaccountOpenshiftValeroManagedValeroOperatorYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\xcc\x31\x8a\xc3\x30\x10\x85\xe1\x5e\xa7\x18\xdc\xdb\x66\x5b\x75\x7b\x86\x85\xed\x67\xe5\xe7\xf5\x10\x49\x23\x46\x63\xe5\xfa\x21\xc1\x84\x74\x0f\xde\xc7\xcf\x4d\x7e\x61\x5d\xb4\x46\x1a\x5f\xe1\x26\x75\x8b\xf4\x03\x1b\x92\xf0\x9d\x92\x9e\xd5\x43\x81\xf3\xc6\xce\x31\x10\x65\xfe\x43\xee\xcf\x45\xc4\x4d\x16\x6d\xa8\xfd\x90\xdd\x97\xa4\x65\x2d\x5c\xf9\x1f\x5b\xa4\xc9\xed\xc4\xf4\x52\x87\x0c\x7c\x30\xd1\x35\xe5\xb3\x3b\x6c\x6e\x99\x7d\x57\x2b\x91\xf8\xde\x03\x51\xe5\x82\x48\x57\x63\x1e\xc8\x30\x9d\xb5\xc1\xd8\xd5\xae\xbf\x37\x4e\x88\xf4\xee\x5d\x2c\x3c\x02\x00\x00\xff\xff\xc4\x70\x40\xbd\xc8\x00\x00\x00")

func serviceaccountOpenshiftValeroManagedValeroOperatorYamlBytes() ([]byte, error) {
	return bindataRead(
		_serviceaccountOpenshiftValeroManagedValeroOperatorYaml,
		"ServiceAccount/openshift-valero/managed-valero-operator.yaml",
	)
}

func serviceaccountOpenshiftValeroManagedValeroOperatorYaml() (*asset, error) {
	bytes, err := serviceaccountOpenshiftValeroManagedValeroOperatorYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ServiceAccount/openshift-valero/managed-valero-operator.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _serviceaccountOpenshiftValeroValeroYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\xcb\xb1\x6e\xc3\x30\x0c\x04\xd0\x5d\x5f\x41\x78\xb7\x8d\xae\xdc\xfa\x0d\x05\xba\xb3\xf2\xb9\x26\x22\x89\x82\x44\x2b\xbf\x1f\x24\x30\x82\x6c\x77\xb8\x77\x52\xf5\x17\xad\xab\x15\xa6\xf1\x15\x6e\x5a\x36\xa6\x1f\xb4\xa1\x11\xdf\x31\xda\x59\x3c\x64\xb8\x6c\xe2\xc2\x81\x28\xc9\x1f\x52\x7f\x26\x22\xa9\xba\x58\x45\xe9\x87\xee\xbe\x44\xcb\x6b\x96\x22\xff\xd8\x98\x26\x6f\x27\xa6\x97\x3a\x74\xe0\x83\xa9\xad\x31\x9d\xdd\xd1\xe6\x9a\xc4\x77\x6b\x99\x49\xee\x3d\x10\x15\xc9\x60\x1a\x48\x68\x76\xd5\x5e\x25\x82\xe9\x7d\x9f\xaf\xf5\x11\x00\x00\xff\xff\xb8\xe9\x4b\x1f\xb7\x00\x00\x00")

func serviceaccountOpenshiftValeroValeroYamlBytes() ([]byte, error) {
	return bindataRead(
		_serviceaccountOpenshiftValeroValeroYaml,
		"ServiceAccount/openshift-valero/valero.yaml",
	)
}

func serviceaccountOpenshiftValeroValeroYaml() (*asset, error) {
	bytes, err := serviceaccountOpenshiftValeroValeroYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ServiceAccount/openshift-valero/valero.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _veleroManagedOpenshiftIoOpenshiftValeroClusterYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\x8e\x3d\xae\x83\x40\x10\x83\xfb\x3d\xc5\x88\x1e\x10\xed\x1c\x84\xde\x0f\xcc\x63\x94\xfd\xd3\xee\x42\xae\x1f\x25\x41\x51\xd2\xcd\xc8\xfe\x6c\x23\xdb\xcc\x52\x2d\x45\x95\x80\x88\x7f\xae\x43\xca\x8c\x75\xb7\xad\x0d\x96\xc6\x73\x82\xcf\x3b\x26\x77\xb3\xb8\xaa\xcc\xf4\x2c\xc9\x05\x36\xac\x68\x50\x27\xe2\xf1\x47\x5f\x9f\x97\x08\xb2\x7d\xe1\x4b\x0a\xe3\x15\xaa\xd2\xb5\x72\xb0\x7b\xb9\x76\x3b\xf9\xdb\xb2\xf8\xa3\x36\x96\x3e\x7b\xb4\x2d\x95\xa0\x82\x7b\x75\x22\x11\x81\x2a\x97\x7a\xfd\x35\x63\xa1\xca\x87\xef\xcf\xf7\xa6\x47\x00\x00\x00\xff\xff\x72\x41\x8c\xf9\xcb\x00\x00\x00")

func veleroManagedOpenshiftIoOpenshiftValeroClusterYamlBytes() ([]byte, error) {
	return bindataRead(
		_veleroManagedOpenshiftIoOpenshiftValeroClusterYaml,
		"Velero.managed.openshift.io/openshift-valero/cluster.yaml",
	)
}

func veleroManagedOpenshiftIoOpenshiftValeroClusterYaml() (*asset, error) {
	bytes, err := veleroManagedOpenshiftIoOpenshiftValeroClusterYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Velero.managed.openshift.io/openshift-valero/cluster.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"ClusterResourceQuota.quota.openshift.io/loadbalancer-quota.yaml":                                                           clusterresourcequotaQuotaOpenshiftIoLoadbalancerQuotaYaml,
	"ClusterResourceQuota.quota.openshift.io/persistent-volume-quota.yaml":                                                      clusterresourcequotaQuotaOpenshiftIoPersistentVolumeQuotaYaml,
	"ClusterRole.rbac.authorization.k8s.io/managed-velero-operator.yaml":                                                        clusterroleRbacAuthorizationK8sIoManagedVeleroOperatorYaml,
	"ClusterRole.rbac.authorization.k8s.io/osd-sre-admin.yaml":                                                                  clusterroleRbacAuthorizationK8sIoOsdSreAdminYaml,
	"ClusterRole.rbac.authorization.k8s.io/sre-pruner-buildsdeploys-cr.yaml":                                                    clusterroleRbacAuthorizationK8sIoSrePrunerBuildsdeploysCrYaml,
	"ClusterRoleBinding.rbac.authorization.k8s.io/managed-valero-operator.yaml":                                                 clusterrolebindingRbacAuthorizationK8sIoManagedValeroOperatorYaml,
	"ClusterRoleBinding.rbac.authorization.k8s.io/osd-sre-admin.yaml":                                                           clusterrolebindingRbacAuthorizationK8sIoOsdSreAdminYaml,
	"ClusterRoleBinding.rbac.authorization.k8s.io/osd-sre-cluster-admins.yaml":                                                  clusterrolebindingRbacAuthorizationK8sIoOsdSreClusterAdminsYaml,
	"ClusterRoleBinding.rbac.authorization.k8s.io/sre-pruner-buildsdeploys-pruning.yaml":                                        clusterrolebindingRbacAuthorizationK8sIoSrePrunerBuildsdeploysPruningYaml,
	"ClusterRoleBinding.rbac.authorization.k8s.io/sre-pruner-images.yaml":                                                       clusterrolebindingRbacAuthorizationK8sIoSrePrunerImagesYaml,
	"ClusterRoleBinding.rbac.authorization.k8s.io/valero.yaml":                                                                  clusterrolebindingRbacAuthorizationK8sIoValeroYaml,
	"ConfigMap/openshift-config/osd-ldap-ca-configmap.yaml":                                                                     configmapOpenshiftConfigOsdLdapCaConfigmapYaml,
	"ConfigMap/openshift-logging/curator.yaml":                                                                                  configmapOpenshiftLoggingCuratorYaml,
	"ConfigMap/openshift-monitoring/cluster-monitoring-config.yaml":                                                             configmapOpenshiftMonitoringClusterMonitoringConfigYaml,
	"Console.operator.openshift.io/cluster.yaml":                                                                                consoleOperatorOpenshiftIoClusterYaml,
	"CredentialsRequest.cloudcredential.openshift.io/openshift-valero/managed-velero-operator-iam-credentials.yaml":             credentialsrequestCloudcredentialOpenshiftIoOpenshiftValeroManagedVeleroOperatorIamCredentialsYaml,
	"CronJob/openshift-sre-pruning/build-pruner.yaml":                                                                           cronjobOpenshiftSrePruningBuildPrunerYaml,
	"CronJob/openshift-sre-pruning/deployments-pruner.yaml":                                                                     cronjobOpenshiftSrePruningDeploymentsPrunerYaml,
	"CronJob/openshift-sre-pruning/image-pruner.yaml":                                                                           cronjobOpenshiftSrePruningImagePrunerYaml,
	"CustomResourceDefinition.apiextensions.k8s.io/veleros.managed.openshift.io.yaml":                                           customresourcedefinitionApiextensionsK8sIoVelerosManagedOpenshiftIoYaml,
	"Deployment.apps/openshift-velero/managed-velero-operator.yaml":                                                             deploymentAppsOpenshiftVeleroManagedVeleroOperatorYaml,
	"Group.user.openshift.io/osd-sre-cluster-admins.yaml":                                                                       groupUserOpenshiftIoOsdSreClusterAdminsYaml,
	"Namespace/openshift-codeready-workspaces.yaml":                                                                             namespaceOpenshiftCodereadyWorkspacesYaml,
	"Namespace/openshift-logging.yaml":                                                                                          namespaceOpenshiftLoggingYaml,
	"Namespace/openshift-sre-pruning.yaml":                                                                                      namespaceOpenshiftSrePruningYaml,
	"Namespace/openshift-valero.yaml":                                                                                           namespaceOpenshiftValeroYaml,
	"OperatorGroup.operators.coreos.com/openshift-codeready-workspaces/openshift-codeready-workspaces.yaml":                     operatorgroupOperatorsCoreosComOpenshiftCodereadyWorkspacesOpenshiftCodereadyWorkspacesYaml,
	"OperatorGroup.operators.coreos.com/openshift-logging/openshift-logging.yaml":                                               operatorgroupOperatorsCoreosComOpenshiftLoggingOpenshiftLoggingYaml,
	"PrometheusRule.monitoring.coreos.com/openshift-monitoring/sre-alerts-stuck-builds.yaml":                                    prometheusruleMonitoringCoreosComOpenshiftMonitoringSreAlertsStuckBuildsYaml,
	"PrometheusRule.monitoring.coreos.com/openshift-monitoring/sre-alerts-stuck-volumes.yaml":                                   prometheusruleMonitoringCoreosComOpenshiftMonitoringSreAlertsStuckVolumesYaml,
	"PrometheusRule.monitoring.coreos.com/openshift-monitoring/sre-cluster-operator-down-alerts.yaml":                           prometheusruleMonitoringCoreosComOpenshiftMonitoringSreClusterOperatorDownAlertsYaml,
	"PrometheusRule.monitoring.coreos.com/openshift-monitoring/sre-configure-alertmanager-operator-offline-alerts.yaml":         prometheusruleMonitoringCoreosComOpenshiftMonitoringSreConfigureAlertmanagerOperatorOfflineAlertsYaml,
	"PrometheusRule.monitoring.coreos.com/openshift-monitoring/sre-dedicated-admin-operator-offline-alerts.yaml":                prometheusruleMonitoringCoreosComOpenshiftMonitoringSreDedicatedAdminOperatorOfflineAlertsYaml,
	"PrometheusRule.monitoring.coreos.com/openshift-monitoring/sre-dns-alerts.yaml":                                             prometheusruleMonitoringCoreosComOpenshiftMonitoringSreDnsAlertsYaml,
	"PrometheusRule.monitoring.coreos.com/openshift-monitoring/sre-ebs-iops-burstbalance.yaml":                                  prometheusruleMonitoringCoreosComOpenshiftMonitoringSreEbsIopsBurstbalanceYaml,
	"PrometheusRule.monitoring.coreos.com/openshift-monitoring/sre-excessive-memory.yaml":                                       prometheusruleMonitoringCoreosComOpenshiftMonitoringSreExcessiveMemoryYaml,
	"PrometheusRule.monitoring.coreos.com/openshift-monitoring/sre-filesysfull.yaml":                                            prometheusruleMonitoringCoreosComOpenshiftMonitoringSreFilesysfullYaml,
	"PrometheusRule.monitoring.coreos.com/openshift-monitoring/sre-machine-api-node-mismatch.yaml":                              prometheusruleMonitoringCoreosComOpenshiftMonitoringSreMachineApiNodeMismatchYaml,
	"PrometheusRule.monitoring.coreos.com/openshift-monitoring/sre-node-unschedulable.yaml":                                     prometheusruleMonitoringCoreosComOpenshiftMonitoringSreNodeUnschedulableYaml,
	"PrometheusRule.monitoring.coreos.com/openshift-monitoring/sre-ocp-overrides.yaml":                                          prometheusruleMonitoringCoreosComOpenshiftMonitoringSreOcpOverridesYaml,
	"PrometheusRule.monitoring.coreos.com/openshift-monitoring/sre-pruning.yaml":                                                prometheusruleMonitoringCoreosComOpenshiftMonitoringSrePruningYaml,
	"PrometheusRule.monitoring.coreos.com/openshift-monitoring/sre-router-health.yaml":                                          prometheusruleMonitoringCoreosComOpenshiftMonitoringSreRouterHealthYaml,
	"PrometheusRule.monitoring.coreos.com/openshift-monitoring/sre-telemeter-client.yaml":                                       prometheusruleMonitoringCoreosComOpenshiftMonitoringSreTelemeterClientYaml,
	"ResourceQuota/openshift-logging/logging-storage-quota.yaml":                                                                resourcequotaOpenshiftLoggingLoggingStorageQuotaYaml,
	"Role.rbac.authorization.k8s.io/kube-system/cluster-config-v1-reader.yaml":                                                  roleRbacAuthorizationK8sIoKubeSystemClusterConfigV1ReaderYaml,
	"Role.rbac.authorization.k8s.io/openshift-codeready-workspaces/dedicated-admins-openshift-codeready-workspaces.yaml":        roleRbacAuthorizationK8sIoOpenshiftCodereadyWorkspacesDedicatedAdminsOpenshiftCodereadyWorkspacesYaml,
	"Role.rbac.authorization.k8s.io/openshift-logging/dedicated-admins-openshift-logging.yaml":                                  roleRbacAuthorizationK8sIoOpenshiftLoggingDedicatedAdminsOpenshiftLoggingYaml,
	"Role.rbac.authorization.k8s.io/openshift-velero/ managed-velero-operator.yaml":                                             roleRbacAuthorizationK8sIoOpenshiftVeleroManagedVeleroOperatorYaml,
	"Role.rbac.authorization.k8s.io/openshift-velero/prometheus-k8s.yaml":                                                       roleRbacAuthorizationK8sIoOpenshiftVeleroPrometheusK8sYaml,
	"RoleBinding.rbac.authorization.k8s.io/kube-system/managed-valero-operator-cluster-config-v1-reader.yaml":                   rolebindingRbacAuthorizationK8sIoKubeSystemManagedValeroOperatorClusterConfigV1ReaderYaml,
	"RoleBinding.rbac.authorization.k8s.io/openshift-codeready-workspaces/dedicated-admins-openshift-codeready-workspaces.yaml": rolebindingRbacAuthorizationK8sIoOpenshiftCodereadyWorkspacesDedicatedAdminsOpenshiftCodereadyWorkspacesYaml,
	"RoleBinding.rbac.authorization.k8s.io/openshift-logging/dedicated-admins-openshift-logging.yaml":                           rolebindingRbacAuthorizationK8sIoOpenshiftLoggingDedicatedAdminsOpenshiftLoggingYaml,
	"RoleBinding.rbac.authorization.k8s.io/openshift-valero/managed-valero-operator.yaml":                                       rolebindingRbacAuthorizationK8sIoOpenshiftValeroManagedValeroOperatorYaml,
	"RoleBinding.rbac.authorization.k8s.io/openshift-valero/prometheus-k8s.yaml":                                                rolebindingRbacAuthorizationK8sIoOpenshiftValeroPrometheusK8sYaml,
	"Schedule.valero.io/openshift-velero/daily-full-backup.yaml":                                                                scheduleValeroIoOpenshiftVeleroDailyFullBackupYaml,
	"Schedule.valero.io/openshift-velero/hourly-object-backup.yaml":                                                             scheduleValeroIoOpenshiftVeleroHourlyObjectBackupYaml,
	"Schedule.valero.io/openshift-velero/weekly-full-backup.yaml":                                                               scheduleValeroIoOpenshiftVeleroWeeklyFullBackupYaml,
	"Secret/openshift-config/osd-oauth-templates-errors.yaml":                                                                   secretOpenshiftConfigOsdOauthTemplatesErrorsYaml,
	"Secret/openshift-config/osd-oauth-templates-login.yaml":                                                                    secretOpenshiftConfigOsdOauthTemplatesLoginYaml,
	"Secret/openshift-config/osd-oauth-templates-providers.yaml":                                                                secretOpenshiftConfigOsdOauthTemplatesProvidersYaml,
	"SelectorSyncIdentityProvider.hive.openshift.io/osd-sre-idenitityprovider.yaml":                                             selectorsyncidentityproviderHiveOpenshiftIoOsdSreIdenitityproviderYaml,
	"SelectorSyncSet.hive.openshift.io/kubelet-config.yaml":                                                                     selectorsyncsetHiveOpenshiftIoKubeletConfigYaml,
	"SelectorSyncSet.hive.openshift.io/osd-curated-operators.yaml":                                                              selectorsyncsetHiveOpenshiftIoOsdCuratedOperatorsYaml,
	"SelectorSyncSet.hive.openshift.io/osd-oauth-templates.yaml":                                                                selectorsyncsetHiveOpenshiftIoOsdOauthTemplatesYaml,
	"SelectorSyncSet.hive.openshift.io/osd-registry.yaml":                                                                       selectorsyncsetHiveOpenshiftIoOsdRegistryYaml,
	"SelectorSyncSet.hive.openshift.io/resource-quotas.yaml":                                                                    selectorsyncsetHiveOpenshiftIoResourceQuotasYaml,
	"ServiceAccount/openshift-sre-prunning/sre-pruner-sa.yaml":                                                                  serviceaccountOpenshiftSrePrunningSrePrunerSaYaml,
	"ServiceAccount/openshift-valero/managed-valero-operator.yaml":                                                              serviceaccountOpenshiftValeroManagedValeroOperatorYaml,
	"ServiceAccount/openshift-valero/valero.yaml":                                                                               serviceaccountOpenshiftValeroValeroYaml,
	"Velero.managed.openshift.io/openshift-valero/cluster.yaml":                                                                 veleroManagedOpenshiftIoOpenshiftValeroClusterYaml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"ClusterResourceQuota.quota.openshift.io": {nil, map[string]*bintree{
		"loadbalancer-quota.yaml":      {clusterresourcequotaQuotaOpenshiftIoLoadbalancerQuotaYaml, map[string]*bintree{}},
		"persistent-volume-quota.yaml": {clusterresourcequotaQuotaOpenshiftIoPersistentVolumeQuotaYaml, map[string]*bintree{}},
	}},
	"ClusterRole.rbac.authorization.k8s.io": {nil, map[string]*bintree{
		"managed-velero-operator.yaml":     {clusterroleRbacAuthorizationK8sIoManagedVeleroOperatorYaml, map[string]*bintree{}},
		"osd-sre-admin.yaml":               {clusterroleRbacAuthorizationK8sIoOsdSreAdminYaml, map[string]*bintree{}},
		"sre-pruner-buildsdeploys-cr.yaml": {clusterroleRbacAuthorizationK8sIoSrePrunerBuildsdeploysCrYaml, map[string]*bintree{}},
	}},
	"ClusterRoleBinding.rbac.authorization.k8s.io": {nil, map[string]*bintree{
		"managed-valero-operator.yaml":          {clusterrolebindingRbacAuthorizationK8sIoManagedValeroOperatorYaml, map[string]*bintree{}},
		"osd-sre-admin.yaml":                    {clusterrolebindingRbacAuthorizationK8sIoOsdSreAdminYaml, map[string]*bintree{}},
		"osd-sre-cluster-admins.yaml":           {clusterrolebindingRbacAuthorizationK8sIoOsdSreClusterAdminsYaml, map[string]*bintree{}},
		"sre-pruner-buildsdeploys-pruning.yaml": {clusterrolebindingRbacAuthorizationK8sIoSrePrunerBuildsdeploysPruningYaml, map[string]*bintree{}},
		"sre-pruner-images.yaml":                {clusterrolebindingRbacAuthorizationK8sIoSrePrunerImagesYaml, map[string]*bintree{}},
		"valero.yaml":                           {clusterrolebindingRbacAuthorizationK8sIoValeroYaml, map[string]*bintree{}},
	}},
	"ConfigMap": {nil, map[string]*bintree{
		"openshift-config": {nil, map[string]*bintree{
			"osd-ldap-ca-configmap.yaml": {configmapOpenshiftConfigOsdLdapCaConfigmapYaml, map[string]*bintree{}},
		}},
		"openshift-logging": {nil, map[string]*bintree{
			"curator.yaml": {configmapOpenshiftLoggingCuratorYaml, map[string]*bintree{}},
		}},
		"openshift-monitoring": {nil, map[string]*bintree{
			"cluster-monitoring-config.yaml": {configmapOpenshiftMonitoringClusterMonitoringConfigYaml, map[string]*bintree{}},
		}},
	}},
	"Console.operator.openshift.io": {nil, map[string]*bintree{
		"cluster.yaml": {consoleOperatorOpenshiftIoClusterYaml, map[string]*bintree{}},
	}},
	"CredentialsRequest.cloudcredential.openshift.io": {nil, map[string]*bintree{
		"openshift-valero": {nil, map[string]*bintree{
			"managed-velero-operator-iam-credentials.yaml": {credentialsrequestCloudcredentialOpenshiftIoOpenshiftValeroManagedVeleroOperatorIamCredentialsYaml, map[string]*bintree{}},
		}},
	}},
	"CronJob": {nil, map[string]*bintree{
		"openshift-sre-pruning": {nil, map[string]*bintree{
			"build-pruner.yaml":       {cronjobOpenshiftSrePruningBuildPrunerYaml, map[string]*bintree{}},
			"deployments-pruner.yaml": {cronjobOpenshiftSrePruningDeploymentsPrunerYaml, map[string]*bintree{}},
			"image-pruner.yaml":       {cronjobOpenshiftSrePruningImagePrunerYaml, map[string]*bintree{}},
		}},
	}},
	"CustomResourceDefinition.apiextensions.k8s.io": {nil, map[string]*bintree{
		"veleros.managed.openshift.io.yaml": {customresourcedefinitionApiextensionsK8sIoVelerosManagedOpenshiftIoYaml, map[string]*bintree{}},
	}},
	"Deployment.apps": {nil, map[string]*bintree{
		"openshift-velero": {nil, map[string]*bintree{
			"managed-velero-operator.yaml": {deploymentAppsOpenshiftVeleroManagedVeleroOperatorYaml, map[string]*bintree{}},
		}},
	}},
	"Group.user.openshift.io": {nil, map[string]*bintree{
		"osd-sre-cluster-admins.yaml": {groupUserOpenshiftIoOsdSreClusterAdminsYaml, map[string]*bintree{}},
	}},
	"Namespace": {nil, map[string]*bintree{
		"openshift-codeready-workspaces.yaml": {namespaceOpenshiftCodereadyWorkspacesYaml, map[string]*bintree{}},
		"openshift-logging.yaml":              {namespaceOpenshiftLoggingYaml, map[string]*bintree{}},
		"openshift-sre-pruning.yaml":          {namespaceOpenshiftSrePruningYaml, map[string]*bintree{}},
		"openshift-valero.yaml":               {namespaceOpenshiftValeroYaml, map[string]*bintree{}},
	}},
	"OperatorGroup.operators.coreos.com": {nil, map[string]*bintree{
		"openshift-codeready-workspaces": {nil, map[string]*bintree{
			"openshift-codeready-workspaces.yaml": {operatorgroupOperatorsCoreosComOpenshiftCodereadyWorkspacesOpenshiftCodereadyWorkspacesYaml, map[string]*bintree{}},
		}},
		"openshift-logging": {nil, map[string]*bintree{
			"openshift-logging.yaml": {operatorgroupOperatorsCoreosComOpenshiftLoggingOpenshiftLoggingYaml, map[string]*bintree{}},
		}},
	}},
	"PrometheusRule.monitoring.coreos.com": {nil, map[string]*bintree{
		"openshift-monitoring": {nil, map[string]*bintree{
			"sre-alerts-stuck-builds.yaml":                            {prometheusruleMonitoringCoreosComOpenshiftMonitoringSreAlertsStuckBuildsYaml, map[string]*bintree{}},
			"sre-alerts-stuck-volumes.yaml":                           {prometheusruleMonitoringCoreosComOpenshiftMonitoringSreAlertsStuckVolumesYaml, map[string]*bintree{}},
			"sre-cluster-operator-down-alerts.yaml":                   {prometheusruleMonitoringCoreosComOpenshiftMonitoringSreClusterOperatorDownAlertsYaml, map[string]*bintree{}},
			"sre-configure-alertmanager-operator-offline-alerts.yaml": {prometheusruleMonitoringCoreosComOpenshiftMonitoringSreConfigureAlertmanagerOperatorOfflineAlertsYaml, map[string]*bintree{}},
			"sre-dedicated-admin-operator-offline-alerts.yaml":        {prometheusruleMonitoringCoreosComOpenshiftMonitoringSreDedicatedAdminOperatorOfflineAlertsYaml, map[string]*bintree{}},
			"sre-dns-alerts.yaml":                                     {prometheusruleMonitoringCoreosComOpenshiftMonitoringSreDnsAlertsYaml, map[string]*bintree{}},
			"sre-ebs-iops-burstbalance.yaml":                          {prometheusruleMonitoringCoreosComOpenshiftMonitoringSreEbsIopsBurstbalanceYaml, map[string]*bintree{}},
			"sre-excessive-memory.yaml":                               {prometheusruleMonitoringCoreosComOpenshiftMonitoringSreExcessiveMemoryYaml, map[string]*bintree{}},
			"sre-filesysfull.yaml":                                    {prometheusruleMonitoringCoreosComOpenshiftMonitoringSreFilesysfullYaml, map[string]*bintree{}},
			"sre-machine-api-node-mismatch.yaml":                      {prometheusruleMonitoringCoreosComOpenshiftMonitoringSreMachineApiNodeMismatchYaml, map[string]*bintree{}},
			"sre-node-unschedulable.yaml":                             {prometheusruleMonitoringCoreosComOpenshiftMonitoringSreNodeUnschedulableYaml, map[string]*bintree{}},
			"sre-ocp-overrides.yaml":                                  {prometheusruleMonitoringCoreosComOpenshiftMonitoringSreOcpOverridesYaml, map[string]*bintree{}},
			"sre-pruning.yaml":                                        {prometheusruleMonitoringCoreosComOpenshiftMonitoringSrePruningYaml, map[string]*bintree{}},
			"sre-router-health.yaml":                                  {prometheusruleMonitoringCoreosComOpenshiftMonitoringSreRouterHealthYaml, map[string]*bintree{}},
			"sre-telemeter-client.yaml":                               {prometheusruleMonitoringCoreosComOpenshiftMonitoringSreTelemeterClientYaml, map[string]*bintree{}},
		}},
	}},
	"ResourceQuota": {nil, map[string]*bintree{
		"openshift-logging": {nil, map[string]*bintree{
			"logging-storage-quota.yaml": {resourcequotaOpenshiftLoggingLoggingStorageQuotaYaml, map[string]*bintree{}},
		}},
	}},
	"Role.rbac.authorization.k8s.io": {nil, map[string]*bintree{
		"kube-system": {nil, map[string]*bintree{
			"cluster-config-v1-reader.yaml": {roleRbacAuthorizationK8sIoKubeSystemClusterConfigV1ReaderYaml, map[string]*bintree{}},
		}},
		"openshift-codeready-workspaces": {nil, map[string]*bintree{
			"dedicated-admins-openshift-codeready-workspaces.yaml": {roleRbacAuthorizationK8sIoOpenshiftCodereadyWorkspacesDedicatedAdminsOpenshiftCodereadyWorkspacesYaml, map[string]*bintree{}},
		}},
		"openshift-logging": {nil, map[string]*bintree{
			"dedicated-admins-openshift-logging.yaml": {roleRbacAuthorizationK8sIoOpenshiftLoggingDedicatedAdminsOpenshiftLoggingYaml, map[string]*bintree{}},
		}},
		"openshift-velero": {nil, map[string]*bintree{
			" managed-velero-operator.yaml": {roleRbacAuthorizationK8sIoOpenshiftVeleroManagedVeleroOperatorYaml, map[string]*bintree{}},
			"prometheus-k8s.yaml":           {roleRbacAuthorizationK8sIoOpenshiftVeleroPrometheusK8sYaml, map[string]*bintree{}},
		}},
	}},
	"RoleBinding.rbac.authorization.k8s.io": {nil, map[string]*bintree{
		"kube-system": {nil, map[string]*bintree{
			"managed-valero-operator-cluster-config-v1-reader.yaml": {rolebindingRbacAuthorizationK8sIoKubeSystemManagedValeroOperatorClusterConfigV1ReaderYaml, map[string]*bintree{}},
		}},
		"openshift-codeready-workspaces": {nil, map[string]*bintree{
			"dedicated-admins-openshift-codeready-workspaces.yaml": {rolebindingRbacAuthorizationK8sIoOpenshiftCodereadyWorkspacesDedicatedAdminsOpenshiftCodereadyWorkspacesYaml, map[string]*bintree{}},
		}},
		"openshift-logging": {nil, map[string]*bintree{
			"dedicated-admins-openshift-logging.yaml": {rolebindingRbacAuthorizationK8sIoOpenshiftLoggingDedicatedAdminsOpenshiftLoggingYaml, map[string]*bintree{}},
		}},
		"openshift-valero": {nil, map[string]*bintree{
			"managed-valero-operator.yaml": {rolebindingRbacAuthorizationK8sIoOpenshiftValeroManagedValeroOperatorYaml, map[string]*bintree{}},
			"prometheus-k8s.yaml":          {rolebindingRbacAuthorizationK8sIoOpenshiftValeroPrometheusK8sYaml, map[string]*bintree{}},
		}},
	}},
	"Schedule.valero.io": {nil, map[string]*bintree{
		"openshift-velero": {nil, map[string]*bintree{
			"daily-full-backup.yaml":    {scheduleValeroIoOpenshiftVeleroDailyFullBackupYaml, map[string]*bintree{}},
			"hourly-object-backup.yaml": {scheduleValeroIoOpenshiftVeleroHourlyObjectBackupYaml, map[string]*bintree{}},
			"weekly-full-backup.yaml":   {scheduleValeroIoOpenshiftVeleroWeeklyFullBackupYaml, map[string]*bintree{}},
		}},
	}},
	"Secret": {nil, map[string]*bintree{
		"openshift-config": {nil, map[string]*bintree{
			"osd-oauth-templates-errors.yaml":    {secretOpenshiftConfigOsdOauthTemplatesErrorsYaml, map[string]*bintree{}},
			"osd-oauth-templates-login.yaml":     {secretOpenshiftConfigOsdOauthTemplatesLoginYaml, map[string]*bintree{}},
			"osd-oauth-templates-providers.yaml": {secretOpenshiftConfigOsdOauthTemplatesProvidersYaml, map[string]*bintree{}},
		}},
	}},
	"SelectorSyncIdentityProvider.hive.openshift.io": {nil, map[string]*bintree{
		"osd-sre-idenitityprovider.yaml": {selectorsyncidentityproviderHiveOpenshiftIoOsdSreIdenitityproviderYaml, map[string]*bintree{}},
	}},
	"SelectorSyncSet.hive.openshift.io": {nil, map[string]*bintree{
		"kubelet-config.yaml":        {selectorsyncsetHiveOpenshiftIoKubeletConfigYaml, map[string]*bintree{}},
		"osd-curated-operators.yaml": {selectorsyncsetHiveOpenshiftIoOsdCuratedOperatorsYaml, map[string]*bintree{}},
		"osd-oauth-templates.yaml":   {selectorsyncsetHiveOpenshiftIoOsdOauthTemplatesYaml, map[string]*bintree{}},
		"osd-registry.yaml":          {selectorsyncsetHiveOpenshiftIoOsdRegistryYaml, map[string]*bintree{}},
		"resource-quotas.yaml":       {selectorsyncsetHiveOpenshiftIoResourceQuotasYaml, map[string]*bintree{}},
	}},
	"ServiceAccount": {nil, map[string]*bintree{
		"openshift-sre-prunning": {nil, map[string]*bintree{
			"sre-pruner-sa.yaml": {serviceaccountOpenshiftSrePrunningSrePrunerSaYaml, map[string]*bintree{}},
		}},
		"openshift-valero": {nil, map[string]*bintree{
			"managed-valero-operator.yaml": {serviceaccountOpenshiftValeroManagedValeroOperatorYaml, map[string]*bintree{}},
			"valero.yaml":                  {serviceaccountOpenshiftValeroValeroYaml, map[string]*bintree{}},
		}},
	}},
	"Velero.managed.openshift.io": {nil, map[string]*bintree{
		"openshift-valero": {nil, map[string]*bintree{
			"cluster.yaml": {veleroManagedOpenshiftIoOpenshiftValeroClusterYaml, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
